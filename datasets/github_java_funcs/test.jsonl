{"author": "applewjg", "file": "BinaryTreePostorderTraversal.1.java", "original_string": "public List<Integer> postorderTraversal_2(TreeNode root) {\n        List<Integer> res = new ArrayList<Integer>();\n        if (root == null) return res;\n        List<Integer> left = postorderTraversal(root.left);\n        List<Integer> right = postorderTraversal(root.right);\n        res.addAll(left);\n        res.addAll(right);\n        res.add(root.val);\n        return res;\n    }"}
{"author": "quyi", "file": "TSOperate.140.java", "original_string": "@Override\n    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof genMissionId_args)\n        return this.equals((genMissionId_args)that);\n      return false;\n    }"}
{"author": "golangpkg", "file": "RateLimiterConfigurationManagerTest.5.java", "original_string": "@Test\n    public void testStreamExpectedToBeClosed() throws ExecutionException {\n        UUID randomUUID = UUID.randomUUID();\n        rateLimiterConfigurationManager.configurationMap.put(randomUUID, new RequestUploadProcessingConfiguration());\n        Assert.assertThat(rateLimiterConfigurationManager.configurationMap.get(randomUUID).isPaused(), CoreMatchers.is(false));\n        rateLimiterConfigurationManager.configurationMap.get(randomUUID).pause();\n        Assert.assertThat(rateLimiterConfigurationManager.configurationMap.get(randomUUID).isPaused(), CoreMatchers.is(true));\n        Assert.assertThat(rateLimiterConfigurationManager.configurationMap.get(randomUUID).isPaused(), CoreMatchers.is(true));\n        rateLimiterConfigurationManager.configurationMap.get(randomUUID).resume();\n        Assert.assertThat(rateLimiterConfigurationManager.configurationMap.get(randomUUID).isPaused(), CoreMatchers.is(false));\n    }"}
{"author": "terma", "file": "TcpProxyConnector.4.java", "original_string": "public void register() throws ClosedChannelException {\n        int clientOps = 0;\n        if (serverBuffer.isReadyToWrite()) clientOps |= SelectionKey.OP_READ;\n        if (clientBuffer.isReadyToRead()) clientOps |= SelectionKey.OP_WRITE;\n        clientChannel.register(selector, clientOps, this);\n        int serverOps = 0;\n        if (clientBuffer.isReadyToWrite()) serverOps |= SelectionKey.OP_READ;\n        if (serverBuffer.isReadyToRead()) serverOps |= SelectionKey.OP_WRITE;\n        serverChannel.register(selector, serverOps, this);\n    }"}
{"author": "quyi", "file": "TSOperate.543.java", "original_string": "@Override\n    public int compareTo(updateAppStatus_result other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetSuccess()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetIre()).compareTo(other.isSetIre());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetIre()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ire, other.ire);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetUe()).compareTo(other.isSetUe());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetUe()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ue, other.ue);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }"}
{"author": "newweb", "file": "OrderSmallDaoImp.5.java", "original_string": "@Override\n    public OrderSmall selectOrderSmallBySmallIdInOrderId(int smallId,\n            String orderid) {\n        Query query = sessionFactory.getCurrentSession().createSQLQuery(\"select * from  t_order_smallGoods where smallID=? and orderID=? \")\n                .addEntity(OrderSmall.class);\n        query.setInteger(0, smallId);\n        query.setString(1, orderid);\n        return (OrderSmall) query.uniqueResult();\n    }"}
{"author": "seadroid", "file": "CopyMoveDialog.4.java", "original_string": "@Override\n    protected void onDialogCreated(Dialog dialog) {\n        int strId;\n        if (ctx.isdir) {\n            strId = ctx.isCopy() ? R.string.copy_folder_ing : R.string.move_folder_ing;\n        } else {\n            strId = ctx.isCopy() ? R.string.copy_file_ing : R.string.move_file_ing;\n        }\n        String str = getActivity().getString(strId);\n        setTitle(str + \" \" + ctx.srcFn);\n        }"}
{"author": "quyi", "file": "EngineOperate.453.java", "original_string": "@Override\n    public int compareTo(searchAllEng_args other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      return 0;\n    }"}
{"author": "bethrobson", "file": "DotComBust.0.java", "original_string": "private void setUpGame() {\n        DotCom one = new DotCom();\n        one.setName(\"Pets.com\");\n        DotCom two = new DotCom();\n        two.setName(\"eToys.com\");\n        DotCom three = new DotCom();\n        three.setName(\"Go2.com\");\n        dotComsList.add(one);\n        dotComsList.add(two);\n        dotComsList.add(three);\n        System.out.println(\"Your goal is to sink three dot coms.\");\n        System.out.println(\"Pets.com, eToys.com, Go2.com\");\n        System.out.println(\"Try to sink them all in the fewest number of guesses\");\n        for (DotCom dotComSet : dotComsList) {\n            ArrayList<String> newLocation = helper.placeDotCom(3);\n            dotComSet.setLocationCells(newLocation);\n        }\n    }"}
{"author": "quyi", "file": "TestClientForNercis.12.java", "original_string": "@Test\n    public void testSubmitJob002() {\n        List<JobOperationRequirement> jobOpList = new ArrayList<JobOperationRequirement>();\n        JobOperationRequirement taskOp2 = new JobOperationRequirement();\n        taskOp2.setJobLifecycle(JobLifecycle.ANALYSIS);\n        taskOp2.setJobPhase(JobPhase.PROCESS);\n        taskOp2.setJobExecutionMode(JobExecutionMode.EXCLUSIVE);\n        taskOp2.setJobReturnMode(JobReturnMode.PASSIVE);\n        taskOp2.setTimeout(180000);\n        jobOpList.add(taskOp2);\n        List<JobParameter> jobParameterList = new ArrayList<JobParameter>();\n        JobParameter taskParam1 = new JobParameter();\n        taskParam1.setJobPhase(JobPhase.PROCESS);\n        taskParam1.setAppId(1101097200000001L);\n        List<ContextParameter> contextParamList1 = new ArrayList<ContextParameter>();\n        ContextParameter parameter1 = new ContextParameter();\n        parameter1.setSequenceNum(1);\n        parameter1.setContent(\"analysis/apk/00/45/0045e7a851a8adcdd6590a944b057b1c.apk\");\n        parameter1.setNeedDownload(true);\n        contextParamList1.add(parameter1);\n        ContextParameter parameter2 = new ContextParameter();\n        parameter2.setSequenceNum(2);\n        parameter2.setContent(String.valueOf(taskParam1.getAppId()));\n        parameter2.setNeedDownload(false);\n        contextParamList1.add(parameter2);\n        taskParam1.setContextParameterList(contextParamList1);\n        jobParameterList.add(taskParam1);\n        List<JobPhase> jobPhaseList = new ArrayList<JobPhase>();\n        jobPhaseList.add(JobPhase.PROCESS);\n        List<JobResourceRequirement> jobRescList = new ArrayList<JobResourceRequirement>();\n        JobResourceRequirement jobResc2 = new JobResourceRequirement();\n        jobResc2.setJobLifecycle(JobLifecycle.ANALYSIS);\n        jobResc2.setJobPhase(JobPhase.PROCESS);\n        jobResc2.setClusterType(ClusterType.DEDICATED);\n        jobResc2.setNodeType(NodeType.INTERNET_ACCESSIBLE);\n        jobRescList.add(jobResc2);\n        TaskClientService.Client taskClient = null;\n        long jobId = 0L;\n        try {\n            taskClient = TaskClientRpcUtils.getReceiver(taskmanager_address, taskmanager_submit_port, 5000, 5);\n        } catch (TTransportException e) {\n            e.printStackTrace();\n        }\n        try {\n            jobId = taskClient.submitJobForMission(0, AppType.APK, JobLifecycle.ANALYSIS, jobPhaseList, JobDistributionMode.PARALLEL,\n                    com.softsec.tase.common.rpc.domain.job.JobPriority.MEDIUM, jobOpList, jobRescList, jobParameterList, 5000L, null);\n        } catch (InvalidRequestException e) {\n            e.printStackTrace();\n        } catch (UnavailableException e) {\n            e.printStackTrace();\n        } catch (TimeoutException e) {\n            e.printStackTrace();\n        } catch (TException e) {\n            e.printStackTrace();\n        }\n        System.out.println(jobId);\n    }"}
{"author": "jfpl", "file": "PushMessageReceiver.9.java", "original_string": "public static void setBind(Context context, boolean flag, String[] args) {\n        String flagStr = \"not\";\n        if (flag) {\n            flagStr = \"ok\";\n        }\n        SharedPreferences sp = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        Editor editor = sp.edit();\n        editor.putString(\"bind_flag\", flagStr);\n        if (flag) {\n            editor.putString(\"app_id\", args[0]);\n            editor.putString(\"channel_id\", args[1]);\n            editor.putString(\"user_id\", args[2]);\n        } else {\n            editor.remove(\"app_id\");\n            editor.remove(\"channel_id\");\n            editor.remove(\"user_id\");\n        }\n        editor.commit();\n    }"}
{"author": "vlc_android_macbuild", "file": "DebugLog.14.java", "original_string": "public static int vfmt(String tag, String fmt, Object... args) {\n        if (ENABLE_VERBOSE) {\n            String msg = String.format(fmt, args);\n            return Log.v(tag, msg);\n        }\n        return 0;\n    }"}
{"author": "vlc_android_macbuild", "file": "SystemUIHelper.2.java", "original_string": "public static void showNavigation(Activity activity) {\n        if (activity == null)\n            return;\n        if (!BuildHelper.isApi11_HoneyCombOrLater())\n            return;\n        int visibility = View.SYSTEM_UI_FLAG_FULLSCREEN\n                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION;\n        setSystemUiVisibility(activity, visibility);\n    }"}
{"author": "chacha", "file": "DigestUtil.2.java", "original_string": "public static String digestPassword(String password) {  \n        try {  \n            if (password != null && !\"\".equals(password)) {  \n                return digestString(password, SHA_256);  \n            } else  \n                return null;  \n        } catch (NoSuchAlgorithmException nsae) {  \n            throw new RuntimeException(\"Security error: \" + nsae);  \n        }  \n    }"}
{"author": "brianway", "file": "Run3_ConditionManyToMany.0.java", "original_string": "public static void main(String[] args) {\n        MyService service = new MyService();\n        ThreadA[] threadAs = new ThreadA[10];\n        ThreadB[] threadBs = new ThreadB[10];\n        for (int i = 0; i < 10; i++) {\n            threadAs[i] = new ThreadA(service);\n            threadBs[i] = new ThreadB(service);\n            threadAs[i].start();\n            threadBs[i].start();\n        }\n    }"}
{"author": "mthli", "file": "CircleLayout.3.java", "original_string": "public Dimension preferredLayoutSize(Container parent)\n   {\n      setSizes(parent);\n      Insets insets = parent.getInsets();\n      int width = preferredWidth + insets.left + insets.right;\n      int height = preferredHeight + insets.top + insets.bottom;\n      return new Dimension(width, height);\n   }"}
{"author": "applewjg", "file": "GenerateParentheses.0.java", "original_string": "public List<String> generateParenthesis(int n) {\n        ArrayList<String> res = new ArrayList<String>();\n        generateParenthesisRe(res, n, n, \"\");\n        return res;\n    }"}
{"author": "Tobias_Ogallo", "file": "PASS.5.java", "original_string": "public void valueChanged(javax.swing.event.ListSelectionEvent e) {\n                if (e.getValueIsAdjusting()) return;\n                javax.swing.ListSelectionModel sel = (ListSelectionModel)e.getSource();\n                if (!sel.isSelectionEmpty()) {\n                    selectedRow = sel.getMinSelectionIndex();\n                }\n            }"}
{"author": "Viscent", "file": "SampleClientOfReusableActiveObject.0.java", "original_string": "public static void main(String[] args) throws InterruptedException,\n        ExecutionException {\n        SampleActiveObject sao = ActiveObjectProxy.newInstance(\n            SampleActiveObject.class, new SampleActiveObjectImpl(),\n            Executors.newCachedThreadPool());\n        Future<String> ft = null;\n        Debug.info(\"Before calling active object\");\n        try {\n            ft = sao.process(\"Something\", 1);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        Thread.sleep(40);\n        Debug.info(ft.get());\n    }"}
{"author": "brianway", "file": "MyRun.0.java", "original_string": "public void run() {\n            try {\n                synchronized (lock) {\n                    while (!isFirstRunNotify) {\n                        System.out.println(\"wait begin timer=\" + System.currentTimeMillis());\n                        lock.wait();\n                        System.out.println(\"wait end timer=\" + System.currentTimeMillis());\n                    }\n                }\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }"}
{"author": "applewjg", "file": "ConvertSortedArraytoBinarySearchTree.2.java", "original_string": "public TreeNode sortedArrayToBST(int[] num) {\n        int[] curidx = new int[1];\n        curidx[0] = 0;\n        return sortedArrayToBSTRe1(num, num.length, curidx);\n    }"}
{"author": "lemire", "file": "IteratorAggregation32Test.6.java", "original_string": "@SuppressWarnings(\"deprecation\")\n    @Test\n    public void testWideOr() {\n        for (int nbr = 3; nbr <= 24; nbr += 3) {\n            for (int N = 100; N < 1000; N += 100) {\n                System.out.println(\"testWideOr N = \" + N);\n                Iterator<EWAHCompressedBitmap32[]> i = getCollections(\n                        N, 3);\n                while (i.hasNext()) {\n                    EWAHCompressedBitmap32[] x = i.next();\n                    EWAHCompressedBitmap32 tanswer = EWAHCompressedBitmap32\n                            .or(x);\n                    EWAHCompressedBitmap32 container = new EWAHCompressedBitmap32();\n                    FastAggregation32\n                            .legacy_orWithContainer(\n                                    container, x);\n                    assertTrue(container.equals(tanswer));\n                    EWAHCompressedBitmap32 x1 = IteratorUtil32\n                            .materialize(IteratorAggregation32\n                                    .bufferedor(IteratorUtil32\n                                            .toIterators(x)));\n                    assertTrue(x1.equals(tanswer));\n                }\n                System.gc();\n            }\n        }\n    }"}
{"author": "newweb", "file": "MaterialBrand.22.java", "original_string": "@Override\n    public Object clone(){\n        try {\n            MaterialBrand m = (MaterialBrand) super.clone();\n            m.supplier = (Supplier) supplier.clone();\n            return m;\n        } catch (Exception e) {\n            return null;\n        }\n    }"}
{"author": "quyi", "file": "Rules.66.java", "original_string": "public void write(org.apache.thrift.protocol.TProtocol oprot, Rules struct) throws org.apache.thrift.TException {\n      struct.validate();\n      oprot.writeStructBegin(STRUCT_DESC);\n      if (struct.ruleId != null) {\n        oprot.writeFieldBegin(RULE_ID_FIELD_DESC);\n        oprot.writeString(struct.ruleId);\n        oprot.writeFieldEnd();\n      }\n      if (struct.ruleName != null) {\n        oprot.writeFieldBegin(RULE_NAME_FIELD_DESC);\n        oprot.writeString(struct.ruleName);\n        oprot.writeFieldEnd();\n      }\n      if (struct.ruleTypes != null) {\n        oprot.writeFieldBegin(RULE_TYPES_FIELD_DESC);\n        {\n          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.ruleTypes.size()));\n          for (Activity _iter3 : struct.ruleTypes)\n          {\n            oprot.writeI32(_iter3.getValue());\n          }\n          oprot.writeListEnd();\n        }\n        oprot.writeFieldEnd();\n      }\n      if (struct.riskLevel != null) {\n        oprot.writeFieldBegin(RISK_LEVEL_FIELD_DESC);\n        oprot.writeI32(struct.riskLevel.getValue());\n        oprot.writeFieldEnd();\n      }\n      if (struct.pak != null) {\n        oprot.writeFieldBegin(PAK_FIELD_DESC);\n        oprot.writeString(struct.pak);\n        oprot.writeFieldEnd();\n      }\n      if (struct.obj != null) {\n        oprot.writeFieldBegin(OBJ_FIELD_DESC);\n        oprot.writeString(struct.obj);\n        oprot.writeFieldEnd();\n      }\n      if (struct.func != null) {\n        oprot.writeFieldBegin(FUNC_FIELD_DESC);\n        oprot.writeString(struct.func);\n        oprot.writeFieldEnd();\n      }\n      if (struct.ruleDescription != null) {\n        oprot.writeFieldBegin(RULE_DESCRIPTION_FIELD_DESC);\n        oprot.writeString(struct.ruleDescription);\n        oprot.writeFieldEnd();\n      }\n      oprot.writeFieldStop();\n      oprot.writeStructEnd();\n    }"}
{"author": "andengineexamples", "file": "MovingBallExample.3.java", "original_string": "@Override\n        protected void onManagedUpdate(final float pSecondsElapsed) {\n            if(this.mX < 0) {\n                this.mPhysicsHandler.setVelocityX(MovingBallExample.DEMO_VELOCITY);\n            } else if(this.mX + this.getWidth() > MovingBallExample.CAMERA_WIDTH) {\n                this.mPhysicsHandler.setVelocityX(-MovingBallExample.DEMO_VELOCITY);\n            }\n            if(this.mY < 0) {\n                this.mPhysicsHandler.setVelocityY(MovingBallExample.DEMO_VELOCITY);\n            } else if(this.mY + this.getHeight() > MovingBallExample.CAMERA_HEIGHT) {\n                this.mPhysicsHandler.setVelocityY(-MovingBallExample.DEMO_VELOCITY);\n            }\n            super.onManagedUpdate(pSecondsElapsed);\n        }"}
{"author": "jfpl", "file": "WfxwSearchService.0.java", "original_string": "@Override\n    public AbstractCommonData doSuccess(AbstractCommonData acd) {\n        acd.putBooleanValue(\"is_alert\", false);\n        if (acd.getBooleanValue(\"success\")) {\n            if (autoActivity.getClass() == VioDetailActivity.class) {\n                VioDetailActivity act = (VioDetailActivity) autoActivity;\n                Intent intent = act.getCustomIntent(WfxwDetailActivity.class);\n                intent.putExtra(\"wfxw\", wfxw);\n                intent.putExtra(\"detail\", DataConvertFactory.praseNormJson(acd));\n                act.startActivity(intent);\n            } else {\n                Intent intent = new Intent(autoActivity,\n                        WfxwDetailActivity.class);\n                intent.putExtra(\"wfxw\", wfxw);\n                intent.putExtra(\"detail\", DataConvertFactory.praseNormJson(acd));\n                autoActivity.startActivity(intent);\n            }\n        } else {\n            fad.showDialog();\n            fad.setMessage(\"\u8be5\u8fdd\u6cd5\u4ee3\u7801\u65e0\u5bf9\u5e94\u4fe1\u606f\");\n        }\n        return acd;\n    }"}
{"author": "golangpkg", "file": "UploadProcessorTest.8.java", "original_string": "@Test\n    public void testCrcBuffered()\n            throws IOException {\n        CRCResult withMethod = crcHelper.getBufferedCrc(file.getInputStream());\n        CRC32 crc32 = new CRC32();\n        crc32.update(IOUtils.toByteArray(file.getInputStream()));\n        String hexString = Long.toHexString(crc32.getValue());\n        Assert.assertThat(withMethod.getCrcAsString(), is(hexString));\n        Assert.assertThat(withMethod.getTotalRead(), is(content.length));\n    }"}
{"author": "quyi", "file": "TSOperate.45.java", "original_string": "public void updateUserAppStatus(String missionId, String userAppId, Map<com.nercis.isscp.idl.PlotsType,com.nercis.isscp.idl.CheckResultStatus> plotsStatus, Map<String,com.nercis.isscp.idl.CheckResultStatus> functionStatus, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {\n      checkReady();\n      updateUserAppStatus_call method_call = new updateUserAppStatus_call(missionId, userAppId, plotsStatus, functionStatus, resultHandler, this, ___protocolFactory, ___transport);\n      this.___currentMethod = method_call;\n      ___manager.call(method_call);\n    }"}
{"author": "lemire", "file": "ChunkIteratorImpl.4.java", "original_string": "@Override\n    public void move(int bits) {\n        this.nextLength -= bits;\n        if(this.nextLength <= 0) {\n            do {\n                this.nextBit = null;\n                updateNext();\n                this.hasNext = moveToNextRLW();\n            } while(this.nextLength <= 0 && this.hasNext);\n        }\n    }"}
{"author": "weijuhui", "file": "SliderContainer.4.java", "original_string": "public void setMinTime(Calendar c) {\n        if (mTime==null) {\n            throw new RuntimeException(\"You have to call setTime before setting a MinimumTime!\");\n        }\n        final int childCount = getChildCount();\n        for (int i = 0; i < childCount; i++) {\n            View v = getChildAt(i);\n            if (v instanceof ScrollLayout) {\n                ScrollLayout scroller = (ScrollLayout)v;\n                scroller.setMinTime(c.getTimeInMillis());\n            }\n        }\n    }"}
{"author": "applewjg", "file": "ZigZagConversion.0.java", "original_string": "public String convert(String s, int nRows) {\n        int n = s.length();\n        if (n <= 1 || nRows <= 1) return s;\n        StringBuffer res = new StringBuffer();\n        for (int i = 0; i < nRows; ++i) {\n            for (int j = 0; j + i < n; j += 2*nRows - 2) {\n                res.append(s.charAt(j+i));\n                if (i == 0 || i == nRows - 1) continue;\n                if (j + 2*nRows - 2 - i < n) \n                    res.append(s.charAt(j + 2*nRows - 2 - i));\n            }\n        }\n        return res.toString();\n    }"}
{"author": "applewjg", "file": "TrappingRainWater.0.java", "original_string": "public int trap_1(int[] A) {\n        int n = A.length;\n        if (n == 0) return 0;\n        int[] maxLeft = new int[n];\n        int[] maxRight = new int[n];\n        maxLeft[0] = A[0];\n        maxRight[n - 1] = A[n - 1];\n        for (int i = 1; i < n; ++i) {\n            maxLeft[i] = Math.max(maxLeft[i - 1], A[i]);\n            maxRight[n - 1 - i] = Math.max(maxRight[n - i], A[n - 1 - i]);\n        }\n        int res = 0;\n        for (int i = 1; i < n; ++i) {\n            res += Math.min(maxLeft[i], maxRight[i]) - A[i];\n        }\n        return res;\n    }"}
{"author": "johnno1962", "file": "HierarchyBoundsAdapterProxy.4.java", "original_string": "public int hashCode() {\n        if ( !entered_hashCode_4 ) {\n            entered_hashCode_4 = true;\n            int __return = __hashCode( );\n            entered_hashCode_4 = false;\n            return __return;\n        }\n        else\n            return super.hashCode( );\n    }"}
{"author": "BrandConstantin", "file": "PositivosYnegativosConFor.0.java", "original_string": "public static void main(String[] args) {   \n    Scanner teclado = new Scanner(System.in);\n    int positivos = 0;\n    int negativos = 0;\n    int contador;\n    System.out.println(\"Escribe 10 numeros:\");\n    System.out.println(\"==========================================\");\n    for(contador = 0; contador < 10; contador++){\n        System.out.println(\"Escribe un numero:\");\n        int num;\n        num = teclado.nextInt();\n        if(num >=0){\n            positivos++;\n        } else {\n            negativos++;\n        } \n    }\n    System.out.println(\"Hay \" + positivos + \" numeros poisitivos y \" +\n         negativos + \" numeros negativos\");\n  }"}
{"author": "quyi", "file": "Hardware.45.java", "original_string": "public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);\n  }"}
{"author": "quyi", "file": "TSOperate.610.java", "original_string": "@Override\n    public int compareTo(updateUserAppInfo_args other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      lastComparison = Boolean.valueOf(isSetMissionId()).compareTo(other.isSetMissionId());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetMissionId()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.missionId, other.missionId);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetUserAppId()).compareTo(other.isSetUserAppId());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetUserAppId()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userAppId, other.userAppId);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetPlotsStatus()).compareTo(other.isSetPlotsStatus());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetPlotsStatus()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.plotsStatus, other.plotsStatus);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetUsedPermissions()).compareTo(other.isSetUsedPermissions());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetUsedPermissions()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.usedPermissions, other.usedPermissions);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetStcRD()).compareTo(other.isSetStcRD());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetStcRD()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stcRD, other.stcRD);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetDycRD()).compareTo(other.isSetDycRD());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetDycRD()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dycRD, other.dycRD);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetVirRD()).compareTo(other.isSetVirRD());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetVirRD()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.virRD, other.virRD);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }"}
{"author": "quyi", "file": "TSOperate.389.java", "original_string": "public boolean equals(queryMission_args that) {\n      if (that == null)\n        return false;\n      boolean this_present_missionId = true && this.isSetMissionId();\n      boolean that_present_missionId = true && that.isSetMissionId();\n      if (this_present_missionId || that_present_missionId) {\n        if (!(this_present_missionId && that_present_missionId))\n          return false;\n        if (!this.missionId.equals(that.missionId))\n          return false;\n      }\n      return true;\n    }"}
{"author": "mthli", "file": "ImageViewerBean.0.java", "original_string": "public void setFileName(String fileName)\n   {\n      path = Paths.get(fileName);\n      try (InputStream in = Files.newInputStream(path))\n      {\n         setIcon(new ImageIcon(ImageIO.read(in)));\n      }\n      catch (IOException e)\n      {\n         path = null;\n         setIcon(null);\n      }\n   }"}
{"author": "terma", "file": "StaticTcpProxyConfigParserTest.8.java", "original_string": "@Test\n    public void shouldFailWhenContainsPropertyInInvalidFormat() {\n        expectedException.expect(IllegalArgumentException.class);\n        expectedException.expectMessage(\n                \"Invalid property remotePort should be <proxy name>.localPort|remotePort|remoteHost\");\n        properties.setProperty(\"remotePort\", \"X\");\n        TcpProxyConfigParser.parse(properties);\n    }"}
{"author": "Viscent", "file": "ActiveObjectProxy.2.java", "original_string": "@Override\n                    public Object call() throws Exception {\n                        Object rv = null;\n                        try {\n                            rv = delegateMethod.invoke(delegate, args);\n                        } catch (IllegalArgumentException e) {\n                            throw new Exception(e);\n                        } catch (IllegalAccessException e) {\n                            throw new Exception(e);\n                        } catch (InvocationTargetException e) {\n                            throw new Exception(e);\n                        }\n                        return rv;\n                    }"}
{"author": "lemire", "file": "PriorityQ.7.java", "original_string": "public T poll() {\n        T ans = this.a[1];\n        this.a[1] = this.a[this.lastIndex--];\n        percolateDown(1);\n        return ans;\n    }"}
{"author": "mark_watson", "file": "AbstractGraphSearch.10.java", "original_string": "protected int getNodeIndex(String name) {\n    for (int i=0; i<numNodes; i++) {\n        if (name.equals(nodeNames[i])) return i;\n    }\n    return -1; }"}
{"author": "quyi", "file": "EngineOperate.605.java", "original_string": "public boolean equals(ruleSync_args that) {\n      if (that == null)\n        return false;\n      boolean this_present_rules = true && this.isSetRules();\n      boolean that_present_rules = true && that.isSetRules();\n      if (this_present_rules || that_present_rules) {\n        if (!(this_present_rules && that_present_rules))\n          return false;\n        if (!this.rules.equals(that.rules))\n          return false;\n      }\n      return true;\n    }"}
{"author": "golangpkg", "file": "UploadProcessingOperationManagerTest.1.java", "original_string": "@Test\n    public void test() {\n        UUID clientId = UUID.randomUUID();\n        UUID fileId = UUID.randomUUID();\n        UUID fileId2 = UUID.randomUUID();\n        Assert.assertThat(uploadProcessingOperationManager.clientsAndRequestsProcessingOperation.isEmpty(), CoreMatchers.is(true));\n        Assert.assertThat(clientToFilesMap.isEmpty(), CoreMatchers.is(true));\n        uploadProcessingOperationManager.startOperation(clientId, fileId);\n        Assert.assertThat(uploadProcessingOperationManager.clientsAndRequestsProcessingOperation.containsKey(clientId), CoreMatchers.is(true));\n        Assert.assertThat(clientToFilesMap.get(clientId).contains(fileId), CoreMatchers.is(true));\n        uploadProcessingOperationManager.startOperation(clientId, fileId2);\n        Assert.assertThat(uploadProcessingOperationManager.clientsAndRequestsProcessingOperation.containsKey(clientId), CoreMatchers.is(true));\n        Assert.assertThat(clientToFilesMap.get(clientId).contains(fileId), CoreMatchers.is(true));\n        Assert.assertThat(clientToFilesMap.get(clientId).contains(fileId2), CoreMatchers.is(true));\n        uploadProcessingOperationManager.stopOperation(clientId, fileId2);\n        Assert.assertThat(uploadProcessingOperationManager.clientsAndRequestsProcessingOperation.containsKey(clientId), CoreMatchers.is(true));\n        Assert.assertThat(clientToFilesMap.get(clientId).contains(fileId), CoreMatchers.is(true));\n        Assert.assertThat(clientToFilesMap.get(clientId).contains(fileId2), CoreMatchers.is(false));\n        uploadProcessingOperationManager.stopOperation(clientId, fileId);\n        Assert.assertThat(uploadProcessingOperationManager.clientsAndRequestsProcessingOperation.containsKey(clientId), CoreMatchers.is(false));\n        Assert.assertThat(clientToFilesMap.containsKey(clientId), CoreMatchers.is(false));\n        Assert.assertThat(uploadProcessingOperationManager.clientsAndRequestsProcessingOperation.isEmpty(), CoreMatchers.is(true));\n        Assert.assertThat(clientToFilesMap.isEmpty(), CoreMatchers.is(true));\n    }"}
{"author": "chweixin", "file": "MenuAction.3.java", "original_string": "private synchronized TreeNode createTreeNode(ModuleDefine m){\n        if(m == null) return null;\n        TreeNode node = new TreeNode();\n        node.setId(m.getModuleID());\n        node.setText(m.getModuleName());\n        Map<String,Object> attributes = new HashMap<String,Object>();\n        attributes.put(\"url\", m.getModuleUri());\n        node.setAttributes(attributes);\n        if(m.getModules() != null && m.getModules().size() > 0){\n            node.setChildren(new ArrayList<TreeNode>());\n            for(int i = 0; i < m.getModules().size(); i++){\n                TreeNode n = this.createTreeNode(m.getModules().item(i));\n                if(n != null) node.getChildren().add(n);\n            }\n        }\n        return node;\n    }"}
{"author": "mthli", "file": "SizedFrameTest.1.java", "original_string": "public void run()\n            {\n               JFrame frame = new SizedFrame();\n               frame.setTitle(\"SizedFrame\");\n               frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n               frame.setVisible(true);\n            }"}
{"author": "quyi", "file": "AppSendMessage.6.java", "original_string": "@Override\n  public void clear() {\n    this.missionId = null;\n    this.userApps = null;\n    this.rules = null;\n    this.plots = null;\n    this.jobPriority = null;\n    this.taskInfo = null;\n  }"}
{"author": "dlna_framework", "file": "SOAPRequest.5.java", "original_string": "private synchronized Node getRootNode()\n    {\n        if (rootNode != null)\n            return rootNode;\n        try {\n            byte content[] = getContent();\n            ByteArrayInputStream contentIn = new ByteArrayInputStream(content);\n            Parser parser = SOAP.getXMLParser();\n            rootNode = parser.parse(contentIn);\n        }\n        catch (ParserException e) {\n            Debug.warning(e);\n        }\n        return rootNode;\n    }"}
{"author": "sample_server", "file": "Gatewayserver.1.java", "original_string": "@Override\n    public void doStart() throws Exception\n    {\n        bootstrap = new ServerBootstrap(new NioServerSocketChannelFactory(Executors.newCachedThreadPool(), Executors.newCachedThreadPool()));\n        bootstrap.setOption(\"keepAlive\", true);\n        bootstrap.setOption(\"tcpNoDelay\", true);\n        bootstrap.setOption(\"reuseAddress\", false);\n        bootstrap.setPipelineFactory(new GatewayInboundPipelineFactory());\n        bootstrap.bind(new InetSocketAddress(ip, port));\n    }"}
{"author": "mthli", "file": "ImageProcessingFrame.4.java", "original_string": "public void actionPerformed(ActionEvent event)\n            {\n               float[] elements = { 0.0f, -1.0f, 0.0f, -1.0f, 5.f, -1.0f, 0.0f, -1.0f, 0.0f };\n               convolve(elements);\n            }"}
{"author": "quyi", "file": "VirusDetectionResultData.6.java", "original_string": "@Override\n  public void clear() {\n    this.checkTime = null;\n    this.MD5 = null;\n    setCheckEngineNumIsSet(false);\n    this.checkEngineNum = 0;\n    setPositivesIsSet(false);\n    this.positives = 0;\n    this.virusEngine = null;\n    this.description = null;\n  }"}
{"author": "Asrar_Ahmed_Makrani", "file": "General_frame.4.java", "original_string": "public void actionPerformed(ActionEvent e) {\n                String a = patron_text.getText();\n                String b = name_text.getText();\n                String c = passport_text.getText();\n                String d = expiry_date_text.getText();\n                String g = reg_by_text.getText();\n                String  l = reg_date_text.getText();\n                String h = textArea.getText();\n                String i = tel_text.getText();\n                String j = fax_text.getText();\n                String k = email_text.getText();\n                patronSQL patsql = new patronSQL(a, b, c, d, g, l, h, i, j, k);\n                patsql.delete();\n                patron_text.setText(\"P-\");\n            }"}
{"author": "vlc_android_macbuild", "file": "LoaderLauncher.8.java", "original_string": "@Override\n    public Loader<D> onCreateLoader(int id, Bundle args) {\n        LoaderCallbacks<D> callbacks = getLoaderCallbacks();\n        if (callbacks == null)\n            return null;\n        return callbacks.onCreateLoader(id, args);\n    }"}
{"author": "quyi", "file": "ConfigModifyService.333.java", "original_string": "@Override\n      public void read(org.apache.thrift.protocol.TProtocol prot, modifyEngineConfig_args struct) throws org.apache.thrift.TException {\n        TTupleProtocol iprot = (TTupleProtocol) prot;\n        struct.propertyName = iprot.readString();\n        struct.setPropertyNameIsSet(true);\n        struct.propertyValue = iprot.readString();\n        struct.setPropertyValueIsSet(true);\n      }"}
{"author": "jfpl", "file": "VoiceRecordDialog.9.java", "original_string": "private void setVolumeState(int _db) {\n        int db = _db > 3 ? 3 : _db;\n        for (int i = 0; i < db; i++) {\n            volumeArr[i].setVisibility(View.VISIBLE);\n        }\n        for (int i = db; i < 3; i++) {\n            volumeArr[i].setVisibility(View.GONE);\n        }\n    }"}
{"author": "chacha", "file": "CommandHandler.3.java", "original_string": "@SuppressWarnings({ \"finally\", \"unused\" })\n    private static String handleLoginToken(String requestJson) throws JsonMappingException, JsonGenerationException, IOException{\n        AuthResponse response=new AuthResponse();\n        LoginContext context=new LoginContextImpl();\n        try{\n            AuthRequest request=(AuthRequest)JsonPojoMapper.fromJson(requestJson, Request.class);\n            response=context.loginToken(request);\n        }catch(Exception e){\n            response.setResult(ResponseCode.EXCEPTION);\n            log.error(\"CommandHandler handleLoginToken exception\",e);\n        }finally{\n            return JsonPojoMapper.toJson(response, true);\n        }\n    }"}
{"author": "mthli", "file": "CollationTest.1.java", "original_string": "public void run()\n            {\n               JFrame frame = new CollationFrame();\n               frame.setTitle(\"CollationTest\");\n               frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n               frame.setVisible(true);\n            }"}
{"author": "weijuhui", "file": "Util.13.java", "original_string": "public static TimeObject getTime(Calendar c, String formatString, int minuteInterval) {\n        int year = c.get(Calendar.YEAR);\n        int month = c.get(Calendar.MONTH);\n        int day = c.get(Calendar.DAY_OF_MONTH);\n        int hour = c.get(Calendar.HOUR_OF_DAY);\n        int minute = c.get(Calendar.MINUTE)/minuteInterval*minuteInterval;\n        c.set(year, month, day, hour, minute+minuteInterval-1, 59);\n        c.set(Calendar.MILLISECOND, 999);\n        long endTime = c.getTimeInMillis();\n        c.set(year, month, day, hour, minute, 0);\n        c.set(Calendar.MILLISECOND, 0);\n        long startTime = c.getTimeInMillis();\n        return new TimeObject(String.format(formatString, c,c), startTime, endTime);\n    }"}
{"author": "lemire", "file": "IteratorUtil.6.java", "original_string": "public static int cardinality(final IteratingRLW i) {\n        int answer = 0;\n        while (true) {\n            if (i.getRunningBit())\n                answer += i.getRunningLength() * EWAHCompressedBitmap.WORD_IN_BITS;\n            int lw = i.getNumberOfLiteralWords();\n            for (int k = 0; k < lw ; ++k)\n                answer += Long.bitCount(i.getLiteralWordAt(k));\n            if (!i.next())\n                break;\n        }\n        return answer;\n    }"}
{"author": "jfpl", "file": "ChatMessageUtil.0.java", "original_string": "private static AbstractCommonData getChatCommonPacket(String username,\n            String msgType, String toUser, String toGroup,\n            IServiceLogic iservice) {\n        AbstractCommonData acd = DataConvertFactory.getInstance();\n        AbstractCommonData head = acd.getDataValue(\"head\");\n        head.putStringValue(\"device\", \"android-phone: \"\n                + android.os.Build.MODEL);\n        head.putStringValue(\"message_type\", msgType);\n        head.putStringValue(\"client_time\", DateUtil.detaledFormat(new Date()));\n        head.putStringValue(\"username\", username);\n        acd.putStringValue(\"_url\", SEND_URL);\n        acd.putBooleanValue(\"is_alert\", false);\n        acd.putStringValue(\"to_user\", toUser);\n        acd.putStringValue(\"busi_type\", GlobalVariables.chatAppId);\n        acd.putStringValue(\"busi_serial\", GlobalVariables.chatAppSerial);\n        acd.putObjectValue(\"ipacket\",\n                HttpSendFactory.getChatPlatformSendMethod());\n        acd.putStringValue(\"to_group\", toGroup);\n        acd.putObjectValue(\"iservice\", iservice);\n        acd.putBooleanValue(\"is_show_loading\", false);\n        return acd;\n    }"}
{"author": "seadroid", "file": "UploadTaskManager.6.java", "original_string": "@Override\n    public void onFileUploadFailed(int taskID) {\n        remove(taskID);\n        doNext();\n        Intent localIntent = new Intent(BROADCAST_ACTION).putExtra(\"type\",\n                BROADCAST_FILE_UPLOAD_FAILED).putExtra(\"taskID\", taskID);\n        LocalBroadcastManager.getInstance(SeadroidApplication.getAppContext()).sendBroadcast(localIntent);\n    }"}
{"author": "BrandConstantin", "file": "CuadradoYcuboConWhile.0.java", "original_string": "public static void main(String[] args) {   \n    System.out.println(\"Escribe cualquier numero de 1 a 99\");\n    int num;\n    int contador = 0;\n    Scanner teclado = new Scanner(System.in);\n    num = teclado.nextInt();\n    while  (contador < 5){\n      System.out.println(num + \" || \" + num*num + \" || \"+ num*num*num);\n      contador ++;\n      num++;\n    }\n  }"}
{"author": "quyi", "file": "AppCheckResult.35.java", "original_string": "private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n    try {\n      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n    } catch (org.apache.thrift.TException te) {\n      throw new java.io.IOException(te);\n    }\n  }"}
{"author": "Josh_Code", "file": "LEDataInputStream.5.java", "original_string": "public int readShort() throws IOException\n    {\n        int result = is.read();\n        if (result < 0)throw new EOFException();\n        int r2 = is.read();\n        if (r2 < 0)throw new EOFException();\n        return result | (r2*256);\n    }"}
{"author": "andengineexamples", "file": "MenuExample.0.java", "original_string": "@Override\n    public EngineOptions onCreateEngineOptions() {\n        this.mCamera = new Camera(0, 0, CAMERA_WIDTH, CAMERA_HEIGHT);\n        return new EngineOptions(true, ScreenOrientation.LANDSCAPE_FIXED, new RatioResolutionPolicy(CAMERA_WIDTH, CAMERA_HEIGHT), this.mCamera);\n    }"}
{"author": "jfpl", "file": "MyVioActivity.2.java", "original_string": "@Override\n    protected void onListItemClick(String prxName, ListView l, View v,\n            int position, long id) {\n        AbstractCommonData acd = (AbstractCommonData) v.getTag();\n        Intent intent = getCustomIntent(VioActivity.class);\n        intent.putExtra(\"hphm\", acd.getStringValue(\"hphm\"));\n        intent.putExtra(\"bind_name\", acd.getStringValue(\"bind_name\"));\n        startActivity(intent);\n    }"}
{"author": "waimai", "file": "TestSaleCount.1.java", "original_string": "@Test\n    public void testSaleCount() throws Exception {\n        BaseConditionVO vo = new BaseConditionVO();\n        vo.setMerchantId(4);\n        vo.setStatus(\"2\");\n        Map<String, Object> map = saleCountService.saleCount(vo);\n        for (Map.Entry<String, Object> entry : map.entrySet()) {\n            System.out.println(entry.getKey() + \" \" + entry.getValue());\n        }\n    }"}
{"author": "andengineexamples", "file": "SpriteRemoveExample.2.java", "original_string": "@Override\n    public Scene onCreateScene() {\n        this.mEngine.registerUpdateHandler(new FPSLogger());\n        final Scene scene = new Scene();\n        scene.setBackground(new Background(0.09804f, 0.6274f, 0.8784f));\n        final float centerX = (CAMERA_WIDTH - this.mFaceTextureRegion.getWidth()) / 2;\n        final float centerY = (CAMERA_HEIGHT - this.mFaceTextureRegion.getHeight()) / 2;\n        this.mFaceToRemove = new Sprite(centerX, centerY, this.mFaceTextureRegion, this.getVertexBufferObjectManager());\n        scene.attachChild(this.mFaceToRemove);\n        scene.setOnSceneTouchListener(this);\n        return scene;\n    }"}
{"author": "mthli", "file": "ImagePreviewer.0.java", "original_string": "public void propertyChange(PropertyChangeEvent event)\n            {\n               if (event.getPropertyName() == JFileChooser.SELECTED_FILE_CHANGED_PROPERTY)\n               {\n                  File f = (File) event.getNewValue();\n                  if (f == null)\n                  {\n                     setIcon(null);\n                     return;\n                  }\n                  ImageIcon icon = new ImageIcon(f.getPath());\n                  if (icon.getIconWidth() > getWidth()) icon = new ImageIcon(icon.getImage()\n                        .getScaledInstance(getWidth(), -1, Image.SCALE_DEFAULT));\n                  setIcon(icon);\n               }\n            }"}
{"author": "vlc_android_macbuild", "file": "MediaResourceGroup.5.java", "original_string": "final public void addIndex_flv_membuf(String from, String indexMrl) {\n        MediaResourceItem item = new MediaResourceItem();\n        item.mFromTag = from;\n        item.mTypeTag = MediaResourceItem.TYPE_TAG__FLV;\n        item.mMrl = indexMrl;\n        item.mIsIndexMrl = true;\n        item.mNeedMembuf = true;\n        mResourceList.add(item);\n    }"}
{"author": "sample_server", "file": "RpcPacketHandler.5.java", "original_string": "private final void init()\n    {\n        Class clazz = this.getClass();\n        for (Method each : clazz.getDeclaredMethods())\n        {\n            if (each.getName().endsWith(\"Req\"))\n            {\n                Class[] params = each.getParameterTypes();\n                if (params.length > 1)\n                {\n                    throw new RpcException(\"invalid handler methold\");\n                }\n                Class reqType = params[0];\n                Invoker invoker = new Invoker();\n                try\n                {\n                    Method parseFromMethod = reqType.getMethod(\"parseFrom\", com.google.protobuf.ByteString.class);\n                    invoker.parseFromMethod = parseFromMethod;\n                } catch (Exception e)\n                {\n                    throw new RpcException(e);\n                }\n                invoker.targetMethod = each;\n                invokerMap.put(each.getName(), invoker);\n            }\n        }\n    }"}
{"author": "seadroid", "file": "CertsManager.3.java", "original_string": "public X509Certificate getCertificate(Account account) {\n        X509Certificate cert = cachedCerts.get(account);\n        if (cert != null) {\n            return cert;\n        }\n        cert = db.getCertificate(account.server);\n        if (cert != null) {\n            cachedCerts.put(account, cert);\n        }\n        return cert;\n    }"}
{"author": "terma", "file": "TcpProxyConfigParser.2.java", "original_string": "private static String findProperty(Properties properties, String key) {\n        final String value = properties.getProperty(key);\n        if (value == null) throw new IllegalArgumentException(\"Please specify \" + key);\n        return value;\n    }"}
{"author": "sample_server", "file": "RpcPacketHandler.6.java", "original_string": "public void handle(final RpcPacketWrapper wrapper)\n    {\n        Rpc.RpcPacket rpcPacket = wrapper.packet;\n        String requestClassName = rpcPacket.getOpcode();\n        Invoker invoker = invokerMap.get(requestClassName);\n        if (null == invoker)\n        {\n            log.info(\"unknown request type:{}\", requestClassName);\n        }\n        else\n        {\n            try\n            {\n                MessageLite resp = (MessageLite) invoker.targetMethod.invoke(this, invoker.parseFromMethod.invoke(null, rpcPacket.getContent()));\n                if (null != resp)\n                {\n                    if (!wrapper.channel.isOpen())\n                    {\n                        log.info(\"channel has closed discard rpc response {}\", wrapper.channel);\n                    }\n                    else\n                    {\n                        wrapper.channel.write(Rpc.RpcPacket.newBuilder(rpcPacket).setContent(resp.toByteString()).build());\n                    }\n                }\n            } catch (Throwable e)\n            {\n                log.error(\"close channel:{}\", wrapper.getChannel(), e);\n                wrapper.channel.close();\n            }\n        }\n    }"}
{"author": "weather", "file": "MainActivity.0.java", "original_string": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        mSectionsPagerAdapter = new SectionsPagerAdapter(getFragmentManager());\n        mViewPager = (ViewPager) findViewById(R.id.pager);\n        mViewPager.setAdapter(mSectionsPagerAdapter);\n    }"}
{"author": "brianway", "file": "Run10_condition.3.java", "original_string": "@Override\n            public void run() {\n                try {\n                    lock.lock();\n                    while (nextPrintWho != 3) {\n                        conditionC.await();\n                    }\n                    for (int i = 0; i < 3; i++) {\n                        System.out.println(\"ThreadC \" + (i + 1));\n                    }\n                    nextPrintWho = 1;\n                    conditionA.signalAll();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                } finally {\n                    lock.unlock();\n                }\n            }"}
{"author": "quyi", "file": "EngineOperate.8.java", "original_string": "public com.nercis.isscp.idl.Sample searchApp(String missionId, String userAppId) throws com.nercis.isscp.idl.InvalidRequestException, com.nercis.isscp.idl.UnavailableException, org.apache.thrift.TException\n    {\n      send_searchApp(missionId, userAppId);\n      return recv_searchApp();\n    }"}
{"author": "quyi", "file": "EngineOperate.536.java", "original_string": "private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }"}
{"author": "johnno1962", "file": "MouseInputAdapterProxy.7.java", "original_string": "public void mouseWheelMoved( java.awt.event.MouseWheelEvent e ) {\n        if ( !entered_mouseWheelMoved_7 ) {\n            entered_mouseWheelMoved_7 = true;\n            __mouseWheelMoved( e );\n            entered_mouseWheelMoved_7 = false;\n        }\n        else\n            super.mouseWheelMoved( e );\n    }"}
{"author": "mthli", "file": "BounceThread.6.java", "original_string": "public void addBall()\n   {\n      Ball b = new Ball();\n      comp.add(b);\n      Runnable r = new BallRunnable(b, comp);\n      Thread t = new Thread(r);\n      t.start();\n   }"}
{"author": "pacman", "file": "ResourceProcessingStep.0.java", "original_string": "@Override\n    public Object execute(ExecuteContext context) throws Exception {\n        List<String> resList = context.getAttribute(Constants.CONTEXT_WEB_RESOURCES);\n        String baseDir = context.getAttribute(Constants.CONTEXT_WEB_RESOURCES_TEMP_DIR);\n        String mediaSrc = context.getAttribute(Constants.CONTEXT_MEDIA_PATH);\n        String mediaTarget = FileHelper.combinePath(baseDir, StringHelper.getFileBareName(mediaSrc));\n        String resTargetDir = context.getAttribute(Constants.CONTEXT_WEB_RESOURCES_TARGET_DIR);\n        logger.info(\"===>\" + mediaSrc + \" >> \" + mediaTarget);\n        FileHelper.copyFile(mediaSrc, mediaTarget);\n        context.setAttribute(Constants.CONTEXT_MEDIA_PATH, mediaTarget);\n        List<String> newList = new ArrayList<String>();\n        String target = null, pubfile = null;\n        if (resList != null) {\n            for(String res : resList) {\n                logger.info(\"=========>\" + res);\n                if (WebHelper.isWebResource(res)) {\n                    URL uri = new URL(res);\n                    target = FileHelper.combinePath(baseDir, uri.getFile());\n                    WebHelper.download(res, target);\n                    pubfile = FileHelper.combinePath(resTargetDir, uri.getFile());\n                    FileHelper.copyFile(target, pubfile);\n                } else {\n                    target = FileHelper.combinePath(baseDir, StringHelper.getFileBareName(res));\n                    FileHelper.copyFile(res, target);\n                }\n                newList.add(target);\n            }\n        }\n        context.setAttribute(Constants.CONTEXT_WEB_RESOURCES, newList);\n        return null;\n    }"}
{"author": "mark_watson", "file": "GraphBreadthFirstSearch.1.java", "original_string": "private void jbInit() throws Exception {\n    this.setDefaultCloseOperation(3);\n    jPanel1.setBackground(Color.white);\n    this.getContentPane().add(jPanel1, BorderLayout.CENTER);\n    this.setSize(290, 180);\n    this.setVisible(true);\n  }"}
{"author": "applewjg", "file": "4Sum.0.java", "original_string": "public List<List<Integer>> fourSum(int[] num, int target) {\n        int N = num.length;\n        List<List<Integer>> res = new ArrayList<List<Integer>>();\n        if (N < 4) return res;\n        Arrays.sort(num);\n        for (int i = 0; i < N; ++i)\n        {\n            if (i > 0 && num[i] == num[i-1]) continue; for (int j = i+1; j < N; ++j)\n            {\n                if (j > i+1 && num[j] == num[j-1]) continue; int twosum = target - num[i] - num[j];\n                int l = j + 1, r = N - 1;\n                while (l < r)\n                {\n                    int sum = num[l] + num[r];\n                    if (sum == twosum) {\n                    ArrayList<Integer> tmp = new ArrayList<Integer>();\n                    tmp.add(num[i]); tmp.add(num[j]); tmp.add(num[l]); tmp.add(num[r]);\n                    res.add(tmp);\n                        while (l < r && num[l+1] == num[l]) l++; while (l < r && num[r-1] == num[r]) r--; l++; r--;\n                    }\n                    else if (sum < twosum) l++;\n                    else r--;\n                }\n            }\n        }\n        return res;\n    }"}
{"author": "mthli", "file": "SwingWorkerTest.6.java", "original_string": "@Override\n      public void done()\n      {\n         try\n         {\n            StringBuilder result = get();\n            textArea.setText(result.toString());\n            statusLine.setText(\"Done\");\n         }\n         catch (InterruptedException ex)\n         {\n         }\n         catch (CancellationException ex)\n         {\n            textArea.setText(\"\");\n            statusLine.setText(\"Cancelled\");\n         }\n         catch (ExecutionException ex)\n         {\n            statusLine.setText(\"\" + ex.getCause());\n         }\n         cancelItem.setEnabled(false);\n         openItem.setEnabled(true);\n      }"}
{"author": "quyi", "file": "EngineOperate.32.java", "original_string": "public com.nercis.isscp.idl.Sample getResult() throws com.nercis.isscp.idl.InvalidRequestException, com.nercis.isscp.idl.UnavailableException, org.apache.thrift.TException {\n        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {\n          throw new IllegalStateException(\"Method call not finished!\");\n        }\n        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());\n        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);\n        return (new Client(prot)).recv_searchApp();\n      }"}
{"author": "Tran_Dinh_Hop", "file": "Dictionary.2.java", "original_string": "public boolean hasCode(int code) \n    { \n        int hashCode = code % hashSize; \n        if(data[hashCode] == null) \n        { \n            return false; \n        } \n        else \n        {\n            HashNode current = data[hashCode]; \n            boolean found = current.hasCode(code); \n            while(current.getNext() != null && found == false) \n            { \n                current = current.getNext(); \n                found = current.hasCode(code); \n            } \n            return found; \n        }    \n    }"}
{"author": "mthli", "file": "FontFrame.0.java", "original_string": "public void updateSample()\n   {\n      String fontFace = (String) face.getSelectedItem();\n      int fontStyle = (bold.isSelected() ? Font.BOLD : 0)\n            + (italic.isSelected() ? Font.ITALIC : 0);\n      int fontSize = size.getItemAt(size.getSelectedIndex());\n      Font font = new Font(fontFace, fontStyle, fontSize);\n      sample.setFont(font);\n      sample.repaint();\n   }"}
{"author": "waimai", "file": "TestSaleRecordService.2.java", "original_string": "@Test\n    public void testDate() throws Exception {\n        Calendar calendar = Calendar.getInstance();\n        calendar.add(Calendar.DAY_OF_YEAR, 1);\n        calendar.add(Calendar.DAY_OF_WEEK, -6);\n        System.out.println(calendar.getTime());\n        }"}
{"author": "mthli", "file": "ImageListDnDFrame.1.java", "original_string": "protected Transferable createTransferable(JComponent source)\n   {\n      ImageList list = (ImageList) source;\n      int index = list.getSelectedIndex();\n      if (index < 0) return null;\n      ImageIcon icon = list.getModel().getElementAt(index);\n      return new ImageTransferable(icon.getImage());\n   }"}
{"author": "chweixin", "file": "PictureServiceImpl.3.java", "original_string": "@Override\n    protected PictureInfo changeModel(Picture data) {\n        if(data == null)return null;\n        PictureInfo info = new PictureInfo();\n        BeanUtils.copyProperties(data, info);\n        return info;\n    }"}
{"author": "brianway", "file": "Run4_schedule_vs_scheduleAtFixedRate_1.0.java", "original_string": "@Override\n        public void run() {\n            System.out.println(\"begin timer=\" + new Date());\n            System.out.println(\"end   timer=\" + new Date());\n        }"}
{"author": "mark_watson", "file": "TripleStoreSesameManager.1.java", "original_string": "public void close() {\n        try {\n            con.close();\n        } catch (RepositoryException ex) {\n            Logger.getLogger(TripleStoreSesameManager.class.getName()).log(Level.SEVERE, null, ex);\n        }\n    }"}
{"author": "dlna_framework", "file": "Disposer.2.java", "original_string": "public void run() {\n        ControlPoint ctrlp = getControlPoint();\n        long monitorInterval = ctrlp.getExpiredDeviceMonitoringInterval() * 1000;\n        while (isRunnable() == true) {\n            try {\n                Thread.sleep(monitorInterval);\n            } catch (InterruptedException e) {\n            }\n            try {\n                long time1 = System.currentTimeMillis();\n                ctrlp.removeExpiredDevices();\n                long time2 = System.currentTimeMillis();        \n        } catch (Exception e) {\n                log.e(\"catch exception!!!e = \" + e.getMessage());\n            }\n            }\n    }"}
{"author": "weather", "file": "WeatherApi.7.java", "original_string": "public static <T> Request startPostGsonRequest(String url, final RequestParams map, Class<T> clazz, final RequestListener listener) {\n        return startPostGsonRequest(url, map.coverToHashMap(), clazz, RequestManager.getRequestQueue(), listener);\n    }"}
{"author": "quyi", "file": "TSOperate.23.java", "original_string": "public com.nercis.isscp.idl.Result heart(NodeHeat nodeHeat, long timestamp) throws com.nercis.isscp.idl.InvalidRequestException, com.nercis.isscp.idl.UnavailableException, org.apache.thrift.TException\n    {\n      send_heart(nodeHeat, timestamp);\n      return recv_heart();\n    }"}
{"author": "jfpl", "file": "ChatActivity.5.java", "original_string": "public void setSendState(boolean flag) {\n        if (flag) {\n            addInfoIv.setVisibility(View.GONE);\n            sendChatLayout.setVisibility(View.VISIBLE);\n        } else {\n            addInfoIv.setVisibility(View.VISIBLE);\n            sendChatLayout.setVisibility(View.GONE);\n        }\n    }"}
{"author": "quyi", "file": "ConfigModifyService.4.java", "original_string": "public String recv_reportEngineConfig() throws com.nercis.isscp.idl.UnavailableException, org.apache.thrift.TException\n    {\n      reportEngineConfig_result result = new reportEngineConfig_result();\n      receiveBase(result, \"reportEngineConfig\");\n      if (result.isSetSuccess()) {\n        return result.success;\n      }\n      if (result.ue != null) {\n        throw result.ue;\n      }\n      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, \"reportEngineConfig failed: unknown result\");\n    }"}
{"author": "Tran_Dinh_Hop", "file": "PriorityQueue.0.java", "original_string": "public void insertM(HuffmanNode o)throws Exception{\n        if (size==capacity)\n            throw new Exception(\"Queue is full\");\n            if (head.getNext()==tail){\n                DLNode d=new DLNode(tail,head,o);\n                head.setNext(d);\n                tail.setPrev(d);\n            }\n            else{\n                DLNode n=head.getNext();\n                HuffmanNode CurrenMax=null;\n                int key=o.getFreq();\n                while (true){\n                    if (n.getElement().getFreq()>key){\n                        DLNode second=n.getPrev();                      \n                        DLNode huf=new DLNode(n,second,o);\n                        second.setNext(huf);\n                        n.setPrev(huf);\n                        break;\n                    }\n                    if (n.getNext()==tail){\n                        DLNode huf=new DLNode(tail,n,o);\n                        n.setNext(huf);\n                        tail.setPrev(huf);\n                        break;\n                    }\n                    n=n.getNext();\n                }\n            }\n        size++;\n    }"}
{"author": "waimai", "file": "IdStatusSplitUtils.1.java", "original_string": "public static boolean isFormatSecret(String[] idsAndStatuses, String compareValue) {\n        Iterator<String> iterator = Arrays.asList(idsAndStatuses).iterator();\n        while (iterator.hasNext()) {\n            if (!compareValue.equals(iterator.next().split(\"_\")[1])) {\n                return false;\n            }\n        }\n        return true;\n    }"}
{"author": "applewjg", "file": "RecoverBinarySearchTree.5.java", "original_string": "public void recoverTree_4(TreeNode root) {\n        if (root == null) return;\n        TreeNode cur = root, pre = null, first = null, second = null;\n        while (cur != null) {\n            if (cur.left == null) {\n                if (pre != null && pre.val > cur.val) {\n                    if (first == null) first = pre;\n                    second = cur;\n                }\n                pre = cur;\n                cur = cur.right;\n            } else {\n                TreeNode node = cur.left;\n                while (node.right != null && node.right != cur)\n                    node = node.right;\n                if (node.right != null) {\n                    if (pre != null && pre.val > cur.val) {\n                        if (first == null) first = pre;\n                        second = cur;\n                    }\n                    pre = cur;\n                    node.right = null;\n                    cur = cur.right;\n                } else {\n                    node.right = cur;\n                    cur = cur.left;\n                }\n            }\n        }\n        if (first == null) return;\n        int tmp = first.val;\n        first.val = second.val;\n        second.val = tmp;\n    }"}
{"author": "bethrobson", "file": "SimpleAnimation.2.java", "original_string": "public void paintComponent(Graphics g) {\n          g.setColor(Color.white);\n          g.fillRect(0,0,this.getWidth(), this.getHeight());\n          g.setColor(Color.green);\n          g.fillOval(x,y,40,40);\n       }"}
{"author": "chao420456", "file": "ArgsDemo.0.java", "original_string": "public static void main(String[] args) {\nint a = 10;\n        int b = 20;\n        int result = sum(a, b);\n        System.out.println(result);\n        int c = 30;\n        result = sum(a, b, c);\n        System.out.println(result);\n        int d = 40;\n        result = sum(a, b, c, d);\n        System.out.println(result);\n        result = sum(10, 20, 30, 40, 50);\n        System.out.println(result);\n        result = sum(10, 20, 30, 40, 50, 60, 70, 80, 90);\n        System.out.println(result);\n    }"}
{"author": "johnno1962", "file": "MouseAdapterProxy.1.java", "original_string": "public void mouseReleased( java.awt.event.MouseEvent e ) {\n        if ( !entered_mouseReleased_1 ) {\n            entered_mouseReleased_1 = true;\n            __mouseReleased( e );\n            entered_mouseReleased_1 = false;\n        }\n        else\n            super.mouseReleased( e );\n    }"}
{"author": "pacman", "file": "ExternalTool.1.java", "original_string": "public static String buildVideoCommand(\n            String  vcodec,\n            String  acodec,\n            int     bitrate_v,\n            int     bitrate_a,\n            int     sampling,\n            String  videoSrc,\n            String  outputFile) throws InvalidMediaParameterException {\nif (bitrate_v < 1) {\n            throw new InvalidMediaParameterException(\"Invalid video bitrate.[\" + bitrate_v + \"]\");\n        }\n        if (bitrate_a < 1) {\n            throw new InvalidMediaParameterException(\"Invalid audio bitrate.[\" + bitrate_a + \"]\");\n        }\nShellCommand cmd = ShellCommand.create(FFMPEG_TOOL);\n        if (\"aac\".equalsIgnoreCase(acodec) || \"mpeg audio\".equalsIgnoreCase(acodec)) {\n            if (sampling == 44100 || sampling == 22050 || sampling == 11025) {\n                cmd.add(\"-acopy\");\n            } else {\n                cmd.add(\"-m44\");\n            }\n        } else {\n            cmd.add(\"-aac\");\n        }\n        if (\"avc\".equalsIgnoreCase(vcodec) && bitrate_v < 600) {\n            cmd.add(\"-vcopy\")\n               .add(\"-g4x3\");\n        } else {\n            cmd.add(\"-x264\")\n               .add(\"-q5\")\n               .add(\"-g4x3\");\n        }\n        cmd.add(videoSrc)\n           .add(outputFile);\n        return cmd.toString();\n    }"}
{"author": "mthli", "file": "FutureTest.2.java", "original_string": "public boolean search(File file)\n   {\n      try\n      {\n         try (Scanner in = new Scanner(file))\n         {\n            boolean found = false;\n            while (!found && in.hasNextLine())\n            {\n               String line = in.nextLine();\n               if (line.contains(keyword)) found = true;\n            }\n            return found;\n         }\n      }\n      catch (IOException e)\n      {\n         return false;\n      }\n   }"}
{"author": "chacha", "file": "AccountTest.1.java", "original_string": "@Test\n    public void crudAccountTest(){\n        long begin=System.currentTimeMillis();\n        String[] userNames=new String[10];\n        LinkedList<AccountEntity> acctArray=new LinkedList<AccountEntity>();\n        for(int i=0;i<10;i++){\n            userNames[i]=\"chacha\"+i;\n            AccountEntity entity=new AccountEntity(userNames[i],\"dddddddd\",\"\");\n            acctArray.add(entity);\n        }\n        AccountBody body=new AccountBody(acctArray);\n        AddAccountRequest request=new AddAccountRequest(body);\n        try{\n            Response r=service.addAccount(request);\n            assertTrue(r.getResult()==Response.SUCCESS);\n        }catch(ChachaException e){\n            e.printStackTrace();\n        }\n        System.out.println(\"add cost=\"+(System.currentTimeMillis()-begin));\n        AccountNameBody queryBody=new AccountNameBody(userNames);\n        QueryAccountRequest qRequest=new QueryAccountRequest(queryBody);\n        try{\n            QueryAccountResponse qResponse=service.queryAccount(qRequest);\n            assertTrue(qResponse.getResult()==Response.SUCCESS);\n            assertTrue(qResponse.getBody().getAcctArray().size()==10);\n        }catch(ChachaException e){\n            e.printStackTrace();\n        }\n        for(AccountEntity entity:acctArray){\n            entity.setPasswd(\"ffffffff\");\n        }\n        body=new AccountBody(acctArray);\n        ModifyAccountRequest modifyRequest=new ModifyAccountRequest(body);\n        try{\n            Response r=service.modifyAccount(modifyRequest);\n            assertTrue(r.getResult()==Response.SUCCESS);\n        }catch(ChachaException e){\n            e.printStackTrace();\n        }\n        queryBody=new AccountNameBody(userNames);\n        qRequest=new QueryAccountRequest(queryBody);\n        try{\n            QueryAccountResponse qResponse=service.queryAccount(qRequest);\n            assertTrue(qResponse.getResult()==Response.SUCCESS);\n            assertTrue(qResponse.getBody().getAcctArray().size()==10);\n            assertTrue(qResponse.getBody().getAcctArray().get(0).getPasswd().equals(\"ffffffff\"));\n        }catch(ChachaException e){\n            e.printStackTrace();\n        }\n        AccountNameBody delBody=new AccountNameBody(userNames);\n        DelAccountRequest dRequest=new  DelAccountRequest(delBody);\n        try{\n            Response r=service.delAccount(dRequest);\n            assertTrue(r.getResult()==Response.SUCCESS);\n        }catch(ChachaException e){\n            e.printStackTrace();\n        }\n        queryBody=new AccountNameBody(userNames);\n        qRequest=new QueryAccountRequest(queryBody);\n        try{\n            QueryAccountResponse qResponse=service.queryAccount(qRequest);\n            assertTrue(qResponse.getResult()==Response.SUCCESS);\n            assertTrue(qResponse.getBody().getAcctArray().size()==0);\n        }catch(ChachaException e){\n            e.printStackTrace();\n        }\n    }"}
{"author": "seadroid", "file": "DownloadTaskManager.2.java", "original_string": "public int getDownloadingFileCountByPath(String repoID, String dir) {\n        List<DownloadTaskInfo> downloadTaskInfos = getTaskInfoListByPath(repoID, dir);\n        int count = 0;\n        for (DownloadTaskInfo downloadTaskInfo : downloadTaskInfos) {\n            if (downloadTaskInfo.state.equals(TaskState.INIT)\n                    || downloadTaskInfo.state.equals(TaskState.TRANSFERRING))\n                count++;\n        }\n        return count;\n    }"}
{"author": "quyi", "file": "Software.1.java", "original_string": "public static _Fields findByThriftIdOrThrow(int fieldId) {\n      _Fields fields = findByThriftId(fieldId);\n      if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n      return fields;\n    }"}
{"author": "sample_server", "file": "Gatewayserver.3.java", "original_string": "public static void main(String[] args)\n    {                 System.out.print(0x7fffffff);\n        if (args.length == 0)\n            throw new IllegalArgumentException(\"\u6ca1\u6709\u6307\u5b9a\u670d\u52a1\u5668\");\n        String serverName = args[0];\n        String ip = Config.getServerIp(serverName);\n        int port = Config.getServerPort(serverName);\n        new Gatewayserver(ip, port, serverName).start();\n    }"}
{"author": "sample_server", "file": "WebSocketServerPipelineFactory.0.java", "original_string": "public ChannelPipeline getPipeline() throws Exception\n    {\n        ChannelPipeline pipeline = pipeline();\n        pipeline.addLast(\"decoder\", new HttpRequestDecoder());\n        pipeline.addLast(\"aggregator\", new HttpChunkAggregator(65536));\n        pipeline.addLast(\"encoder\", new HttpResponseEncoder());\n        pipeline.addLast(\"handler\", baseWebSocketServerHandler);\n        return pipeline;\n    }"}
{"author": "bethrobson", "file": "ServiceBrowser.1.java", "original_string": "void loadService(Object serviceSelection) {\n       try {\n          Service svc = server.getService(serviceSelection);\n          mainPanel.removeAll();\n          mainPanel.add(svc.getGuiPanel());\n          mainPanel.validate();\n          mainPanel.repaint();\n        } catch(Exception ex) {\n           ex.printStackTrace();\n        }\n   }"}
{"author": "sample_server", "file": "HexBin.0.java", "original_string": "static public String encode(byte[] binaryData)\n    {\n        if (binaryData == null)\n            return null;\n        int lengthData = binaryData.length;\n        int lengthEncode = lengthData * 2;\n        char[] encodedData = new char[lengthEncode];\n        int temp;\n        for (int i = 0; i < lengthData; i++)\n        {\n            temp = binaryData[i];\n            if (temp < 0)\n                temp += 256;\n            encodedData[i * 2] = lookUpHexAlphabet[temp >> 4];\n            encodedData[i * 2 + 1] = lookUpHexAlphabet[temp & 0xf];\n        }\n        return new String(encodedData);\n    }"}
{"author": "waimai", "file": "MerchantController.4.java", "original_string": "@RequestMapping(\"/update\")\n    public ModelAndView update(@RequestParam(\"imageFile\") MultipartFile image, Merchant merchant) {\n        try {\n            merchantService.update(image, merchant);\n            return ajaxDoneSuccessAndClose(\"\u4fee\u6539\u6210\u529f\", \"\");\n        } catch (ServiceException e) {\n            return ajaxDoneError(\"\u4fee\u6539\u5931\u8d25\");\n        }\n    }"}
{"author": "Josh_Code", "file": "ModelJMenu.1.java", "original_string": "public void actionPerformed(ActionEvent ae)\n            {\n                String response = JOptionPane.showInputDialog(mv,\n                     \"What would you like to scale all vector components by?\",\n                     \"1.000\");\n                if (response != null)\n                {\n                    double d = Double.parseDouble(response);\n                    mv.scaleVectors(Vector3D.getFromCoordinates(d, d, d));\n                }\n            }"}
{"author": "lemire", "file": "UpdateableBitmapFunction.6.java", "original_string": "public final void fillWithLiterals(final List<EWAHPointer> container) {\n        for (int k = this.litwlist.nextSetBit(0); k >= 0; k = this.litwlist.nextSetBit(k + 1)) {\n            container.add(this.rw[k]);\n        }\n    }"}
{"author": "dlna_framework", "file": "HTTPServerList.3.java", "original_string": "public int open(){\n        InetAddress[] binds=this.binds;\n        String[] bindAddresses;\n        if(binds!=null){            \n            bindAddresses = new String[binds.length];\n            for (int i = 0; i < binds.length; i++) {\n                bindAddresses[i] = binds[i].getHostAddress();\n            }\n        }else{\n            int nHostAddrs = HostInterface.getNHostAddresses();\n            bindAddresses = new String[nHostAddrs]; \n            for (int n=0; n<nHostAddrs; n++) {\n                bindAddresses[n] = HostInterface.getHostAddress(n);\n            }\n        }       \n        int j=0;\n        for (int i = 0; i < bindAddresses.length; i++) {\n            HTTPServer httpServer = new HTTPServer();\n            if((bindAddresses[i]==null) || (httpServer.open(bindAddresses[i], port) == false)) {\n                close();\n                clear();\n            }else{\n                add(httpServer);\n                j++;\n            }\n        }\n        return j;\n    }"}
{"author": "quyi", "file": "ConfigModifyService.18.java", "original_string": "public void send_modifyNodeManagerConfig(String nodeId, String propertyName, String propertyValue) throws org.apache.thrift.TException\n    {\n      modifyNodeManagerConfig_args args = new modifyNodeManagerConfig_args();\n      args.setNodeId(nodeId);\n      args.setPropertyName(propertyName);\n      args.setPropertyValue(propertyValue);\n      sendBase(\"modifyNodeManagerConfig\", args);\n    }"}
{"author": "golangpkg", "file": "ProgressCalculator.2.java", "original_string": "Double calculateProgress(Long currentSize, Long expectedSize) {\n        double percent = currentSize.doubleValue() / expectedSize.doubleValue() * 100d;\n        if (percent == 100 && expectedSize - currentSize != 0) {\n            percent = 99.99d;\n        }\n        return percent;\n    }"}
{"author": "mthli", "file": "ThreadPoolTest.2.java", "original_string": "public boolean search(File file)\n   {\n      try\n      {\n         try (Scanner in = new Scanner(file))\n         {\n            boolean found = false;\n            while (!found && in.hasNextLine())\n            {\n               String line = in.nextLine();\n               if (line.contains(keyword)) found = true;\n            }         \n            return found;\n         }\n      }\n      catch (IOException e)\n      {\n         return false;\n      }\n   }"}
{"author": "quyi", "file": "TSOperate.240.java", "original_string": "public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);\n    }"}
{"author": "quyi", "file": "TSOperate.15.java", "original_string": "public void send_updateAppStatus(String missionId, String userAppId, com.nercis.isscp.idl.AppStatus status, List<Map<String,com.nercis.isscp.idl.APICheck>> usedPermissions, com.nercis.isscp.idl.StaticCheckResultData stcRD, com.nercis.isscp.idl.DynamicCheckResultData dycRD, com.nercis.isscp.idl.virus.VirusDetectionResultData virRD) throws org.apache.thrift.TException\n    {\n      updateAppStatus_args args = new updateAppStatus_args();\n      args.setMissionId(missionId);\n      args.setUserAppId(userAppId);\n      args.setStatus(status);\n      args.setUsedPermissions(usedPermissions);\n      args.setStcRD(stcRD);\n      args.setDycRD(dycRD);\n      args.setVirRD(virRD);\n      sendBase(\"updateAppStatus\", args);\n    }"}
{"author": "seadroid", "file": "ToastUtils.0.java", "original_string": "public static void show(final Activity activity, final String message) {\n        if (activity == null)\n            return;\n        Toast.makeText(activity, message, Toast.LENGTH_SHORT).show();\n    }"}
{"author": "jerry_m_lumontod", "file": "CheckGenJournalEntries.4.java", "original_string": "public boolean DeptCodeIsValid(String tstrCompCode,String tstrDeptCode) {\n        boolean mbln=true;\n        moDeptCodeIsValid.DeptCodeIsValid(tstrCompCode,tstrDeptCode);\n        if (moDeptCodeIsValid.TheMessage().length()>0) {\n            mbln=false;\n        }\n        return true; }"}
{"author": "weather", "file": "WeatherDailyFragment.1.java", "original_string": "@Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View result = inflater.inflate(R.layout.fragment_weather_daily, container, false);\n        ButterKnife.inject(this, result);\n        return result;\n    }"}
{"author": "Tobias_Ogallo", "file": "PASS.11.java", "original_string": "public void reloaded(){\n            try\n                {\n                    Statement statement =Connect.getConnection().createStatement();\n                    {\n                      String temp = (\"SELECT * FROM Passenger\");\n                       int  Numrow = 0;\n                       ResultSet result = statement.executeQuery(temp);\n                       while (result.next()) {\n                         jTable.setValueAt(result.getString(1),Numrow,0);\n                         jTable.setValueAt(result.getString(2),Numrow,1);\n                         jTable.setValueAt(result.getString(3),Numrow,2);\n                         jTable.setValueAt(result.getString(4),Numrow,3);\n                         jTable.setValueAt(result.getDate(5),Numrow,4);\n                         jTable.setValueAt(result.getString(6),Numrow,5);\n                         jTable.setValueAt(result.getString(7),Numrow,6);   \n                         Numrow++;\n                       }    \n                }\n            }\n            catch ( SQLException sqlex ) {\n             }\n        }"}
{"author": "quyi", "file": "EngineOperate.543.java", "original_string": "@Override\n      public void read(org.apache.thrift.protocol.TProtocol prot, searchEng_args struct) throws org.apache.thrift.TException {\n        TTupleProtocol iprot = (TTupleProtocol) prot;\n        struct.engineId = iprot.readString();\n        struct.setEngineIdIsSet(true);\n      }"}
{"author": "quyi", "file": "TSOperate.182.java", "original_string": "@Override\n    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof genMissionId_result)\n        return this.equals((genMissionId_result)that);\n      return false;\n    }"}
{"author": "mthli", "file": "URLConnectionTest.2.java", "original_string": "public void write(int c) throws IOException\n   {\n      inbuf[i] = c;\n      i++;\n      if (i == 3)\n      {\n         if (col >= 76)\n         {\n            super.write('\\n');\n            col = 0;\n         }\n         super.write(toBase64[(inbuf[0] & 0xFC) >> 2]);\n         super.write(toBase64[((inbuf[0] & 0x03) << 4) | ((inbuf[1] & 0xF0) >> 4)]);\n         super.write(toBase64[((inbuf[1] & 0x0F) << 2) | ((inbuf[2] & 0xC0) >> 6)]);\n         super.write(toBase64[inbuf[2] & 0x3F]);\n         col += 4;\n         i = 0;\n      }\n   }"}
{"author": "quyi", "file": "ConfigModifyService.14.java", "original_string": "public com.nercis.isscp.idl.Result modifyTaskManagerConfig(String propertyName, String propertyValue) throws com.nercis.isscp.idl.InvalidRequestException, com.nercis.isscp.idl.UnavailableException, org.apache.thrift.TException\n    {\n      send_modifyTaskManagerConfig(propertyName, propertyValue);\n      return recv_modifyTaskManagerConfig();\n    }"}
{"author": "mthli", "file": "RandomAccessTest.2.java", "original_string": "public static Employee readData(ByteBuffer in) throws IOException\n   {      \n      StringBuilder name = new StringBuilder();\n      char ch;\n      while ((ch = in.getChar()) != '\\0') name.append(ch);\n      in.position(2 * Employee.NAME_SIZE);\n      double salary = in.getDouble();\n      int y = in.getInt();\n      int m = in.getInt();\n      int d = in.getInt();\n      return new Employee(name.toString(), salary, y, m - 1, d);\n   }"}
{"author": "quyi", "file": "TSOperate.24.java", "original_string": "public void send_heart(NodeHeat nodeHeat, long timestamp) throws org.apache.thrift.TException\n    {\n      heart_args args = new heart_args();\n      args.setNodeHeat(nodeHeat);\n      args.setTimestamp(timestamp);\n      sendBase(\"heart\", args);\n    }"}
{"author": "mthli", "file": "Rule.0.java", "original_string": "public String getExplanation()\n   {\n      StringBuilder r = new StringBuilder(\"Source \");\n      if (porterDuff2.equals(\"  \")) r.append(\"clears\");\n      if (porterDuff2.equals(\" S\")) r.append(\"overwrites\");\n      if (porterDuff2.equals(\"DS\")) r.append(\"blends with\");\n      if (porterDuff2.equals(\" D\")) r.append(\"alpha modifies\");\n      if (porterDuff2.equals(\"D \")) r.append(\"alpha complement modifies\");\n      if (porterDuff2.equals(\"DD\")) r.append(\"does not affect\");\n      r.append(\" destination\");\n      if (porterDuff1.equals(\" S\")) r.append(\" and overwrites empty pixels\");\n      r.append(\".\");\n      return r.toString();\n   }"}
{"author": "Viscent", "file": "RecordWriter.2.java", "original_string": "public File finishRecords(String recordDay, int targetFileIndex) {\n        String fileKey = recordDay + '-' + targetFileIndex;\n        PrintWriter pwr = printWriterMap.get(fileKey);\n        File file = null;\n        if (null != pwr) {\n            pwr.flush();\n            pwr.close();\n            file = new File(baseDir + '/' + recordDay + \"/subspsync-gw-\"\n                + FILE_INDEX_FORMATTER.format(targetFileIndex) + \".dat\");\n            printWriterMap.remove(fileKey);\n        }\n        return file;\n    }"}
{"author": "sample_server", "file": "LogicMoudleDispatcher.0.java", "original_string": "@Override\n    public void diapatch(Channel channel, Fenrisulfr.TransPacket packet)\n    {\n        try\n        {\n            int opcode = packet.getOpcode();\n            int moudle = DispatcherHelper.moudleType(opcode);\n            switch (moudle)\n            {\n                case 1:\n                    logicLoginMoudleService.diapatch(channel, packet);\n                    break;\n                default:\n                    log.error(\"unknow moudle:{}\", moudle);\n                    break;\n            }\n        } catch (Exception e)\n        {\n            log.error(\"failed handle packet\", e);\n        }\n    }"}
{"author": "mthli", "file": "ImageProcessingFrame.3.java", "original_string": "public void actionPerformed(ActionEvent event)\n            {\n               float weight = 1.0f / 9.0f;\n               float[] elements = new float[9];\n               for (int i = 0; i < 9; i++)\n                  elements[i] = weight;\n               convolve(elements);\n            }"}
{"author": "quyi", "file": "UserApp.66.java", "original_string": "@Override\npublic Object getFieldValue(_Fields field) {\n    switch (field) {\n    case APP_ID:\n      return getApp_id();\n    case APP_NAME:\n      return getApp_name();\n    case VERSIONCODE:\n      return getVersioncode();\n    case URL:\n      return getUrl();\n    case APP_SIZE:\n      return Integer.valueOf(getApp_size());\n    case MINSDKVERSION:\n      return getMinsdkversion();\n    case APK_MD5:\n      return getApk_md5();\n    case NOTIFY_CALLBACK_URL:\n      return getNotify_callback_url();\n    case APP_DESCRIPTION:\n      return getApp_description();\n    case REQUEST_PURVIEWS:\n      return getRequestPurviews();\n    case FORMAT:\n      return getFormat();\n    }\n    throw new IllegalStateException();\n  }"}
{"author": "0opslab", "file": "PropertiesUtilTest.0.java", "original_string": "@Test\n    public void testmain() {\n        System.out.println(\"File encoding:\" + System.getProperty(\"file.encoding\"));\n        System.out.println(\"Default Charset:\" + Charset.defaultCharset());\n        System.out.println(\"os.arch:\" + System.getProperty(\"os.arch\"));\n        System.out.println(\"os.version:\" + System.getProperty(\"os.version\"));\n        System.out.println(\"os.name:\" + System.getProperty(\"os.name\"));\n        System.out.println(\"sun.desktop:\" + System.getProperty(\"sun.desktop\"));\n    }"}
{"author": "waimai", "file": "AUserController.3.java", "original_string": "@RequestMapping(\"/active\")\n    public ModelAndView active(String[] ids) {\n        try {\n            userService.active(ids);\n        } catch (ServiceException e) {\n            return ajaxDoneError(e.getMessage());\n        }\n        return ajaxDoneSuccess(\"\u64cd\u4f5c\u6210\u529f\");\n    }"}
{"author": "vlc_android_macbuild", "file": "CollectionHelper.4.java", "original_string": "public final static boolean isAnyStringEmpty(Collection<String> collection) {\n        if (collection == null || collection.isEmpty())\n            return false;\n        for (String elem : collection) {\n            if (TextUtils.isEmpty(elem))\n                return true;\n        }\n        return false;\n    }"}
{"author": "mthli", "file": "ForkJoinTest.2.java", "original_string": "protected Integer compute()\n   {\n      if (to - from < THRESHOLD)\n      {\n         int count = 0;\n         for (int i = from; i < to; i++)\n         {\n            if (filter.accept(values[i])) count++;\n         }\n         return count;\n      }\n      else\n      {\n         int mid = (from + to) / 2;\n         Counter first = new Counter(values, from, mid, filter);\n         Counter second = new Counter(values, mid, to, filter);\n         invokeAll(first, second);\n         return first.join() + second.join();\n      }\n   }"}
{"author": "mthli", "file": "PermutationSpinnerModel.3.java", "original_string": "public Object getPreviousValue()\n   {\n      int[] codePoints = toCodePointArray(word);\n      for (int i = codePoints.length - 1; i > 0; i--)\n      {\n         if (codePoints[i - 1] > codePoints[i])\n         {\n            int j = codePoints.length - 1;\n            while (codePoints[i - 1] < codePoints[j])\n               j--;\n            swap(codePoints, i - 1, j);\n            reverse(codePoints, i, codePoints.length - 1);\n            return new String(codePoints, 0, codePoints.length);\n         }\n      }\n      reverse(codePoints, 0, codePoints.length - 1);\n      return new String(codePoints, 0, codePoints.length);\n   }"}
{"author": "newweb", "file": "LoginController.4.java", "original_string": "@RequestMapping(value = \"isUserLogin.ajax\")\n    @ResponseBody\n    public String isUserLogin(HttpServletRequest request, HttpServletResponse response){\n        String result = \"\";\n        response.setCharacterEncoding(\"UTF-8\");\n        int sessionUserID = (Integer) request.getSession().getAttribute(\"userID\");\n        User user = userService.findUserByID(sessionUserID);\n        if(user.getType().equals(\"customer\")){\n            Customer c = customerService.findCustomerByID(user.getLinkid());\n            result = c.getName();\n        }\n        if(user.getType().equals(\"system\")){\n            result = \"\u7cfb\u7edf\u7ba1\u7406\u5458\";\n        }\n        try {\n            response.getWriter().write(result);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }"}
{"author": "quyi", "file": "TSOperate.819.java", "original_string": "public Object getFieldValue(_Fields field) {\n      switch (field) {\n      case SUCCESS:\n        return getSuccess();\n      case IRE:\n        return getIre();\n      case UE:\n        return getUe();\n      }\n      throw new IllegalStateException();\n    }"}
{"author": "pengrad", "file": "Audio.6.java", "original_string": "@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        Audio audio = (Audio) o;\n        if (file_id != null ? !file_id.equals(audio.file_id) : audio.file_id != null) return false;\n        if (duration != null ? !duration.equals(audio.duration) : audio.duration != null) return false;\n        if (performer != null ? !performer.equals(audio.performer) : audio.performer != null) return false;\n        if (title != null ? !title.equals(audio.title) : audio.title != null) return false;\n        if (mime_type != null ? !mime_type.equals(audio.mime_type) : audio.mime_type != null) return false;\n        return file_size != null ? file_size.equals(audio.file_size) : audio.file_size == null;\n    }"}
{"author": "mthli", "file": "CircleLayout.2.java", "original_string": "public void setSizes(Container parent)\n   {\n      if (sizesSet) return;\n      int n = parent.getComponentCount();\n      preferredWidth = 0;\n      preferredHeight = 0;\n      minWidth = 0;\n      minHeight = 0;\n      maxComponentWidth = 0;\n      maxComponentHeight = 0;\n      for (int i = 0; i < n; i++)\n      {\n         Component c = parent.getComponent(i);\n         if (c.isVisible())\n         {\n            Dimension d = c.getPreferredSize();\n            maxComponentWidth = Math.max(maxComponentWidth, d.width);\n            maxComponentHeight = Math.max(maxComponentHeight, d.height);\n            preferredWidth += d.width;\n            preferredHeight += d.height;\n         }\n      }\n      minWidth = preferredWidth / 2;\n      minHeight = preferredHeight / 2;\n      sizesSet = true;\n   }"}
{"author": "jfpl", "file": "ChatListAdapter.8.java", "original_string": "@Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        ChatViewHolder holder = null;\n        int type = getItemViewType(position);\n        int layoutId = 0;\n        switch (type) {\n        case 1:\n            layoutId = R.layout.chat_list_item;\n            break;\n        case 2:\n            layoutId = R.layout.chat_image_item;\n            break;\n        case 3:\n            layoutId = R.layout.chat_voice_item;\n            break;\n        case 4:\n            layoutId = R.layout.chat_location_item;\n            break;\n        case 5:\n            layoutId = R.layout.chat_list_item;\n            break;\n        case 6:\n            layoutId = R.layout.chat_form_item;\n            break;\n        default:\n            layoutId = R.layout.chat_list_item;\n            break;\n        }\n        if (convertView == null) {\n            convertView = LayoutInflater.from(ctx).inflate(layoutId, null);\n            holder = new ChatViewHolder();\n            holder.chatLayout = (LinearLayout) convertView\n                    .findViewById(R.id.chat_type);\n            holder.chatBgLayout = (LinearLayout) convertView\n                    .findViewById(R.id.chat_bg_layout);\n            holder.sendState = (ProgressBar) convertView\n                    .findViewById(R.id.send_state);\n            holder.sendFinishState = (ImageView) convertView\n                    .findViewById(R.id.send_finish_state);\n            holder.chatTextView = (TextView) convertView\n                    .findViewById(R.id.chat_msg);\n            holder.chatImage = (ImageView) convertView\n                    .findViewById(R.id.chat_image);\n            holder.chatVoice = (VoicePlayItem) convertView\n                    .findViewById(R.id.voice_play_msg);\n            holder.chatLoaction = (TextView) convertView\n                    .findViewById(R.id.chat_location);\n            holder.chatWebview = (WebView) convertView\n                    .findViewById(R.id.chat_web_view);\n            convertView.setTag(holder);\n        } else {\n            holder = (ChatViewHolder) convertView.getTag();\n        }\n        AbstractCommonData acd = dataSource.get(position);\n        String direction = acd.getStringValue(\"type\");\n        String sendStateFlag = acd.getStringValue(\"send_state\");\n        if (holder.sendState != null && holder.sendFinishState != null) {\n            if (sendStateFlag != null) { holder.sendState.setVisibility(View.GONE);\n                holder.sendFinishState.setVisibility(View.VISIBLE);\n                if (\"0\".equals(sendStateFlag)) {\n                    holder.sendFinishState\n                            .setImageResource(R.drawable.done_holo);\n                } else if (\"1\".equals(sendStateFlag)\n                        || \"3\".equals(sendStateFlag)) {\n                    holder.sendFinishState\n                            .setImageResource(R.drawable.holo_undone);\n                } else if (\"2\".equals(sendStateFlag)) {\n                    Log.d(SystemUtil.LOG_MSG, \"init again list item\");\n                    holder.sendState.setVisibility(View.VISIBLE);\n                    holder.sendFinishState.setVisibility(View.GONE);\n                }\n            } else {\n                if (\"0\".equals(type)) {\n                    holder.sendState.setVisibility(View.GONE);\n                    holder.sendFinishState.setVisibility(View.VISIBLE);\n                    holder.sendFinishState\n                            .setImageResource(R.drawable.done_holo);\n                }\n            }\n        }\n        if (\"0\".equals(direction)) {\n            holder.chatLayout.setGravity(Gravity.LEFT);\n            holder.chatBgLayout.setBackgroundDrawable(ctx.getResources()\n                    .getDrawable(R.drawable.chat_from_bg_normal));\n            holder.sendState.setVisibility(View.GONE);\n            if (type == 1 && holder.chatTextView != null) { String chatMsg = acd.getStringValue(\"chat_msg\");\n                chatMsg = ChatMessageUtil.convertToClientMessage(chatMsg);\n                holder.chatTextView.setText(chatMsg);\n            } else if (type == 2 && holder.chatImage != null) { Bitmap bm = ImageLoader.getInstance().loadImageSync(\n                        \"file://\" + acd.getStringValue(\"image_path\"));\n                holder.chatImage.setImageBitmap(bm);\n                holder.chatImage.setLayoutParams(new LinearLayout.LayoutParams(\n                        bm.getWidth() + 40, bm.getHeight() + 25));\n            } else if (type == 3 && holder.chatVoice != null) { holder.chatVoice.setPlaySource(acd.getStringValue(\"audio_url\"));\n                holder.chatVoice.setBindEventView(convertView);\n            } else if (type == 4 && holder.chatLoaction != null) {\n                holder.chatLoaction\n                        .setText(acd.getStringValue(\"chat_location\"));\n            } else if (type == 5) {\n            } else if (type == 6 && holder.chatWebview != null) {\n                if (StringUtil.isNull(holder.chatWebview.getUrl())) {\n                    WebSettings ws = holder.chatWebview.getSettings();\n                    ws.setJavaScriptEnabled(true);\n                    ws.setJavaScriptCanOpenWindowsAutomatically(true);\n                    ws.setLayoutAlgorithm(LayoutAlgorithm.NORMAL);\n                    holder.chatWebview.requestFocus();\n                    holder.chatWebview\n                            .setWebViewClient(new JFChatWebViewClient(\n                                    holder.sendState));\n                    holder.chatWebview\n                            .setWebChromeClient(new JFChatWebChromeClient(ctx));\n                    holder.chatWebview.loadUrl(acd.getStringValue(\"url\"));\n                }\n            }\n        } else if (\"1\".equals(direction)) {\n            holder.chatLayout.setGravity(Gravity.RIGHT);\n            holder.chatBgLayout.setBackgroundDrawable(ctx.getResources()\n                    .getDrawable(R.drawable.chat_img_to_bg_mask));\n            String msgId = acd.getStringValue(\"id\");\n            if (StringUtil.isNull(msgId)) {\n                msgId = SystemUtil.getUniqueId();\n                acd.putStringValue(\"id\", msgId);\n            }\n            if (type == 1 && holder.chatTextView != null) { holder.chatTextView.setPadding(12, 10, 25, 0);\n                String chatMsg = acd.getStringValue(\"chat_msg\");\n                if (\"0\".equals(acd.getStringValue(\"load_data_type\"))\n                        && acd.getStringValue(\"send_state\") == null) {\n                    chatMsg = ChatMessageUtil.convertToServerMessage(chatMsg);\n                    ctx.update(\"add_chat_message\", msgId, \"1\", \"1\",\n                            GlobalVariables.loginUsername,\n                            GlobalVariables.chatToUser, chatMsg, new Date(),\n                            this.busiType, \"2\", \"\", \"\");\n                    acd.putStringValue(\"send_state\", \"2\");\n                    ChatMessageUtil.sendChatText(ctx,\n                            GlobalVariables.loginUsername,\n                            GlobalVariables.chatToUser, \"to group\", chatMsg,\n                            new ChatTextService(ctx, chatList,\n                                    holder.sendState, holder.sendFinishState,\n                                    acd));\n                }\n                chatMsg = ChatMessageUtil.convertToClientMessage(chatMsg);\n                holder.chatTextView.setText(chatMsg);\n            } else if (type == 2 && holder.chatImage != null) { String imagePath = acd.getStringValue(\"image_path\");\n                if (\"0\".equals(acd.getStringValue(\"load_data_type\"))\n                        && acd.getStringValue(\"send_state\") == null) {\n                    ctx.update(\"add_chat_message\", msgId, \"1\", \"2\",\n                            GlobalVariables.loginUsername,\n                            GlobalVariables.chatToUser, imagePath, new Date(),\n                            this.busiType, \"2\", \"\", \"\");\n                    acd.putStringValue(\"send_state\", \"2\");\n                    ChatMessageUtil.uploadFile(ctx, imagePath,\n                            new ChatUploadService(ctx, chatList,\n                                    holder.sendState, holder.sendFinishState,\n                                    acd));\n                }\n                String imageUrl = \"file://\" + imagePath;\n                Bitmap bm = ImageLoader.getInstance().loadImageSync(imageUrl,\n                        ImageUtil.getChatImageSize(imagePath));\n                holder.chatImage.setImageBitmap(bm);\n                holder.chatImage.setPadding(5, 3, 22, 3);\n                holder.chatImage.setLayoutParams(new LinearLayout.LayoutParams(\n                        bm.getWidth() + 25, bm.getHeight() + 10));\n            } else if (type == 3 && holder.chatVoice != null) {String audioUrl = acd.getStringValue(\"audio_url\");\n                holder.chatVoice.setPlaySource(audioUrl);\n                holder.chatVoice.setBindEventView(holder.chatVoice);\n                if (\"0\".equals(acd.getStringValue(\"load_data_type\"))\n                        && acd.getStringValue(\"send_state\") == null) {\n                    ctx.update(\"add_chat_message\", msgId, \"1\", \"3\",\n                            GlobalVariables.loginUsername,\n                            GlobalVariables.chatToUser, audioUrl, new Date(),\n                            this.busiType, \"2\", \"\", \"\");\n                    acd.putStringValue(\"send_state\", \"2\");\n                    ChatMessageUtil.uploadFile(ctx, audioUrl,\n                            new ChatUploadService(ctx, chatList,\n                                    holder.sendState, holder.sendFinishState,\n                                    acd));\n                }\n            } else if (type == 4 && holder.chatLoaction != null) {\n                holder.chatBgLayout.setPadding(5, 5, 22, 5);\n                if (\"0\".equals(acd.getStringValue(\"load_data_type\"))\n                        && acd.getStringValue(\"send_state\") == null) {\n                    String[] args = (String[]) acd.getObjectValue(\"tag\");\n                    ctx.update(\"add_chat_message\", msgId, \"1\", \"4\",\n                            GlobalVariables.loginUsername,\n                            GlobalVariables.chatToUser, args[0] + \"\\n\"\n                                    + args[1], new Date(), this.busiType, \"2\",\n                            args[2], args[3]);\n                    acd.putStringValue(\"send_state\", \"2\");\n                    ChatMessageUtil.sendChatLocation(ctx,\n                            GlobalVariables.loginUsername,\n                            GlobalVariables.chatToUser, \"toGroup\", type + \"\",\n                            args[2], args[3], new ChatLocationService(ctx,\n                                    chatList, holder.sendState,\n                                    holder.sendFinishState, acd));\n                }\n                holder.chatLoaction\n                        .setText(acd.getStringValue(\"chat_location\"));\n            }\n        }\n        return convertView;\n    }"}
{"author": "quyi", "file": "ConfigModifyService.38.java", "original_string": "public com.nercis.isscp.idl.Result getResult() throws com.nercis.isscp.idl.InvalidRequestException, com.nercis.isscp.idl.UnavailableException, org.apache.thrift.TException {\n        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {\n          throw new IllegalStateException(\"Method call not finished!\");\n        }\n        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());\n        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);\n        return (new Client(prot)).recv_modifyNodeManagerConfig();\n      }"}
{"author": "quyi", "file": "TSOperate.104.java", "original_string": "public void onError(Exception e) {\n            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;\n            org.apache.thrift.TBase msg;\n            updateAppStatus_result result = new updateAppStatus_result();\n            if (e instanceof com.nercis.isscp.idl.InvalidRequestException) {\n                        result.ire = (com.nercis.isscp.idl.InvalidRequestException) e;\n                        result.setIreIsSet(true);\n                        msg = result;\n            }\n            else             if (e instanceof com.nercis.isscp.idl.UnavailableException) {\n                        result.ue = (com.nercis.isscp.idl.UnavailableException) e;\n                        result.setUeIsSet(true);\n                        msg = result;\n            }\n             else \n            {\n              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;\n              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());\n            }\n            try {\n              fcall.sendResponse(fb,msg,msgType,seqid);\n              return;\n            } catch (Exception ex) {\n              LOGGER.error(\"Exception writing to internal frame buffer\", ex);\n            }\n            fb.close();\n          }"}
{"author": "weather", "file": "ExecutorDelivery.4.java", "original_string": "@SuppressWarnings(\"unchecked\")\n        @Override\n        public void run() {\n            if (mRequest.isCanceled()) {\n                mRequest.finish(\"canceled-at-delivery\");\n                return;\n            }\n            if (mResponse.isSuccess()) {\n                mRequest.deliverResponse(mResponse.result);\n            } else {\n                mRequest.deliverError(mResponse.error);\n            }\n            if (mResponse.intermediate) {\n                mRequest.addMarker(\"intermediate-response\");\n            } else {\n                mRequest.finish(\"done\");\n            }\n            if (mRunnable != null) {\n                mRunnable.run();\n            }\n       }"}
{"author": "andengineexamples", "file": "AsyncGameActivityExample.1.java", "original_string": "@Override\n    public void onCreateResourcesAsync(final IProgressListener pProgressListener) throws Exception {\n        pProgressListener.onProgressChanged(0);\n        Thread.sleep(1000);\n        pProgressListener.onProgressChanged(20);\n        BitmapTextureAtlasTextureRegionFactory.setAssetBasePath(\"gfx/\");\n        Thread.sleep(1000);\n        this.mBitmapTextureAtlas = new BitmapTextureAtlas(this.getTextureManager(), 32, 32, TextureOptions.BILINEAR);\n        pProgressListener.onProgressChanged(40);\n        Thread.sleep(1000);\n        this.mFaceTextureRegion = BitmapTextureAtlasTextureRegionFactory.createFromAsset(AsyncGameActivityExample.this.mBitmapTextureAtlas, AsyncGameActivityExample.this, \"face_box.png\", 0, 0);\n        pProgressListener.onProgressChanged(60);\n        Thread.sleep(1000);\n        this.mBitmapTextureAtlas.load();\n        pProgressListener.onProgressChanged(80);\n        Thread.sleep(1000);\n        pProgressListener.onProgressChanged(100);\n    }"}
{"author": "Josh_Code", "file": "Vector3DTree.5.java", "original_string": "public synchronized Vector3D getDuplicate(Vector3D v)\n    {\n        if (v == null) return null;\n        int subtreeIndex = getSubtreeIndexForVector(v);\n        if (subtreeIndex < 0)\n            return rootV; if (subtrees[subtreeIndex] == null)\n            return null;\n        else\n            return subtrees[subtreeIndex].getDuplicate(v);    \n    }"}
{"author": "quyi", "file": "TSOperate.539.java", "original_string": "public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n      switch (field) {\n      case SUCCESS:\n        return isSetSuccess();\n      case IRE:\n        return isSetIre();\n      case UE:\n        return isSetUe();\n      }\n      throw new IllegalStateException();\n    }"}
{"author": "jfpl", "file": "WebContentActivity.1.java", "original_string": "public void setRefreshState(boolean flag) {\n        this.refreshState = flag;\n        if (flag) {\n            refreshBtn.setImageDrawable(getResources().getDrawable(\n                    R.drawable.webviewtab_refresh_normal));\n        } else {\n            refreshBtn.setImageDrawable(getResources().getDrawable(\n                    R.drawable.webviewtab_refresh_disable));\n        }\n    }"}
{"author": "golangpkg", "file": "ProgressManager.0.java", "original_string": "@Scheduled(fixedRate = 1000)\n    public void calculateProgress() {\n        synchronized (fileToProgressInfo) {\n            for (Entry<UUID, Set<UUID>> entry : clientToFilesMap.entrySet()) {\n                Set<UUID> originSet = entry.getValue();\n                Set<UUID> copySet;\n                synchronized (originSet) {\n                     copySet = Sets.newHashSet(originSet);\n                }\n                for (UUID fileId : copySet) {\n                    try {\n                        FileProgressStatus newProgress = progressCalculator.getProgress(entry.getKey(), fileId);\n                        if (newProgress != null) {\n                            FileProgressStatus progressInMap = fileToProgressInfo.get(fileId);\n                            if (progressInMap == null || !progressInMap.getProgress().equals(newProgress.getProgress())) {\n                                fileToProgressInfo.put(fileId, newProgress);\n                                progressManagerAdvertiser.advertise(entry.getKey(), fileId, newProgress);\n                            }\n                        }\n                    }\n                    catch (FileNotFoundException e) {\n                        log.debug(\"cannot retrieve progress for \"+fileId);\n                    }\n                }\n            }\n        }\n    }"}
{"author": "0opslab", "file": "ZIPUtil.1.java", "original_string": "public final static void zipFile(File inFile, ZipOutputStream zos, String dir) throws IOException {\n        if (inFile.isDirectory()) {\n            File[] files = inFile.listFiles();\n            if (valid.valid(files)) {\n                for (File file : files) {\n                    String name = inFile.getName();\n                    if (!\"\".equals(dir)) {\n                        name = dir + \"/\" + name;\n                    }\n                    zipFile(file, zos, name);\n                }\n            }\n        } else {\n            String entryName = null;\n            if (!\"\".equals(dir)) {\n                entryName = dir + \"/\" + inFile.getName();\n            } else {\n                entryName = inFile.getName();\n            }\n            ZipEntry entry = new ZipEntry(entryName);\n            zos.putNextEntry(entry);\n            try (InputStream is = new FileInputStream(inFile)) {\n                int len = 0;\n                while ((len = is.read()) != -1) {\n                    zos.write(len);\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }"}
{"author": "BrandConstantin", "file": "TablaMultiplicacionConDoWhile.0.java", "original_string": "public static void main(String[] args){\n        Scanner tecla = new Scanner(System.in);\n        System.out.println(\"TABLA MULTIPLICAR\");\n        System.out.println(\"============================================\");\n        int i = 1;\n        int resultado;\n        System.out.println(\"Escribe el numero que quieres multiplicar\");\n        int num = tecla.nextInt();\n        System.out.println(\"============================================\");\n        do{\n            resultado = i * num;\n            System.out.println(num + \" X \" + i + \" = \" + resultado);\n            i++;\n        } while (i <= 10);\n    }"}
{"author": "waimai", "file": "UGoodsCollectionController.2.java", "original_string": "@RequestMapping(\"/list\")\n    public @ResponseBody Map<String, Object> list(BaseConditionVO vo) {\n        Map<String, Object> map = new HashMap<String, Object>();\n        if (!StringUtils.isEmpty(vo.getUserId())) {\n            List<GoodsCollection> goodsCollectionList = goodsCollectionService.search(vo);\n            map.put(\"count\", goodsCollectionList.size());\n            map.put(\"goodsCollections\", goodsCollectionList);\n        } else {\n            map.put(\"count\", 0);\n        }\n        return map;\n    }"}
{"author": "seadroid", "file": "RenameFileDialog.1.java", "original_string": "public void init(String repoID, String path, boolean isdir, Account account) {\n        this.repoID = repoID;\n        this.path = path;\n        this.isdir = isdir;\n        this.account = account;\n    }"}
{"author": "Viscent", "file": "ImplicitParameterPassing.0.java", "original_string": "public static void main(String[] args) throws InterruptedException {\n        ClientThread thread;\n        BusinessService bs = new BusinessService();\n        for (int i = 0; i < Integer.valueOf(args[0]); i++) {\n            thread = new ClientThread(\"test\", bs);\n            thread.start();\n            thread.join();\n        }\n    }"}
{"author": "quyi", "file": "ConfigModifyService.320.java", "original_string": "@Override\n    public int compareTo(modifyEngineConfig_args other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      lastComparison = Boolean.valueOf(isSetPropertyName()).compareTo(other.isSetPropertyName());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetPropertyName()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.propertyName, other.propertyName);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetPropertyValue()).compareTo(other.isSetPropertyValue());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetPropertyValue()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.propertyValue, other.propertyValue);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }"}
{"author": "pacman", "file": "DefaultMQReceiver.3.java", "original_string": "@Override\n    public String getDestName() {\n        try {\n            if (mIsQueue)\n                return ((Queue)mDestination).getQueueName();\n            else\n                return ((Topic)mDestination).getTopicName();\n        } catch (JMSException e) {\n            e.printStackTrace();\n            return \"\";\n        }\n    }"}
{"author": "Viscent", "file": "ParallelPrimeGenerator.5.java", "original_string": "@Override\n    protected Set<BigInteger> combineResults(\n        Iterator<Future<Set<BigInteger>>> subResults) {\n        Set<BigInteger> result = new TreeSet<BigInteger>();\n        while (subResults.hasNext()) {\n            try {\n                result.addAll(subResults.next().get());\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            } catch (ExecutionException e) {\n                Throwable cause = e.getCause();\n                if (SubTaskFailureException.class.isInstance(cause)) {\n                    @SuppressWarnings(\"rawtypes\")\n                    RetryInfo retryInfo = ((SubTaskFailureException) cause).retryInfo;\n                    Object subTask = retryInfo.subTask;\n                    Debug.info(\"failed subTask:\" + subTask);\n                    e.printStackTrace();\n                }\n            }\n        }\n        return result;\n    }"}
{"author": "mthli", "file": "EditorPaneFrame.2.java", "original_string": "public void actionPerformed(ActionEvent event)\n            {\n               try\n               {\n                  urlStack.push(url.getText());\n                  editorPane.setPage(url.getText());\n               }\n               catch (IOException e)\n               {\n                  editorPane.setText(\"Exception: \" + e);\n               }\n            }"}
{"author": "quyi", "file": "TSOperate.322.java", "original_string": "public void validate() throws org.apache.thrift.TException {\n      if (missionId == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'missionId' was not present! Struct: \" + toString());\n      }\n      if (userAppId == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'userAppId' was not present! Struct: \" + toString());\n      }\n      }"}
{"author": "quyi", "file": "TSOperate.187.java", "original_string": "public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);\n    }"}
{"author": "andengineexamples", "file": "SpriteRemoveExample.3.java", "original_string": "@Override\n    public boolean onSceneTouchEvent(final Scene pScene, final TouchEvent pSceneTouchEvent) {\n        if(this.mFaceToRemove == null) {\n            return false;\n        }\n        final EngineLock engineLock = this.mEngine.getEngineLock();\n        engineLock.lock();\n        pScene.detachChild(this.mFaceToRemove);\n        this.mFaceToRemove.dispose();\n        this.mFaceToRemove = null;\n        engineLock.unlock();\n        return true;\n    }"}
{"author": "chweixin", "file": "WeChatDefaultReplyDaoImpl.1.java", "original_string": "@Override\n    public List<WeChatDefaultReply> findReplies(WeChatDefaultReplyInfo info) {\n        String hql = \"from WeChatDefaultReply w where 1=1 \";\n        Map<String, Object> parameters = new HashMap<>();\n        hql = this.addWhere(info, hql, parameters);\n        if(info.getSort() != null && !info.getSort().trim().isEmpty()){\n            if(info.getSort().equalsIgnoreCase(\"accountName\")){\n                info.setSort(\"account.name\");\n            }\n            hql += \" order by w.\" + info.getSort() + \" \" + info.getOrder();\n        }\n        return this.find(hql, parameters, info.getPage(), info.getRows());\n    }"}
{"author": "andengineexamples", "file": "SpriteRemoveExample.0.java", "original_string": "@Override\n    public EngineOptions onCreateEngineOptions() {\n        Toast.makeText(this, \"Touch the screen to safely remove the sprite.\", Toast.LENGTH_LONG).show();\n        final Camera camera = new Camera(0, 0, CAMERA_WIDTH, CAMERA_HEIGHT);\n        return new EngineOptions(true, ScreenOrientation.LANDSCAPE_FIXED, new RatioResolutionPolicy(CAMERA_WIDTH, CAMERA_HEIGHT), camera);\n    }"}
{"author": "mthli", "file": "BeanInfoAnnotationProcessor.0.java", "original_string": "@Override\n   public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)\n   {\n      for (TypeElement t : annotations)\n      {\n         Map<String, Property> props = new LinkedHashMap<>();\n         String beanClassName = null;\n         for (Element e : roundEnv.getElementsAnnotatedWith(t))\n         {\n            String mname = e.getSimpleName().toString();\n            String[] prefixes = { \"get\", \"set\", \"is\" };\n            boolean found = false;\n            for (int i = 0; !found && i < prefixes.length; i++)\n               if (mname.startsWith(prefixes[i]))\n               {\n                  found = true;\n                  int start = prefixes[i].length();\n                  String name = Introspector.decapitalize(mname.substring(start));\n                  props.put(name, e.getAnnotation(Property.class));\n               }\n            if (!found) processingEnv.getMessager().printMessage(Kind.ERROR,\n                  \"@Property must be applied to getXxx, setXxx, or isXxx method\", e);\n            else if (beanClassName == null)\n               beanClassName = ((TypeElement) e.getEnclosingElement()).getQualifiedName()\n                     .toString();\n         }\n         try\n         {\n            if (beanClassName != null) writeBeanInfoFile(beanClassName, props);\n         }\n         catch (IOException e)\n         {\n            e.printStackTrace();\n         }\n      }\n      return true;\n   }"}
{"author": "dlna_framework", "file": "ArgumentList.1.java", "original_string": "public Argument getArgument(String name)\n    {\n        int nArgs = size();\n        for (int n=0; n<nArgs; n++) {\n            Argument arg = getArgument(n);\n            String argName = arg.getName();\n            if (argName == null)\n                continue;\n            if (argName.equals(name) == true)\n                return arg;\n        }\n        return null;\n    }"}
{"author": "quyi", "file": "DynamicCheckResultData.30.java", "original_string": "public void addToFileOperate(FileOperate elem) {\n    if (this.fileOperate == null) {\n      this.fileOperate = new ArrayList<FileOperate>();\n    }\n    this.fileOperate.add(elem);\n  }"}
{"author": "quyi", "file": "TSOperate.355.java", "original_string": "public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n      switch (field) {\n      case SUCCESS:\n        return isSetSuccess();\n      case IRE:\n        return isSetIre();\n      case UE:\n        return isSetUe();\n      }\n      throw new IllegalStateException();\n    }"}
{"author": "johnno1962", "file": "ApplicationAdapterProxy.6.java", "original_string": "public void handlePreferences( com.apple.eawt.ApplicationEvent arg0 ) {\n        if ( !entered_handlePreferences_6 ) {\n            entered_handlePreferences_6 = true;\n            __handlePreferences( arg0 );\n            entered_handlePreferences_6 = false;\n        }\n        else\n            super.handlePreferences( arg0 );\n    }"}
{"author": "mark_watson", "file": "PowerLoomUtils.1.java", "original_string": "public int changeModule(String workingModule) {\n        try {\n            PLI.sChangeModule(workingModule, null);\n            this.workingModule = workingModule;\n            return 1;\n        } catch (Exception ex) {\n            System.out.println(\"Error changing module \" + workingModule + \" is: \" + ex);\n            return 0;\n        }   \n    }"}
{"author": "applewjg", "file": "TwoSum.0.java", "original_string": "public int[] twoSum(int[] numbers, int target) {\n        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n        for (int i = 0; i < numbers.length; ++i) {\n            int b = target - numbers[i];\n            if (map.get(b) != null) {\n                return new int[]{map.get(b),i+1};\n            } else map.put(numbers[i],i+1);\n        }\n        return null;\n    }"}
{"author": "Josh_Code", "file": "ModelLoader.4.java", "original_string": "public static String removePoundLineCommentAndTrim(String ln) \n    {\n        if (ln == null)\n            return null;\n        int index1 = ln.indexOf('#'); if (index1 == 0)\n             return \"\";\n         else if (index1 >= 1)\n             ln = ln.substring(0, index1);\n         return ln.trim();\n    }"}
{"author": "sample_server", "file": "SynService.0.java", "original_string": "public static final void syn()\n    {\n        Map<Integer, ChatServerRpc.SynReq.Builder> map = new HashMap<>();\n        List<NoticeEntity> noticeList = DaoManager.getLocalDao().selectList(NoticeEntity.class);\n        if (noticeList.size() > 0)\n        {\n            for (NoticeEntity each : noticeList)\n            {\n                Integer zoneId = each.getZoneId();\n                ChatServerRpc.SynReq.Builder req = map.get(zoneId);\n                if (null == req)\n                {\n                    req = ChatServerRpc.SynReq.newBuilder();\n                    map.put(zoneId, req);\n                }\n                req.addSysNoticeDto(each.toDTO());\n            }\n        }\n        List<BulletinEntity> bulletinList = DaoManager.getLocalDao().selectList(BulletinEntity.class);\n        if (bulletinList.size() > 0)\n        {\n            for (BulletinEntity each : bulletinList)\n            {\n                Integer zoneId = each.getZoneId();\n                ChatServerRpc.SynReq.Builder req = map.get(zoneId);\n                if (null == req)\n                {\n                    req = ChatServerRpc.SynReq.newBuilder();\n                    map.put(zoneId, req);\n                }\n                req.addBulletinDto(each.toDTO());\n            }\n        }\n        for (ZoneEntity each : ZoneEntityManager.getInstance().getAllZoneEntiry())\n        {\n            ChatServerRpcClient client = RpcClientManager.getInstance().getChatServerRpcClientByZone(each);\n            ChatServerRpc.SynReq.Builder builder = map.get(each.getZoneId());\n            if (null != client && null != builder)\n            {\n                client.syn(map.get(each.getZoneId()).build());\n            }\n        }\n        log.info(\"\u540c\u6b65\u4e86Notice&Bulletin\");\n    }"}
{"author": "mthli", "file": "CircleLayout.4.java", "original_string": "public Dimension minimumLayoutSize(Container parent)\n   {\n      setSizes(parent);\n      Insets insets = parent.getInsets();\n      int width = minWidth + insets.left + insets.right;\n      int height = minHeight + insets.top + insets.bottom;\n      return new Dimension(width, height);\n   }"}
{"author": "weijuhui", "file": "EditActivity.4.java", "original_string": "private void initKeywordsFlow(String[] keywords) {\n        keywordsFlow.setDuration(800l);\n        keywordsFlow.setOnItemClickListener(this);\n        feedKeywordsFlow(keywordsFlow, keywords);\n        keywordsFlow.go2Show(KeywordsFlow.ANIMATION_OUT);\n    }"}
{"author": "quyi", "file": "EngineOperate.510.java", "original_string": "@Override\n      public void write(org.apache.thrift.protocol.TProtocol prot, searchAllEng_result struct) throws org.apache.thrift.TException {\n        TTupleProtocol oprot = (TTupleProtocol) prot;\n        BitSet optionals = new BitSet();\n        if (struct.isSetSuccess()) {\n          optionals.set(0);\n        }\n        if (struct.isSetIre()) {\n          optionals.set(1);\n        }\n        if (struct.isSetUe()) {\n          optionals.set(2);\n        }\n        oprot.writeBitSet(optionals, 3);\n        if (struct.isSetSuccess()) {\n          {\n            oprot.writeI32(struct.success.size());\n            for (Engine _iter60 : struct.success)\n            {\n              _iter60.write(oprot);\n            }\n          }\n        }\n        if (struct.isSetIre()) {\n          struct.ire.write(oprot);\n        }\n        if (struct.isSetUe()) {\n          struct.ue.write(oprot);\n        }\n      }"}
{"author": "newweb", "file": "SupplierServiceImp.6.java", "original_string": "@Override\n    public boolean isUsed(int id) {\n        Supplier supplier = supplierDao.selectSupplierById(id);\n        Set<Bxg> bxgs = supplier.getBxgs();\n        for (Bxg bxg : bxgs) {\n            if(bxg.getOrderBxgs().size() > 0)\n                return true;\n        }\n        Set<Small> smalls = supplier.getSmalls();\n        for (Small small : smalls) {\n            if(small.getOrderSmalls().size() > 0)\n                return true;\n        }\n        Set<MaterialBrand> materialBrands = supplier.getMaterialBrands();\n        for (MaterialBrand materialBrand : materialBrands) {\n            if(materialBrand.getOrderLhjs().size() > 0)\n                return true;\n        }\n        return false;\n    }"}
{"author": "johnno1962", "file": "FocusAdapterProxy.4.java", "original_string": "public int hashCode() {\n        if ( !entered_hashCode_4 ) {\n            entered_hashCode_4 = true;\n            int __return = __hashCode( );\n            entered_hashCode_4 = false;\n            return __return;\n        }\n        else\n            return super.hashCode( );\n    }"}
{"author": "weijuhui", "file": "AMapUtil.2.java", "original_string": "public static String colorFont(String src, String color) {\n        StringBuffer strBuf = new StringBuffer();\n        strBuf.append(\"<font color=\").append(color).append(\">\").append(src)\n                .append(\"</font>\");\n        return strBuf.toString();\n    }"}
{"author": "weijuhui", "file": "EditActivity.2.java", "original_string": "@Click(R.id.title_pos)\n    void pos() {\n        Intent intent = new Intent(EditActivity.this, LaunchActivity.class);\n        intent.putExtra(\"value\", details_dt.getText().toString());\n        setResult(flag, intent);\n        finish();\n    }"}
{"author": "seadroid", "file": "BaseImage.1.java", "original_string": "@Override\n    public boolean equals(Object other) {\n        if (other == null || !(other instanceof Image)) return false;\n        return mUri.equals(((Image) other).mUri);\n    }"}
{"author": "quyi", "file": "StaticCheckResultData.1.java", "original_string": "public static _Fields findByThriftIdOrThrow(int fieldId) {\n      _Fields fields = findByThriftId(fieldId);\n      if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n      return fields;\n    }"}
{"author": "quyi", "file": "NodeInfo.25.java", "original_string": "public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);\n  }"}
{"author": "lemire", "file": "BufferedIterator.8.java", "original_string": "@Override\n    public BufferedIterator clone() throws CloneNotSupportedException {\n        BufferedIterator answer = (BufferedIterator) super.clone();\n        answer.iteratingBrlw = this.iteratingBrlw.clone();\n        answer.masterIterator = this.masterIterator.clone();\n        return answer;\n    }"}
{"author": "mark_watson", "file": "GraphBreadthFirstSearch.3.java", "original_string": "public void paint(Graphics g) {\n    super.paint(g);\n    if (engine != null && path != null) {\n            int numNodes = engine.getNumNodes();\n            int numLinks = engine.getNumLinks();\n            for (int i=0; i<numLinks; i++) {\n               int l1 = engine.getLink1(i);\n               int l2 = engine.getLink2(i);\n               int x1 = engine.getNodeX(l1);\n               int y1 = engine.getNodeY(l1);\n               int x2 = engine.getNodeX(l2);\n               int y2 = engine.getNodeY(l2);\n               g.setColor(Color.lightGray);\n               g.drawLine(x1, y1, x2, y2);\n            }\n            for (int i=1; i<path.length; i++) {\n               int x1 = engine.getNodeX(path[i-1]);\n               int y1 = engine.getNodeY(path[i-1]);\n               int x2 = engine.getNodeX(path[i]);\n               int y2 = engine.getNodeY(path[i]);\n               g.setColor(Color.black);\n               g.drawLine(x1, y1, x2, y2);\n            }\n            for (int i=0; i<numNodes; i++) {\n               int x1 = engine.getNodeX(i);\n               int y1 = engine.getNodeY(i);\n               paintNode(g, engine.getNodeName(i), x1, y1);\n            }\n        }\n    }"}
{"author": "johnno1962", "file": "FullScreenAdapterProxy.6.java", "original_string": "public int hashCode() {\n        if ( !entered_hashCode_6 ) {\n            entered_hashCode_6 = true;\n            int __return = __hashCode( );\n            entered_hashCode_6 = false;\n            return __return;\n        }\n        else\n            return super.hashCode( );\n    }"}
{"author": "lemire", "file": "IteratorUtil.7.java", "original_string": "public static IteratingRLW[] toIterators(\n            final EWAHCompressedBitmap... x) {\n        IteratingRLW[] X = new IteratingRLW[x.length];\n        for (int k = 0; k < X.length; ++k) {\n            X[k] = new IteratingBufferedRunningLengthWord(x[k]);\n        }\n        return X;\n    }"}
{"author": "mark_watson", "file": "Hopfield.5.java", "original_string": "private float deltaEnergy(int index) {\n        float temp = 0.0f;\n        for (int j = 0; j < numInputs; j++) {\n            temp += weights[index][j] * inputCells[j];\n        }\n        return 2.0f * temp - tempStorage[index];\n    }"}
{"author": "chweixin", "file": "WeChatMenuDaoImpl.1.java", "original_string": "@Override\n    public WeChatMenu loadMenu(String accountId,String code) {\n        if(accountId == null || accountId.trim().isEmpty()) return null;\n        if(code == null || code.trim().isEmpty()) return null;\n        final String hql = \"from WeChatMenu w where w.account.id = :accountId and w.code = :code\";\n        Map<String, Object> parameters = new HashMap<String, Object>();\n        parameters.put(\"accountId\", accountId);\n        parameters.put(\"code\", code);\n        List<WeChatMenu> list = this.find(hql, parameters, null, null);\n        if(list == null || list.size() == 0) return null;\n        return list.get(0);\n    }"}
{"author": "waimai", "file": "USendAddressController.0.java", "original_string": "@RequestMapping(\"/list\")\n    public @ResponseBody Map<String, Object> list(Integer userId) {\n        Map<String, Object> map = new HashMap<String, Object>();\n        List<SendAddress> sendAddresses = sendAddressService.findById(userId);\n        map.put(\"count\", sendAddresses.size());\n        map.put(\"sendAddresses\", sendAddresses);\n        return map;\n    }"}
{"author": "quyi", "file": "TSOperate.836.java", "original_string": "@Override\n      public void write(org.apache.thrift.protocol.TProtocol prot, heart_result struct) throws org.apache.thrift.TException {\n        TTupleProtocol oprot = (TTupleProtocol) prot;\n        BitSet optionals = new BitSet();\n        if (struct.isSetSuccess()) {\n          optionals.set(0);\n        }\n        if (struct.isSetIre()) {\n          optionals.set(1);\n        }\n        if (struct.isSetUe()) {\n          optionals.set(2);\n        }\n        oprot.writeBitSet(optionals, 3);\n        if (struct.isSetSuccess()) {\n          oprot.writeI32(struct.success.getValue());\n        }\n        if (struct.isSetIre()) {\n          struct.ire.write(oprot);\n        }\n        if (struct.isSetUe()) {\n          struct.ue.write(oprot);\n        }\n      }"}
{"author": "chao420456", "file": "ForForDemo2.0.java", "original_string": "public static void main(String[] args) {\n        for(int x=0; x<5; x++) {\n            for(int y=0; y<=x; y++) {\n                System.out.print(\"*\");\n            }\n            System.out.println();\n        }\n        System.out.println(\"---------\");\n        for(int x=1; x<=5; x++) {\n            for(int y=1; y<=x; y++) {\n                System.out.print(\"*\");\n            }\n            System.out.println();\n        }\n    }"}
{"author": "applewjg", "file": "RotateImage.1.java", "original_string": "public void rotate_2(int[][] matrix) {\n        int n = matrix.length;\n        if (n <= 1) return;\n        int level = 0;\n        while (level < n / 2) {\n            for (int i = level; i < n - 1 - level; ++i) {\n                int tmp = matrix[i][level];\n                matrix[i][level] = matrix[n - 1 - level][i];\n                matrix[n - 1 - level][i] = matrix[n - 1 - i][n - 1 - level];\n                matrix[n - 1 - i][n - 1 - level] = matrix[level][n - 1 - i];\n                matrix[level][n - 1 - i] = tmp;\n            }\n            ++level;\n        }\n    }"}
{"author": "quyi", "file": "TSOperate.563.java", "original_string": "@Override\n    public void clear() {\n      this.missionId = null;\n      this.userAppId = null;\n      this.plotsStatus = null;\n      this.usedPermissions = null;\n      this.stcRD = null;\n      this.dycRD = null;\n      this.virRD = null;\n    }"}
{"author": "weijuhui", "file": "BitmapFillet.1.java", "original_string": "private static void clipLeft(final Canvas canvas,final Paint paint,int offset,int width,int height){\n        final Rect block = new Rect(offset,0,width,height);\n        canvas.drawRect(block, paint);\n        final RectF rectF = new RectF(0, 0, offset * 2 , height);\n        canvas.drawRoundRect(rectF, offset, offset, paint);\n    }"}
{"author": "quyi", "file": "TestClientForNercis.11.java", "original_string": "@Test\n    public void testSubmitJob001() throws TimeoutException, TException {\n        List<JobOperationRequirement> jobOpList = new ArrayList<JobOperationRequirement>();\n        JobOperationRequirement taskOp2 = new JobOperationRequirement();\n        taskOp2.setJobLifecycle(JobLifecycle.ANALYSIS);\n        taskOp2.setJobPhase(JobPhase.PROCESS);\n        taskOp2.setJobExecutionMode(JobExecutionMode.EXCLUSIVE);\n        taskOp2.setJobReturnMode(JobReturnMode.PASSIVE);\n        taskOp2.setTimeout(180000);\n        jobOpList.add(taskOp2);\n        List<JobParameter> jobParameterList = new ArrayList<JobParameter>();\n        JobParameter taskParam1 = new JobParameter();\n        taskParam1.setJobPhase(JobPhase.PROCESS);\n        taskParam1.setAppId(1000L);\n        List<ContextParameter> contextParamList1 = new ArrayList<ContextParameter>();\n        ContextParameter parameter1 = new ContextParameter();\n        parameter1.setSequenceNum(1);\n        parameter1.setContent(\"test/test.apk\");\n        parameter1.setNeedDownload(true);\n        contextParamList1.add(parameter1);\n        ContextParameter parameter2 = new ContextParameter();\n        parameter2.setSequenceNum(2);\n        parameter2.setContent(String.valueOf(taskParam1.getAppId()));\n        parameter2.setNeedDownload(false);\n        contextParamList1.add(parameter2);\n        taskParam1.setContextParameterList(contextParamList1);\n        jobParameterList.add(taskParam1);\n        List<JobPhase> jobPhaseList = new ArrayList<JobPhase>();\n        jobPhaseList.add(JobPhase.PROCESS);\n        List<JobResourceRequirement> jobRescList = new ArrayList<JobResourceRequirement>();\n        JobResourceRequirement jobResc2 = new JobResourceRequirement();\n        jobResc2.setJobLifecycle(JobLifecycle.ANALYSIS);\n        jobResc2.setJobPhase(JobPhase.PROCESS);\n        jobResc2.setClusterType(ClusterType.DEDICATED);\n        jobResc2.setNodeType(NodeType.INTERNET_ACCESSIBLE);\n        jobRescList.add(jobResc2);\n        TaskClientService.Client taskClient = null;\n        long jobId = 0L;\n        try {\n            taskClient = TaskClientRpcUtils.getReceiver(taskmanager_address, taskmanager_submit_port, 5000, 5);\n        } catch (TTransportException e) {\n            e.printStackTrace();\n        }\n        try {\n            jobId = taskClient.submitJobForMission(0, AppType.APK, JobLifecycle.ANALYSIS, jobPhaseList, JobDistributionMode.PARALLEL,\n                    com.softsec.tase.common.rpc.domain.job.JobPriority.MEDIUM, jobOpList, jobRescList, jobParameterList, 5000L, \"test\");\n        } catch (InvalidRequestException e) {\n            e.printStackTrace();\n        } catch (UnavailableException e) {\n            e.printStackTrace();\n        } catch (TimeoutException e) {\n            e.printStackTrace();\n        } catch (TException e) {\n            e.printStackTrace();\n        }\n        System.out.println(jobId);\n    }"}
{"author": "mark_watson", "file": "SparqlQueries2.1.java", "original_string": "public void processResult(List<String> data) {\n       System.out.print(\"next result: \"); \n       for (String s : data) System.out.print(\"|\"+s+\"|\" + \"\\t  \");\n       System.out.println(\" . \");\n    }"}
{"author": "quyi", "file": "TSOperate.365.java", "original_string": "private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }"}
{"author": "mthli", "file": "QueryTest.3.java", "original_string": "public static String select(String prompt, List<String> options)\n   {\n      while (true)\n      {\n         System.out.println(prompt);     \n         for (int i = 0; i < options.size(); i++)\n            System.out.printf(\"%2d) %s%n\", i + 1, options.get(i));\n         int sel = in.nextInt();\n         if (sel > 0 && sel <= options.size())\n            return options.get(sel - 1);\n      }      \n   }"}
{"author": "Viscent", "file": "OMCAgent.0.java", "original_string": "@Override\n  public void run() {\n        boolean isTableModificationMsg=false;\n        String updatedTableName=null;\n      while(true){\n        if(isTableModificationMsg){\n            if(\"MMSCInfo\".equals(updatedTableName)){\n                MMSCRouter.setInstance(new MMSCRouter());\n            }\n        }\n        }\n  }"}
{"author": "jerry_m_lumontod", "file": "GLCodeIsValid.0.java", "original_string": "public void GLCodeIsValid(String tstrCompCode,String tstrGLCode) {\n        try {\n            Class.forName(\"com.mysql.jdbc.Driver\").newInstance();\n            Connection conn=DriverManager.getConnection(\"jdbc:mysql://localhost/eis?user=root&password=\");\n            Statement st;\n            ResultSet rs;\n            st=conn.createStatement();\n            mstrSQL = \"select * from acct3 where cglcode = '\" + tstrGLCode + \"' and ccompcode = '\" + tstrCompCode + \"'\";\n            rs=st.executeQuery(mstrSQL);\n            if (rs.next()) {\n                mstrTheMessage=\"\";\n            }else {\n                mstrTheMessage=\"GL code not found!\";\n            }\n            rs.close();\n            st.close();\n            conn.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.err.println(\"Load data error: \"+e.toString());\n        }\n    }"}
{"author": "BrandConstantin", "file": "HorasTranscuridas.0.java", "original_string": "public static void main(String[] args) {\n    Scanner teclado = new Scanner(System.in);\n    System.out.println(\"AVERIGUAR LAS HORAS TRANSCURIDOS ENTRE DOS DIAS\");\n    int dia1 = 0;\n    int dia2 = 0;\n    int hora1;\n    int hora2;\n    boolean verdadero = true;\n    String diaUno;\n    String diaDos;\n    String nombreDiaUno = \"\";\n    String nombreDiaDos = \"\";\n    do{\n        System.out.println(\"Introduce la primera hora:\");\n        hora1 = teclado.nextInt();\n        System.out.println(\"Introdue el dia:\");\n        diaUno = teclado.next();\n        switch (diaUno){\n             case \"lunes\":\n             case \"1\":\n                    dia1 = 1;\n                     nombreDiaUno = \"lunes\";\n                    break;\n              case \"martes\":\n              case \"2\":\n                    dia1 = 2;\n                    nombreDiaUno = \"martes\";\n                    break;\n              case \"miercoles\":\n              case \"3\":\n                    dia1 = 3;\n                    nombreDiaUno = \"miercoles\";\n                    break;\n              case \"jueves\":\n              case \"4\":\n                    dia1 = 4;\n                    nombreDiaUno = \"jueves\";\n                    break;\n             case \"viernes\":\n              case \"5\":\n                    dia1 = 5;\n                    nombreDiaUno = \"viernes\";\n                    break;\n             case \"sabado\":\n              case \"6\":\n                    dia1 = 6;\n                    nombreDiaUno = \"sabado\";\n                    break;\n              case \"domingo\":\n              case \"7\":\n                    dia1 = 7;\n                    nombreDiaUno = \"domingo\";\n                    break;\n        }\n        System.out.println(\"Introduce la segunda hora:\");\n        hora2 = teclado.nextInt();\n        System.out.println(\"Introdue el segundo dia:\");\n        diaDos = teclado.next();\n        switch (diaDos){\n            case \"lunes\":\n            case \"1\":\n                   dia2 = 1;\n                    nombreDiaDos = \"lunes\";\n                   break;\n             case \"martes\":\n             case \"2\":\n                   dia2 = 2;\n                   nombreDiaDos = \"martes\";\n                   break;\n             case \"miercoles\":\n             case \"3\":\n                   dia2 = 3;\n                   nombreDiaDos = \"miercoles\";\n                   break;\n             case \"jueves\":\n             case \"4\":\n                   dia2= 4;\n                   nombreDiaDos = \"jueves\";\n                   break;\n            case \"viernes\":\n             case \"5\":\n                   dia2 = 5;\n                   nombreDiaDos = \"viernes\";\n                   break;\n            case \"sabado\":\n             case \"6\":\n                   dia2 = 6;\n                   nombreDiaDos = \"sabado\";\n                   break;\n             case \"domingo\":\n             case \"7\":\n                   dia2 = 7;\n                   nombreDiaDos = \"domingo\";\n                   break;\n        }\n        verdadero = true;\n        if (dia2 <= dia1) {\n            System.out.println(\"El segundo d\u00eda debe ser posterior al primero.\");\n            verdadero = false;\n        }\n        if ((dia1 == 0) || (dia2 == 0)){\n            System.out.println(\"Introduce un dia correcto de la semana! (1-7/lunes-domingo)\");\n            verdadero = false;\n        }\n        if (((hora1 < 0) || (hora1 > 23)) || ((hora2 < 0) || (hora2 > 23))){\n            System.out.println(\"Introduce una hora correcto (0-23)\");        \n            verdadero = false;\n        }\n    } while (!verdadero);\n    System.out.println(\"Entre \" + hora1 + \" primera hora del dia \" + nombreDiaUno + \" y la seguna \" + \n       \" hora \" + hora2 + \" del dia \" + nombreDiaDos + \" hay un total de \");\n    System.out.print(((dia2 * 24) + hora2) - ((dia1 * 24) + hora1) + \" horas\");\n  }"}
{"author": "wak_edil", "file": "Drinks.0.java", "original_string": "public void actionPerformed(ActionEvent e)\n    {\n        if(e.getSource() ==jbtBack)\n        {\n        Open frame = new Open();\n        frame.setTitle(\"Menu View\");\n        frame.setSize(500,500);\n        frame.setVisible(true);\n        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n        frame.setResizable(true);\n        frame.setLocationRelativeTo(null);\n        this.dispose();\n        }\n        if(e.getSource() ==jbtExit)\n        {\n            int confirm=JOptionPane.showConfirmDialog(null,\"Are you sure to exit?\",\"Exit \",JOptionPane.YES_NO_OPTION);\n                if(confirm==0)\n                    System.exit(0);\n        }\n        if(e.getSource() ==jbtChoc1)\n        {\n                SirapInfo frame = new SirapInfo();\n                frame.setTitle(\"Sirap Info\");\n                frame.setSize(950,400);\n                frame.setVisible(true);\n                frame.setLocationRelativeTo(null);\n                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n                this.dispose();\n        }\n        if(e.getSource() ==jbtChoc2)\n        {\n                BandungInfo frame = new BandungInfo();\n                frame.setTitle(\"Bandung Info\");\n                frame.setSize(950,400);\n                frame.setVisible(true);\n                frame.setLocationRelativeTo(null);\n                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n                this.dispose();\n        }\n        if(e.getSource() ==jbtChoc3)\n        {\n                TehTarikInfo frame = new TehTarikInfo();\n                frame.setTitle(\"Teh Tarik Info\");\n                frame.setSize(950,400);\n                frame.setVisible(true);\n                frame.setLocationRelativeTo(null);\n                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n                this.dispose();\n        }\n        if(e.getSource() ==jbtChoc4)\n        {\n                MiloInfo frame = new MiloInfo();\n                frame.setTitle(\"Milo Info\");\n                frame.setSize(950,400);\n                frame.setVisible(true);\n                frame.setLocationRelativeTo(null);\n                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n                this.dispose();\n        }\n        if(e.getSource() ==jbtChoc5)\n        {\n                NescafeInfo frame = new NescafeInfo();\n                frame.setTitle(\"Nescafe Info\");\n                frame.setSize(950,400);\n                frame.setVisible(true);\n                frame.setLocationRelativeTo(null);\n                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n                this.dispose();\n        }\n        if(e.getSource() ==jbtChoc6)\n        {\n                HorlickInfo frame = new HorlickInfo();\n                frame.setTitle(\"Horlick Info\");\n                frame.setSize(950,400);\n                frame.setVisible(true);\n                frame.setLocationRelativeTo(null);\n                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n                this.dispose();\n        }\n    }"}
{"author": "quyi", "file": "TSOperate.112.java", "original_string": "public void start(I iface, updateUserAppInfo_args args, org.apache.thrift.async.AsyncMethodCallback<com.nercis.isscp.idl.Result> resultHandler) throws TException {\n        iface.updateUserAppInfo(args.missionId, args.userAppId, args.plotsStatus, args.usedPermissions, args.stcRD, args.dycRD, args.virRD,resultHandler);\n      }"}
{"author": "quyi", "file": "AppDetectResult.6.java", "original_string": "@Override\n  public void clear() {\n    this.missionId = null;\n    this.userAppId = null;\n    this.usedPermissions = null;\n    this.plotsStatus = null;\n    this.functionStatus = null;\n    this.detectResult = null;\n  }"}
{"author": "quyi", "file": "EngineOperate.191.java", "original_string": "@Override\n    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof issuedMessage_result)\n        return this.equals((issuedMessage_result)that);\n      return false;\n    }"}
{"author": "applewjg", "file": "CombinationSumII.1.java", "original_string": "void combinationSumRe(int[] candidates, int target, int start, ArrayList<Integer> path, List<List<Integer>> res) {\n        if (target == 0) {\n            ArrayList<Integer> p = new ArrayList<Integer>(path);\n            res.add(p);\n            return;\n        }\n        for (int i = start; i < candidates.length && target >= candidates[i]; ++i) {\n            if (i!=start && candidates[i-1] == candidates[i]) continue;\n            path.add(candidates[i]);\n            combinationSumRe(candidates, target-candidates[i], i+1, path, res);\n            path.remove(path.size() - 1);\n        }\n    }"}
{"author": "applewjg", "file": "SearchinRotatedSortedArray.0.java", "original_string": "public int search(int[] A, int target) {\n        int i = 0, j = A.length - 1;\n        while (i <= j) {\n            int mid = (i + j) / 2;\n            if (A[mid] == target)\n                return mid;\n            if (A[i] <= A[mid]) {\n                if (A[i] <= target && target < A[mid])\n                    j = mid - 1;\n                else\n                    i = mid + 1;\n            } else {\n                if (A[mid] < target && target <= A[j])\n                    i = mid + 1;\n                else\n                    j = mid - 1;\n            }\n        }\n        return -1;\n    }"}
{"author": "mthli", "file": "SampleComponents.2.java", "original_string": "public static JTable table()\n   {\n      Object[][] cells = { { \"Mercury\", 2440.0, 0, false, Color.YELLOW },\n            { \"Venus\", 6052.0, 0, false, Color.YELLOW },\n            { \"Earth\", 6378.0, 1, false, Color.BLUE }, { \"Mars\", 3397.0, 2, false, Color.RED },\n            { \"Jupiter\", 71492.0, 16, true, Color.ORANGE },\n            { \"Saturn\", 60268.0, 18, true, Color.ORANGE },\n            { \"Uranus\", 25559.0, 17, true, Color.BLUE },\n            { \"Neptune\", 24766.0, 8, true, Color.BLUE },\n            { \"Pluto\", 1137.0, 1, false, Color.BLACK } };\n      String[] columnNames = { \"Planet\", \"Radius\", \"Moons\", \"Gaseous\", \"Color\" };\n      return new JTable(cells, columnNames);\n   }"}
{"author": "johnno1962", "file": "WindowAdapterProxy.12.java", "original_string": "public int hashCode() {\n        if ( !entered_hashCode_12 ) {\n            entered_hashCode_12 = true;\n            int __return = __hashCode( );\n            entered_hashCode_12 = false;\n            return __return;\n        }\n        else\n            return super.hashCode( );\n    }"}
{"author": "andengineexamples", "file": "SubMenuExample.0.java", "original_string": "@Override\n    public void onCreateResources() {\n        super.onCreateResources();\n        BitmapTextureAtlasTextureRegionFactory.setAssetBasePath(\"gfx/\");\n        this.mSubMenuTexture = new BitmapTextureAtlas(this.getTextureManager(), 256, 128, TextureOptions.BILINEAR);\n        this.mMenuOkTextureRegion = BitmapTextureAtlasTextureRegionFactory.createFromAsset(this.mSubMenuTexture, this, \"menu_ok.png\", 0, 0);\n        this.mMenuBackTextureRegion = BitmapTextureAtlasTextureRegionFactory.createFromAsset(this.mSubMenuTexture, this, \"menu_back.png\", 0, 50);\n        this.mSubMenuTexture.load();\n    }"}
{"author": "weather", "file": "PoolingByteArrayOutputStream.2.java", "original_string": "private void expand(int i) {\n        if (count + i <= buf.length) {\n            return;\n        }\n        byte[] newbuf = mPool.getBuf((count + i) * 2);\n        System.arraycopy(buf, 0, newbuf, 0, count);\n        mPool.returnBuf(buf);\n        buf = newbuf;\n    }"}
{"author": "johnno1962", "file": "MouseAdapterProxy.3.java", "original_string": "public void mouseExited( java.awt.event.MouseEvent e ) {\n        if ( !entered_mouseExited_3 ) {\n            entered_mouseExited_3 = true;\n            __mouseExited( e );\n            entered_mouseExited_3 = false;\n        }\n        else\n            super.mouseExited( e );\n    }"}
{"author": "johnno1962", "file": "MouseInputAdapterProxy.5.java", "original_string": "public void mouseMoved( java.awt.event.MouseEvent e ) {\n        if ( !entered_mouseMoved_5 ) {\n            entered_mouseMoved_5 = true;\n            __mouseMoved( e );\n            entered_mouseMoved_5 = false;\n        }\n        else\n            super.mouseMoved( e );\n    }"}
{"author": "Max_Lynch", "file": "GradientControls.2.java", "original_string": "public void stateChanged(ChangeEvent e)\n    {\n        if(e.getSource() == xSlider)\n        {\n            g_x = xSlider.getValue();\n        } else if(e.getSource() == ySlider)\n        {\n            g_y = ySlider.getValue();\n        } else if(e.getSource() == wSlider)\n        {\n            g_w = wSlider.getValue();\n        } else if(e.getSource() == hSlider)\n        {\n            g_h = hSlider.getValue();\n        }\n        update();\n    }"}
{"author": "quyi", "file": "AppSendMessage.51.java", "original_string": "@Override\n  public boolean equals(Object that) {\n    if (that == null)\n      return false;\n    if (that instanceof AppSendMessage)\n      return this.equals((AppSendMessage)that);\n    return false;\n  }"}
{"author": "quyi", "file": "ConfigModifyService.148.java", "original_string": "public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);\n      }"}
{"author": "pacman", "file": "FileController.3.java", "original_string": "private void saveFile(\n            MultipartFile file, \n            JsonResult result,\n            String preDir,\n            String libId,\n            String cwId,\n            boolean isPrimary) {\n        if (!NumericHelper.isNumeric(libId)) {\n            result.setSuccess(0);\n            result.setMsg(\"Invalid parameter: lid!\");\n            return;\n        }\n        if (!NumericHelper.isNumeric(cwId)) {\n            result.setSuccess(0);\n            result.setMsg(\"Invalid parameter: cid\");\n            return;\n        }\n        String imgDir = String.format(\"%s/%s/%s/\", preDir, libId, cwId);\n        FileHelper.ensureExists(imgDir, false);\n        File f = new File(imgDir + file.getOriginalFilename());\n        try {\n            file.transferTo(f);\n        } catch (Exception e) {\n            logger.error(\"Error occurs on saving file. \" + f.getName(), e);\n            result.setSuccess(0);\n            result.setMsg(\"Error occurs on saving file. \" + f.getName());\n            return;\n        }\n        String pubDir;\n        if (isPrimary)\n            pubDir = String.format(\"slicer/%s/%s/%s\", libId, cwId, file.getOriginalFilename());\n        else\n            pubDir = String.format(\"res/%s/%s/%s\", libId, cwId, file.getOriginalFilename());\n        result.setSuccess(1);\n        result.setMsg(pubDir);\n    }"}
{"author": "mthli", "file": "DesktopAppFrame.3.java", "original_string": "public void actionPerformed(ActionEvent e)\n            {\n               try\n               {\n                  Desktop.getDesktop().print(chooser.getSelectedFile());\n               }\n               catch (IOException ex)\n               {\n                  ex.printStackTrace();\n               }\n            }"}
{"author": "mthli", "file": "Banner.0.java", "original_string": "public int getPageCount(Graphics2D g2, PageFormat pf)\n   {\n      if (message.equals(\"\")) return 0;\n      FontRenderContext context = g2.getFontRenderContext();\n      Font f = new Font(\"Serif\", Font.PLAIN, 72);\n      Rectangle2D bounds = f.getStringBounds(message, context);\n      scale = pf.getImageableHeight() / bounds.getHeight();\n      double width = scale * bounds.getWidth();\n      int pages = (int) Math.ceil(width / pf.getImageableWidth());\n      return pages;\n   }"}
{"author": "weather", "file": "WeatherApi.12.java", "original_string": "@Override\n            public Map<String, String> getHeaders() throws AuthFailureError {\n                HashMap<String, String> map = new HashMap<String, String>();\n                map.put(\"Charset\", \"UTF-8\");\n                return map;\n            }"}
{"author": "quyi", "file": "UserApp.73.java", "original_string": "@Override\npublic void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);\n  }"}
{"author": "quyi", "file": "DynamicCheckResultData.83.java", "original_string": "@Override\n    public void write(org.apache.thrift.protocol.TProtocol prot, DynamicCheckResultData struct) throws org.apache.thrift.TException {\n      TTupleProtocol oprot = (TTupleProtocol) prot;\n      BitSet optionals = new BitSet();\n      if (struct.isSetApkMD5()) {\n        optionals.set(0);\n      }\n      if (struct.isSetSensitive()) {\n        optionals.set(1);\n      }\n      if (struct.isSetAutoRunMonitor()) {\n        optionals.set(2);\n      }\n      if (struct.isSetFileOperate()) {\n        optionals.set(3);\n      }\n      if (struct.isSetNetworkPacket()) {\n        optionals.set(4);\n      }\n      if (struct.isSetSystemResources()) {\n        optionals.set(5);\n      }\n      if (struct.isSetHardwareResources()) {\n        optionals.set(6);\n      }\n      if (struct.isSetCheckEndDate()) {\n        optionals.set(7);\n      }\n      oprot.writeBitSet(optionals, 8);\n      if (struct.isSetApkMD5()) {\n        oprot.writeString(struct.apkMD5);\n      }\n      if (struct.isSetSensitive()) {\n        {\n          oprot.writeI32(struct.sensitive.size());\n          for (String _iter56 : struct.sensitive)\n          {\n            oprot.writeString(_iter56);\n          }\n        }\n      }\n      if (struct.isSetAutoRunMonitor()) {\n        {\n          oprot.writeI32(struct.autoRunMonitor.size());\n          for (RunMonitor _iter57 : struct.autoRunMonitor)\n          {\n            _iter57.write(oprot);\n          }\n        }\n      }\n      if (struct.isSetFileOperate()) {\n        {\n          oprot.writeI32(struct.fileOperate.size());\n          for (FileOperate _iter58 : struct.fileOperate)\n          {\n            _iter58.write(oprot);\n          }\n        }\n      }\n      if (struct.isSetNetworkPacket()) {\n        {\n          oprot.writeI32(struct.networkPacket.size());\n          for (NetworkPacket _iter59 : struct.networkPacket)\n          {\n            _iter59.write(oprot);\n          }\n        }\n      }\n      if (struct.isSetSystemResources()) {\n        {\n          oprot.writeI32(struct.systemResources.size());\n          for (SystemResources _iter60 : struct.systemResources)\n          {\n            _iter60.write(oprot);\n          }\n        }\n      }\n      if (struct.isSetHardwareResources()) {\n        {\n          oprot.writeI32(struct.hardwareResources.size());\n          for (HardwareResources _iter61 : struct.hardwareResources)\n          {\n            _iter61.write(oprot);\n          }\n        }\n      }\n      if (struct.isSetCheckEndDate()) {\n        oprot.writeString(struct.checkEndDate);\n      }\n    }"}
{"author": "seadroid", "file": "SeafileObserver.2.java", "original_string": "private void watchAllCachedFiles() {\n        List<SeafCachedFile> cachedfiles = dataManager.getCachedFiles();\n        for (SeafCachedFile cached : cachedfiles) {\n            File file = dataManager.getLocalRepoFile(cached.repoName, cached.repoID, cached.path);\n            if (file.exists()) {\n                watchedFiles.put(file.getPath(), cached);\n            }\n        }\n        Log.d(DEBUG_TAG, \"watching files, # total watched \" + watchedFiles.size());\n    }"}
{"author": "weather", "file": "ResUtil.5.java", "original_string": "public static int  getThemeColorFromId(Context appContext,Context packageContext,int resid) {\n        int id = getResidFromIdentifier(appContext,packageContext,resid,\"color\");\n        return packageContext.getResources().getColor(id);\n    }"}
{"author": "0opslab", "file": "ImageIOTest.1.java", "original_string": "@Test\n    @Ignore\n    public void testImage() throws IOException {\n        String path = TestUtil.path+\"/image\";\n        String path_temp = TestUtil.path+\"/temp/image\";\n        String file = path +\"1.jpg\";\n        String file_temp = path_temp +\"1.jpg\";\n        BufferedImage bufferedImage = ImageIO.read(new File(file));\n        BufferedImage bufferedImage1 = zoomInImage(bufferedImage, 50);\n        FileOutputStream outputStream = new FileOutputStream(file_temp);\n        ImageIO.write(bufferedImage1,\"jpg\",outputStream );\n    }"}
{"author": "Tobias_Ogallo", "file": "Bus_Details.3.java", "original_string": "private void printList() \n    {\n        try {\n            ResultSet rst=Connect.getConnection().createStatement(\n            ResultSet.TYPE_SCROLL_INSENSITIVE,\n            ResultSet.CONCUR_UPDATABLE).executeQuery(\"select Bus_RegNo,Model,Capacity,insurance_Status,Insurance_Expiry from Buses\");\n                listPane.append(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n                listPane.append(\"Bus RegNo\"+\"\\t\\t\"+\"Model\"+\"\\t\\t\"+\"Capacity\"+\"\\t\\t\"+\"Insurance_Status\\t\"+\"Expiry Date\\n\");\n                while (rst.next())\n                {\n                    listPane.append(\"       \");\n                    listPane.append(rst.getString(1).trim());\n                    listPane.append(\"\\t\\t\");\n                    listPane.append(rst.getString(2).trim());\n                    listPane.append(\"\\t\\t\");\n                    listPane.append(rst.getString(3).trim());\n                    listPane.append(\"\\t\\t\");\n                    listPane.append(rst.getString(4).trim());\n                    listPane.append(\"\\t\\t\");\n                    listPane.append(rst.getString(5).trim());\n                    listPane.append(\"\\n\\n\");\n                 }\n                 if (rst != null)\n                  rst.close();\n               } catch (SQLException sqle) {\n                     JOptionPane.showMessageDialog(null, \" No Records found\"\n                                       + sqle.getMessage());\n                    return;\n               }\n       }"}
{"author": "sample_server", "file": "ZoneEntityManager.4.java", "original_string": "public ZoneEntity getFirstZoneEntiry()\n    {\n        Collection<ZoneEntity> coll = zoneEntityMap.values();\n        if (coll.size() > 0)\n        {\n            return coll.iterator().next();\n        }\n        else\n        {\n            return null;\n        }\n    }"}
{"author": "chacha", "file": "LoginContextImpl.1.java", "original_string": "public AuthResponse loginToken(AuthRequest request) {\n        String token=((String)request.getKey(AuthRequest.KEY_TOKEN)).trim();\n        LoginToken loginToken=loginTokenDAO.getTokenByToken(token);\n        if(loginToken==null){\n            response.setResult(ResponseCode.ERROR_TOKENNOTEXIST);\n        }else{\n            String dsToken=loginToken.getToken();\n            long life=loginToken.getTokenLifeTime();\n            String userName=loginToken.getUserName();\n            if(!token.equals(dsToken))\n                response.setResult(ResponseCode.ERROR_TOKEN);else{\n                if(life>=System.currentTimeMillis()){\n                    response.setResult(ResponseCode.SUCCESS);response.setToken(userName);    }else{\n                    response.setResult(ResponseCode.ERROR_TOKENDISABLE);\n                }\n            }\n        }\n        return response;\n    }"}
{"author": "applewjg", "file": "RecoverBinarySearchTree.2.java", "original_string": "public void recoverTree_2(TreeNode root) {\n        if (root == null) return;\n        TreeNode[] res = new TreeNode[3];recoverRe2(root, res);\n        int tmp = res[1].val;\n        res[1].val = res[2].val;\n        res[2].val = tmp;\n    }"}
{"author": "mthli", "file": "ExceptTest.9.java", "original_string": "public void actionPerformed(ActionEvent event)\n            {\n               try\n               {\n                  System.out.println(new Scanner(Paths.get(\"woozle.txt\")).next());\n               }\n               catch (IOException e)\n               {\n                  textField.setText(e.toString());\n               }\n            }"}
{"author": "weather", "file": "FilePathUtil.5.java", "original_string": "private static byte[] getMD5(byte[] data) {\n        byte[] hash = null;\n        try {\n            MessageDigest digest = MessageDigest.getInstance(HASH_ALGORITHM);\n            digest.update(data);\n            hash = digest.digest();\n        } catch (NoSuchAlgorithmException e) {\n        }\n        return hash;\n    }"}
{"author": "chao420456", "file": "DeleteFolderDemo.1.java", "original_string": "public static void deleteFolder(File srcFolder) {\n        File[] fileArray = srcFolder.listFiles();\n        if (fileArray != null) {\n            for (File file : fileArray) {\n                if (file.isDirectory()) {\n                    deleteFolder(file);\n                } else {\n                    System.out.println(file.getName() + \"---\" + file.delete());\n                }\n            }\n            System.out\n                    .println(srcFolder.getName() + \"---\" + srcFolder.delete());\n        }\n    }"}
{"author": "seadroid", "file": "DefaultAppLock.4.java", "original_string": "@Override\n    public void onActivityResumed(Activity activity) {\n        Log.d(DEBUG_TAG, \"onActivityResumed\");\n        if (activity.getClass() == UnlockGesturePasswordActivity.class)\n            return;\n        if (settingsMgr.isGestureLockRequired()) {\n            mCheckedActivities.put(activity, System.currentTimeMillis());\n            Intent i = new Intent(activity, UnlockGesturePasswordActivity.class);\n            activity.startActivity(i);\n        }\n    }"}
{"author": "quyi", "file": "TSOperate.549.java", "original_string": "private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }"}
{"author": "quyi", "file": "TSOperate.514.java", "original_string": "@Override\n      public void read(org.apache.thrift.protocol.TProtocol prot, updateAppStatus_args struct) throws org.apache.thrift.TException {\n        TTupleProtocol iprot = (TTupleProtocol) prot;\n        struct.missionId = iprot.readString();\n        struct.setMissionIdIsSet(true);\n        struct.userAppId = iprot.readString();\n        struct.setUserAppIdIsSet(true);\n        struct.status = com.nercis.isscp.idl.AppStatus.findByValue(iprot.readI32());\n        struct.setStatusIsSet(true);\n        BitSet incoming = iprot.readBitSet(4);\n        if (incoming.get(0)) {\n          {\n            org.apache.thrift.protocol.TList _list35 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, iprot.readI32());\n            struct.usedPermissions = new ArrayList<Map<String,com.nercis.isscp.idl.APICheck>>(_list35.size);\n            for (int _i36 = 0; _i36 < _list35.size; ++_i36)\n            {\n              Map<String,com.nercis.isscp.idl.APICheck> _elem37;\n              {\n                org.apache.thrift.protocol.TMap _map38 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());\n                _elem37 = new HashMap<String,com.nercis.isscp.idl.APICheck>(2*_map38.size);\n                for (int _i39 = 0; _i39 < _map38.size; ++_i39)\n                {\n                  String _key40;\n                  com.nercis.isscp.idl.APICheck _val41;\n                  _key40 = iprot.readString();\n                  _val41 = new com.nercis.isscp.idl.APICheck();\n                  _val41.read(iprot);\n                  _elem37.put(_key40, _val41);\n                }\n              }\n              struct.usedPermissions.add(_elem37);\n            }\n          }\n          struct.setUsedPermissionsIsSet(true);\n        }\n        if (incoming.get(1)) {\n          struct.stcRD = new com.nercis.isscp.idl.StaticCheckResultData();\n          struct.stcRD.read(iprot);\n          struct.setStcRDIsSet(true);\n        }\n        if (incoming.get(2)) {\n          struct.dycRD = new com.nercis.isscp.idl.DynamicCheckResultData();\n          struct.dycRD.read(iprot);\n          struct.setDycRDIsSet(true);\n        }\n        if (incoming.get(3)) {\n          struct.virRD = new com.nercis.isscp.idl.virus.VirusDetectionResultData();\n          struct.virRD.read(iprot);\n          struct.setVirRDIsSet(true);\n        }\n      }"}
{"author": "applewjg", "file": "LongestSubstringWithoutRepeatingCharacters.1.java", "original_string": "public int lengthOfLongestSubstring_2(String s) {\n        int[] hash = new int[256];\n        Arrays.fill(hash, -1);\n        int n = s.length();\n        if (n <= 1) return n;\n        hash[s.charAt(0)] = 0;\n        int start = 0, res = 1, cur = 0;\n        while (++cur < n) {\n            if (hash[s.charAt(cur)] >= start) {\n                start = hash[s.charAt(cur)] + 1;\n            }\n            res = Math.max(res, cur - start + 1);\n            hash[s.charAt(cur)] = cur;\n        }\n        return res;\n    }"}
{"author": "applewjg", "file": "MinimumPathSum.0.java", "original_string": "public int minPathSum(int[][] grid) {\n        if (grid.length == 0) return Integer.MIN_VALUE;\n        int M = grid.length, N = grid[0].length;\n        int[] dp = new int[N];\n        dp[0] = grid[0][0];\n        for (int i = 1; i < N; ++i)\n            dp[i] = grid[0][i] + dp[i-1];\n        for (int i = 1; i < M; ++i)\n        {\n            dp[0] += grid[i][0];\n            for (int j = 1; j < N; ++j)\n                dp[j] = Math.min(dp[j-1], dp[j]) + grid[i][j];\n        }\n        return dp[N-1];  \n    }"}
{"author": "pacman", "file": "TaskDAOImpl.2.java", "original_string": "@Override\n    public void save(TaskModel task) {\n        if (saveAction == null)\n            saveAction = new TaskSaveAction(getDataSource());\n        saveAction.update(\n                task.getCid(),\n                task.getLid(),\n                task.getGuid(),\n                task.getType(),\n                task.getFile(),\n                DateHelper.getCurrentTime(),\n                task.getEnd(),\n                task.getStatus(),\n                task.getErr(),\n                task.getTid());\n    }"}
{"author": "java_project_jar", "file": "ProxyWriter.7.java", "original_string": "public void write(String str, int st, int len)\n        throws IOException\n    {\n        try\n        {\n            beforeWrite(len);\n            out.write(str, st, len);\n            afterWrite(len);\n        }\n        catch(IOException e)\n        {\n            handleIOException(e);\n        }\n    }"}
{"author": "quyi", "file": "ConfigModifyService.375.java", "original_string": "@Override\n      public void read(org.apache.thrift.protocol.TProtocol prot, modifyEngineConfig_result struct) throws org.apache.thrift.TException {\n        TTupleProtocol iprot = (TTupleProtocol) prot;\n        BitSet incoming = iprot.readBitSet(3);\n        if (incoming.get(0)) {\n          struct.success = com.nercis.isscp.idl.Result.findByValue(iprot.readI32());\n          struct.setSuccessIsSet(true);\n        }\n        if (incoming.get(1)) {\n          struct.ire = new com.nercis.isscp.idl.InvalidRequestException();\n          struct.ire.read(iprot);\n          struct.setIreIsSet(true);\n        }\n        if (incoming.get(2)) {\n          struct.ue = new com.nercis.isscp.idl.UnavailableException();\n          struct.ue.read(iprot);\n          struct.setUeIsSet(true);\n        }\n      }"}
{"author": "quyi", "file": "NodeInfo.27.java", "original_string": "@Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"NodeInfo(\");\n    boolean first = true;\n    sb.append(\"hardware:\");\n    if (this.hardware == null) {\n      sb.append(\"null\");\n    } else {\n      sb.append(this.hardware);\n    }\n    first = false;\n    if (!first) sb.append(\", \");\n    sb.append(\"software:\");\n    if (this.software == null) {\n      sb.append(\"null\");\n    } else {\n      sb.append(this.software);\n    }\n    first = false;\n    sb.append(\")\");\n    return sb.toString();\n  }"}
{"author": "newweb", "file": "CustomerServiceImp.1.java", "original_string": "@Override\n    public Customer[] queryCustomerByName(String name) {\n        List<Customer> list = customerDao.selectCustomerByName(name);\n        Customer[] cs = new Customer[list.size()];\n        int count = 0;\n        for (Customer customer : list) {\n            cs[count++] = customer;\n        }\n        return cs;\n    }"}
{"author": "waimai", "file": "AdminController.6.java", "original_string": "@RequestMapping(\"/addView\")\n    public ModelAndView addView() {\n        ModelAndView modelAndView = new ModelAndView(\"management/admin/add\");\n        modelAndView.addObject(\"gender\", Gender.values());\n        return modelAndView;\n    }"}
{"author": "quyi", "file": "UnavailableException.30.java", "original_string": "@Override\n    public void write(org.apache.thrift.protocol.TProtocol prot, UnavailableException struct) throws org.apache.thrift.TException {\n      TTupleProtocol oprot = (TTupleProtocol) prot;\n      oprot.writeString(struct.why);\n    }"}
{"author": "quyi", "file": "TSOperate.275.java", "original_string": "public Object getFieldValue(_Fields field) {\n      switch (field) {\n      case SUCCESS:\n        return getSuccess();\n      case IRE:\n        return getIre();\n      case UE:\n        return getUe();\n      }\n      throw new IllegalStateException();\n    }"}
{"author": "quyi", "file": "TSOperate.497.java", "original_string": "public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n      switch (field) {\n      case MISSION_ID:\n        return isSetMissionId();\n      case USER_APP_ID:\n        return isSetUserAppId();\n      case STATUS:\n        return isSetStatus();\n      case USED_PERMISSIONS:\n        return isSetUsedPermissions();\n      case STC_RD:\n        return isSetStcRD();\n      case DYC_RD:\n        return isSetDycRD();\n      case VIR_RD:\n        return isSetVirRD();\n      }\n      throw new IllegalStateException();\n    }"}
{"author": "0opslab", "file": "RandomUtil.8.java", "original_string": "public final static String toFixdLengthString(int num, int fixdlenth) {\n        StringBuffer sb     = new StringBuffer();\n        String       strNum = String.valueOf(num);\n        if (fixdlenth - strNum.length() >= 0) {\n            sb.append(ZeroString(fixdlenth - strNum.length()));\n        } else {\n            throw new RuntimeException(\"\u5c06\u6570\u5b57\" + num + \"\u8f6c\u5316\u4e3a\u957f\u5ea6\u4e3a\" + fixdlenth + \"\u7684\u5b57\u7b26\u4e32\u53d1\u751f\u5f02\u5e38\uff01\");\n        }\n        sb.append(strNum);\n        return sb.toString();\n    }"}
{"author": "java_project_jar", "file": "NullInputStream.2.java", "original_string": "public int available()\n    {\n        long avail = size - position;\n        if(avail <= 0L)\n            return 0;\n        if(avail > 0x7fffffffL)\n            return 0x7fffffff;\n        else\n            return (int)avail;\n    }"}
{"author": "vlc_android_macbuild", "file": "CpuInfo.6.java", "original_string": "public String getCpuPartText() {\n        String cpuPartText = sCpuPartMap.get(mCpuPart);\n        if (TextUtils.isEmpty(cpuPartText)) {\n            return String.format(\"Unknown:0x%x\", mCpuPart);\n        }\n        return cpuPartText;\n    }"}
{"author": "andengineexamples", "file": "SubMenuExample.2.java", "original_string": "@Override\n    public boolean onMenuItemClicked(final MenuScene pMenuScene, final IMenuItem pMenuItem, final float pMenuItemLocalX, final float pMenuItemLocalY) {\n        switch(pMenuItem.getID()) {\n            case MENU_RESET:\n                this.mMainScene.reset();\n                this.mMenuScene.back();\n                return true;\n            case MENU_QUIT:\n                pMenuScene.setChildSceneModal(this.mSubMenuScene);\n                return true;\n            case MENU_QUIT_BACK:\n                this.mSubMenuScene.back();\n                return true;\n            case MENU_QUIT_OK:\n                this.finish();\n                return true;\n            default:\n                return false;\n        }\n    }"}
{"author": "mthli", "file": "ClassLoaderTest.3.java", "original_string": "public void runClass(String name, String key)\n   {\n      try\n      {\n         ClassLoader loader = new CryptoClassLoader(Integer.parseInt(key));\n         Class<?> c = loader.loadClass(name);\n         Method m = c.getMethod(\"main\", String[].class);\n         m.invoke(null, (Object) new String[] {});\n      }\n      catch (Throwable e)\n      {\n         JOptionPane.showMessageDialog(this, e);\n      }\n   }"}
{"author": "Viscent", "file": "WorkStealingChannel.1.java", "original_string": "@Override\n    public void put(T product) throws InterruptedException {\n        int targetIndex = (product.hashCode() % managedQueues.length);\n        BlockingQueue<T> targetQueue = managedQueues[targetIndex];\n        targetQueue.put(product);\n    }"}
{"author": "weijuhui", "file": "ActivityType.3.java", "original_string": "@Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        if(data != null){\n            Intent i = new Intent(ActivityType.this, BuildActActivity.class);\n             i.putExtra(\"type\",data.getStringExtra(\"value\"));\n             startActivity(i);\n        }\n    }"}
{"author": "quyi", "file": "ConfigModifyService.279.java", "original_string": "public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n      switch (field) {\n      case SUCCESS:\n        return isSetSuccess();\n      case IRE:\n        return isSetIre();\n      case UE:\n        return isSetUe();\n      }\n      throw new IllegalStateException();\n    }"}
{"author": "quyi", "file": "APICheck.89.java", "original_string": "private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n    try {\n      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n    } catch (org.apache.thrift.TException te) {\n      throw new java.io.IOException(te);\n    }\n  }"}
{"author": "java_project_jar", "file": "ProxyReader.0.java", "original_string": "public int read()\n        throws IOException\n    {\n        int c;\n        beforeRead(1);\n        c = in.read();\n        afterRead(c == -1 ? -1 : 1);\n        return c;\n        IOException e;\n        e;\n        handleIOException(e);\n        return -1;\n    }"}
{"author": "mark_watson", "file": "Test_Hopfield.1.java", "original_string": "private static void helper(Hopfield test, String s, float[] test_data) {\n        float[] dd = new float[13];\n        for (int i = 0; i < 13; i++) {\n          dd[i] = test_data[i];\n        }\n        int NUM_BITS_TO_FLIP = 1;\n        for (int i_scramble=0; i_scramble<NUM_BITS_TO_FLIP; i_scramble++) {\n          int index = (int) (12.0f * (float) Math.random());\n          dd[index] = -dd[index];\n          }\n        float[] rr = test.recall(dd, 15);\n        System.out.print(s+\"\\nOriginal data:      \");\n        for (int i = 0; i < 13; i++) System.out.print(pp(test_data[i]) + \" \");\n        System.out.print(\"\\nRandomized data:    \");\n        for (int i = 0; i < 13; i++) System.out.print(pp(dd[i]) + \" \");\n        System.out.print(\"\\nRecognized pattern: \");\n        for (int i = 0; i < 13; i++) System.out.print(pp(rr[i]) + \" \");\n        System.out.println();\n    }"}
{"author": "quyi", "file": "TestClientForNercis.2.java", "original_string": "@Test\n    public void issuedMessageTest002() throws Exception {\n        ConnectionFactory connectionFactory;\n        Connection connection = null;\n        Session session;\n        Destination destination;\n        MessageProducer producer;\n        connectionFactory = new ActiveMQConnectionFactory(ActiveMQConnection.DEFAULT_USER, ActiveMQConnection.DEFAULT_PASSWORD, queue_url);\n        connection = connectionFactory.createConnection();\n        connection.start();\n        session = connection.createSession(Boolean.TRUE, Session.AUTO_ACKNOWLEDGE);\n        destination = session.createQueue(queue_name);\n        producer = session.createProducer(destination);\n        producer.setDeliveryMode(DeliveryMode.PERSISTENT);\n        ObjectMessage message = session.createObjectMessage();\n        AppSendMessage appSendMessage = new AppSendMessage();\n        appSendMessage.setMissionId(\"issuedMessageTest002\");\n        appSendMessage.setJobPriority(JobPriority.MEDIUM);\n        List<PlotsType> plots = new ArrayList<PlotsType>();\n        plots.add(PlotsType.staticType);\n        appSendMessage.setPlots(plots);\n        appSendMessage.setRules(null);\n        appSendMessage.setTaskInfo(null);\n        UserApp userApp = new UserApp();\n        userApp.setUserAppId(\"issuedMessageTest002\");\n        userApp.setAppName(\"test.apk\");\n        userApp.setCategory(\"123\");\n        userApp.setStoreName(\"1234\");\n        userApp.setCreateTime(\"123\");\n        userApp.setAppFileMd5(\"1b6066c5a107ebdbf1e5c9e4b31891bc\");\n        userApp.setVersion(\"1.0\");\n        userApp.setUpdateTime(\"2013-12-12 12:12:12\");userApp.setSource(\"123\");\n        userApp.setDescription(\"hello\");\n        userApp.setAppFilePath(\"test\");\n        List<UserApp> userApps = new ArrayList<UserApp>();\n        userApps.add(userApp);\n        appSendMessage.setUserApps(userApps);\n        message.setObject(appSendMessage);\n        System.out.println(\"\u53d1\u9001\u6d88\u606f\uff1a\" + \"ActiveMq \u53d1\u9001\u7684\u6d88\u606f\" + appSendMessage.toString());\n        producer.send(message);\n        session.commit();\n        connection.close();\n    }"}
{"author": "chacha", "file": "TokenRequest.3.java", "original_string": "@Override\n    public void fromJson(String json) throws JsonMappingException,\n            JsonGenerationException, IOException {\n        TokenRequest tr=(TokenRequest)JsonPojoMapper.fromJson(json, TokenRequest.class);\n        this.setOpt(tr.getOpt());\n        this.setBody(tr.getBody());\n    }"}
{"author": "quyi", "file": "SystemResources.55.java", "original_string": "@Override\n    public void write(org.apache.thrift.protocol.TProtocol prot, SystemResources struct) throws org.apache.thrift.TException {\n      TTupleProtocol oprot = (TTupleProtocol) prot;\n      BitSet optionals = new BitSet();\n      if (struct.isSetProcessName()) {\n        optionals.set(0);\n      }\n      if (struct.isSetThreadName()) {\n        optionals.set(1);\n      }\n      if (struct.isSetCheckTime()) {\n        optionals.set(2);\n      }\n      if (struct.isSetCpu()) {\n        optionals.set(3);\n      }\n      if (struct.isSetRss()) {\n        optionals.set(4);\n      }\n      if (struct.isSetVss()) {\n        optionals.set(5);\n      }\n      oprot.writeBitSet(optionals, 6);\n      if (struct.isSetProcessName()) {\n        oprot.writeString(struct.processName);\n      }\n      if (struct.isSetThreadName()) {\n        oprot.writeString(struct.threadName);\n      }\n      if (struct.isSetCheckTime()) {\n        oprot.writeString(struct.checkTime);\n      }\n      if (struct.isSetCpu()) {\n        oprot.writeI32(struct.cpu);\n      }\n      if (struct.isSetRss()) {\n        oprot.writeI32(struct.rss);\n      }\n      if (struct.isSetVss()) {\n        oprot.writeI32(struct.vss);\n      }\n    }"}
{"author": "quyi", "file": "APICheck.95.java", "original_string": "@Override\n    public void write(org.apache.thrift.protocol.TProtocol prot, APICheck struct) throws org.apache.thrift.TException {\n      TTupleProtocol oprot = (TTupleProtocol) prot;\n      BitSet optionals = new BitSet();\n      if (struct.isSetApiName()) {\n        optionals.set(0);\n      }\n      if (struct.isSetApiPackageName()) {\n        optionals.set(1);\n      }\n      if (struct.isSetPackageName()) {\n        optionals.set(2);\n      }\n      if (struct.isSetObjectName()) {\n        optionals.set(3);\n      }\n      if (struct.isSetMethodName()) {\n        optionals.set(4);\n      }\n      if (struct.isSetStatement()) {\n        optionals.set(5);\n      }\n      if (struct.isSetRiskType()) {\n        optionals.set(6);\n      }\n      if (struct.isSetRiskLevel()) {\n        optionals.set(7);\n      }\n      if (struct.isSetRuleNo()) {\n        optionals.set(8);\n      }\n      if (struct.isSetCategory()) {\n        optionals.set(9);\n      }\n      if (struct.isSetDescription()) {\n        optionals.set(10);\n      }\n      if (struct.isSetLineNum()) {\n        optionals.set(11);\n      }\n      if (struct.isSetColumnNum()) {\n        optionals.set(12);\n      }\n      if (struct.isSetRiskDescription()) {\n        optionals.set(13);\n      }\n      oprot.writeBitSet(optionals, 14);\n      if (struct.isSetApiName()) {\n        oprot.writeString(struct.apiName);\n      }\n      if (struct.isSetApiPackageName()) {\n        oprot.writeString(struct.apiPackageName);\n      }\n      if (struct.isSetPackageName()) {\n        oprot.writeString(struct.packageName);\n      }\n      if (struct.isSetObjectName()) {\n        oprot.writeString(struct.objectName);\n      }\n      if (struct.isSetMethodName()) {\n        oprot.writeString(struct.methodName);\n      }\n      if (struct.isSetStatement()) {\n        oprot.writeString(struct.statement);\n      }\n      if (struct.isSetRiskType()) {\n        oprot.writeString(struct.riskType);\n      }\n      if (struct.isSetRiskLevel()) {\n        oprot.writeString(struct.riskLevel);\n      }\n      if (struct.isSetRuleNo()) {\n        oprot.writeString(struct.ruleNo);\n      }\n      if (struct.isSetCategory()) {\n        oprot.writeString(struct.category);\n      }\n      if (struct.isSetDescription()) {\n        oprot.writeString(struct.description);\n      }\n      if (struct.isSetLineNum()) {\n        oprot.writeI32(struct.lineNum);\n      }\n      if (struct.isSetColumnNum()) {\n        oprot.writeI32(struct.columnNum);\n      }\n      if (struct.isSetRiskDescription()) {\n        oprot.writeString(struct.riskDescription);\n      }\n    }"}
{"author": "quyi", "file": "EngineOperate.362.java", "original_string": "public void write(org.apache.thrift.protocol.TProtocol oprot, searchApp_result struct) throws org.apache.thrift.TException {\n        struct.validate();\n        oprot.writeStructBegin(STRUCT_DESC);\n        if (struct.success != null) {\n          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);\n          struct.success.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        if (struct.ire != null) {\n          oprot.writeFieldBegin(IRE_FIELD_DESC);\n          struct.ire.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        if (struct.ue != null) {\n          oprot.writeFieldBegin(UE_FIELD_DESC);\n          struct.ue.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldStop();\n        oprot.writeStructEnd();\n      }"}
{"author": "chacha", "file": "LoginContextImpl.0.java", "original_string": "public AuthResponse loginPass(AuthRequest request) {\n        String userName=((String)request.getKey(AuthRequest.KEY_USERNAME)).trim();\n        Account account=accoutDAO.getAccountByName(userName);\n        if(account==null||account.getPasswd().equals(AuthRequest.KEY_PASSWD)){\n            response.setResult(ResponseCode.ERROR_USERPASS);\n        }else{\n            response.setResult(ResponseCode.SUCCESS);\n            if((Integer)request.getKey(AuthRequest.KEY_ACTION)==AuthRequest.NEEDTOKEN){\n                LoginToken token=new LoginToken(userName);\n                response.setToken(token.getToken());\n                loginTokenDAO.addToken(token);\n            }\n        }\n        return response;\n    }"}
{"author": "waimai", "file": "ComGoodsController.4.java", "original_string": "@RequestMapping(\"/down\")\n    public ModelAndView down(String[] ids) {\n        try {\n            goodsService.down(ids);\n        } catch (ServiceException e) {\n            return ajaxDoneError(e.getMessage());\n        }\n        return ajaxDoneSuccess(\"\u4e0b\u67b6\u6210\u529f\");\n    }"}
{"author": "Asrar_Ahmed_Makrani", "file": "video_master_info.0.java", "original_string": "public void focusLost(FocusEvent e)\n            {\n            try\n            {\n                Statement statement = connection.createStatement();\n                    String query1 = \"SELECT * FROM Item \" + \n                                \"WHERE item_id = '\" + \n                                Video_no_text.getText() +\"'\";\n                    ResultSet rs1 = statement.executeQuery(query1);\n                    try\n                    {\n                        rs1.next();\n                            Video_title_text.setText(rs1.getString(2));\n                            authorsArea.setText(rs1.getString(5));\n                            subjectArea.setText(rs1.getString(7));\n                            location_text.setText(rs1.getString(4));\n                            type_combo.setSelectedItem(rs1.getString(3));                               \n                    }\n                    catch (SQLException sqlex)\n                    {\n                    }\n                    String query = \"SELECT * FROM video_detail \" + \n                                \"WHERE item_id = '\" + \n                                Video_no_text.getText() +\"'\";\n                    ResultSet rs = statement.executeQuery(query);\n                    try\n                    {\n                        rs.next();\n                            type_combo.setSelectedItem(rs.getString(2));\n                            category_combo.setSelectedItem(rs.getString(3));\n                            int confirm = JOptionPane.showConfirmDialog(null, \"This record Exists, would you like to update it?\", \"CONFIRM\", JOptionPane.YES_NO_OPTION);\n                            if(confirm == JOptionPane.NO_OPTION)\n                            {\n                            Video_no_text.setEditable(false);\n                            Video_title_text.setEditable(false);\n                            authorsArea.setEditable(false);\n                            subjectArea.setEditable(false);\n                            location_text.setEditable(false);   \n                            }\n                            else\n                            { \n                            }\n                                statement.close(); \n                    }\n                    catch (SQLException sqlex)\n                    {\n                    }\n                }\n                catch (SQLException sqlex)\n                    {\n                    }\n                    }"}
{"author": "pacman", "file": "MediaEncrypt.1.java", "original_string": "public boolean decodeMedia(String src, String dest) {\n        System.out.println(System.getProperty(\"java.library.path\"));\n        if (gJNILoaded) {\n            return decode(src, dest) == 0;\n        }\n        return false;\n    }"}
{"author": "quyi", "file": "UserApp.54.java", "original_string": "public void addToRequestPurviews(com.nercis.isscp.idl.permission.Permissions elem) {\n    if (this.requestPurviews == null) {\n      this.requestPurviews = new ArrayList<com.nercis.isscp.idl.permission.Permissions>();\n    }\n    this.requestPurviews.add(elem);\n  }"}
{"author": "Asrar_Ahmed_Makrani", "file": "General_frame.2.java", "original_string": "public void actionPerformed(ActionEvent e) {\n                String a = patron_text.getText();\n                String b = name_text.getText();\n                String c = passport_text.getText();\n                String d = expiry_date_text.getText();\n                String g = reg_by_text.getText();\n                String  l = reg_date_text.getText();\n                String h = textArea.getText();\n                String i = tel_text.getText();\n                String j = fax_text.getText();\n                String k = email_text.getText();\n                patronSQL patsql = new patronSQL(a, b, c, d, g, l, h, i, j, k);\n                patsql.add();\n                patron_text.setText(\"P-\");\n            }"}
{"author": "wak_edil", "file": "RojakBuahInfo.0.java", "original_string": "public void actionPerformed(ActionEvent e)\n    {\n        if(e.getSource() ==jbtBack)\n        {\n            Desert frame = new Desert();\n            frame.setTitle(\"Desert\");\n            frame.setSize(550,400);\n            frame.setVisible(true);\n            frame.setLocationRelativeTo(null);\n            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n            this.dispose();\n        }\n    }"}
{"author": "lemire", "file": "IteratorUtil32.6.java", "original_string": "public static int cardinality(final IteratingRLW32 i) {\n        int answer = 0;\n        while (true) {\n            if (i.getRunningBit())\n                answer += i.getRunningLength()\n                        * EWAHCompressedBitmap32.WORD_IN_BITS;\n            int il = i.getNumberOfLiteralWords();\n            for (int k = 0; k < il; ++k)\n                answer += Integer.bitCount(i.getLiteralWordAt(k));\n            if (!i.next())\n                break;\n        }\n        return answer;\n    }"}
{"author": "lemire", "file": "UpdateableBitmapFunction.7.java", "original_string": "public final void resize(final int newsize) {\n        this.rw = java.util.Arrays.copyOf(this.rw, newsize);\n        this.litwlist.resize(newsize);\n        this.b = java.util.Arrays.copyOf(this.b, newsize);\n    }"}
{"author": "pacman", "file": "MediaEncrytTest.3.java", "original_string": "@Test\n    public void testDecode() {\n        MediaEncrypt encrypt = new MediaEncrypt();\n        encrypt.decodeMedia(\"e:/1.data\", \"e:/11.zip\");\n        assertTrue(FileHelper.exists(\"e:/11.zip\"));\n    }"}
{"author": "quyi", "file": "TSOperate.700.java", "original_string": "@Override\n    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof updateUserAppStatus_args)\n        return this.equals((updateUserAppStatus_args)that);\n      return false;\n    }"}
{"author": "andengineexamples", "file": "CanvasTextureCompositingExample.2.java", "original_string": "@Override\n            protected void onDecorateBitmap(Canvas pCanvas) throws Exception {\n                this.mPaint.setColorFilter(new LightingColorFilter(Color.argb(128, 128, 128, 255), Color.TRANSPARENT));\n                final Bitmap balloon = BitmapFactory.decodeStream(CanvasTextureCompositingExample.this.getAssets().open(\"gfx/texturecompositing/balloon.png\"));\n                pCanvas.drawBitmap(balloon, 0, 0, this.mPaint);\n                this.mPaint.setColorFilter(null);\n                this.mPaint.setXfermode(new PorterDuffXfermode(Mode.SRC_ATOP));\n                final Bitmap alphamask = BitmapFactory.decodeStream(CanvasTextureCompositingExample.this.getAssets().open(\"gfx/texturecompositing/alphamask.png\"));\n                pCanvas.drawBitmap(alphamask, 0, 0, this.mPaint);\n                this.mPaint.setXfermode(null);\n                final Bitmap zynga = BitmapFactory.decodeStream(CanvasTextureCompositingExample.this.getAssets().open(\"gfx/texturecompositing/zynga.png\"));\n                this.mPaint.setColorFilter(new LightingColorFilter(Color.RED, Color.TRANSPARENT));\n                pCanvas.drawBitmap(zynga, 0, 0, this.mPaint);\n            }"}
{"author": "mthli", "file": "TreeViewer.8.java", "original_string": "protected void done()\n            {\n               try\n               {\n                  Document doc = get();\n                  JTree tree = new JTree(new DOMTreeModel(doc));\n                  tree.setCellRenderer(new DOMTreeCellRenderer());\n                  setContentPane(new JScrollPane(tree));\n                  validate();\n               }\n               catch (Exception e)\n               {\n                  JOptionPane.showMessageDialog(DOMTreeFrame.this, e);\n               }\n            }"}
{"author": "seadroid", "file": "AppChoiceDialog.8.java", "original_string": "@Override\n        public View getView(int position, View convertView, ViewGroup parent) {\n            View view = convertView;\n            Viewholder viewHolder;\n            if (convertView == null) {\n                view = LayoutInflater.from(getActivity()).inflate(R.layout.app_list_item, null);\n                ImageView icon = (ImageView)view.findViewById(R.id.app_icon);\n                TextView desc = (TextView)view.findViewById(R.id.app_desc);\n                viewHolder = new Viewholder(icon, desc);\n                view.setTag(viewHolder);\n            } else {\n                viewHolder = (Viewholder)convertView.getTag();\n            }\n            if (position < customActions.size()) {\n                setCustomAction(viewHolder, customActions.get(position));\n            } else {\n                setAppInfo(viewHolder, mAppInfos.get(position - customActions.size()));\n            }\n            return view;\n        }"}
{"author": "quyi", "file": "TSOperate.179.java", "original_string": "public void setFieldValue(_Fields field, Object value) {\n      switch (field) {\n      case SUCCESS:\n        if (value == null) {\n          unsetSuccess();\n        } else {\n          setSuccess((String)value);\n        }\n        break;\n      case IRE:\n        if (value == null) {\n          unsetIre();\n        } else {\n          setIre((com.nercis.isscp.idl.InvalidRequestException)value);\n        }\n        break;\n      case UE:\n        if (value == null) {\n          unsetUe();\n        } else {\n          setUe((com.nercis.isscp.idl.UnavailableException)value);\n        }\n        break;\n      }\n    }"}
{"author": "lemire", "file": "IteratorAggregation32Test.4.java", "original_string": "@Test\n    public void testAnd() {\n        for (int N = 1; N < 10; ++N) {\n            System.out.println(\"testAnd N = \" + N);\n            Iterator<EWAHCompressedBitmap32[]> i = getCollections(\n                    N, 3);\n            while (i.hasNext()) {\n                EWAHCompressedBitmap32[] x = i.next();\n                EWAHCompressedBitmap32 tanswer = EWAHCompressedBitmap32\n                        .and(x);\n                EWAHCompressedBitmap32 x1 = IteratorUtil32\n                        .materialize(IteratorAggregation32\n                                .bufferedand(IteratorUtil32\n                                        .toIterators(x)));\n                x1.setSizeInBits(maxSizeInBits(x), false);\n                x1.setSizeInBitsWithinLastWord(maxSizeInBits(x));\n                assertTrue(x1.equals(tanswer));\n            }\n            System.gc();\n        }\n    }"}
{"author": "applewjg", "file": "PalindromeNumber.1.java", "original_string": "public boolean isPalindrome_1(int x) {\n        if (x < 0) return false;\n        int d = 1;\n        while (x / d >= 10) d *= 10;\n        while (d > 1) {\n            if (x % 10 != x / d) return false;\n            x = (x % d) / 10;\n            d /= 100;\n        }\n        return true;\n    }"}
{"author": "brianway", "file": "Run9_synchronized01.0.java", "original_string": "public static void main(String[] args) {\n        Service service = new Service();\n        MyObject object = new MyObject();\n        MyThread a = new MyThread(service, object);\n        a.setName(\"a\");\n        a.start();\n        MyThread b = new MyThread(service, object);\n        b.setName(\"b\");\n        b.start();\n    }"}
{"author": "chao420456", "file": "FileInputStreamDemo2.0.java", "original_string": "public static void main(String[] args) throws IOException {\n        FileInputStream fis = new FileInputStream(\"a.txt\");\n        byte[] bys = new byte[1024 * 1024]; int len = 0;\n        while ((len = fis.read(bys)) != -1) {\n            System.out.print(new String(bys, 0, len));\n        }\n        fis.close();\n    }"}
{"author": "bethrobson", "file": "DayOfTheWeekService.1.java", "original_string": "public void actionPerformed(ActionEvent ev) {\n           int monthNum = month.getSelectedIndex(); \n           int dayNum = Integer.parseInt(day.getText());\n           int yearNum = Integer.parseInt(year.getText());\n           Calendar c = Calendar.getInstance();\n           c.set(Calendar.MONTH, monthNum);\n           c.set(Calendar.DAY_OF_MONTH, dayNum);\n           c.set(Calendar.YEAR, yearNum);\n           Date date = c.getTime();\n           String dayOfWeek = (new SimpleDateFormat(\"EEEE\")).format(date);\n           outputLabel.setText(dayOfWeek);\n      }"}
{"author": "sample_server", "file": "ContextParamHolder.1.java", "original_string": "public static Integer getInt(String key)\n    {\n        String value = getString(key);\n        if (null == value)\n        {\n            return null;\n        }\n        else\n        {\n            return Integer.valueOf(getString(key));\n        }\n    }"}
{"author": "applewjg", "file": "FlattenBinaryTreetoLinkedList.1.java", "original_string": "public void flatten_1(TreeNode root) {\n        if (root == null) return;\n        flatten_1(root.left);\n        flatten_1(root.right);\n        if (root.left == null) return;\n        TreeNode node = root.left;\n        while (node.right != null) node = node.right;\n        node.right = root.right;\n        root.right = root.left;\n        root.left = null;\n    }"}
{"author": "Asrar_Ahmed_Makrani", "file": "book_master.4.java", "original_string": "public void actionPerformed(ActionEvent e) {\n                String a = book_no_text.getText();\n                String b =  book_title_text.getText();\n                String c =  isbn_text.getText();\n                String d =  class_text.getText();\n                String h =  publisher_text.getText();\n                String g =  year_text.getText();\n                String i = pages_text.getText();\n                String j = authorsArea.getText();\n                String k = subjectArea.getText();\n                String l = location_text.getText();\n                bookSQL booksql = new bookSQL(a, b, c, d, h, g, i, j, k, l);\n                booksql.delete();\n                delete.setEnabled(false);\n                update.setEnabled(false);\n            }"}
{"author": "chacha", "file": "LoginTokenDAO.3.java", "original_string": "public LoginToken getTokenByToken(String token) {\n        DBCollection coll = connection.getCollection(COLLECTION_NAME);\n        DBObject obj = queryTokenByToken(token);\n        DBObject object = coll.findOne(obj);\n        if (object != null) {\n            LoginToken loginToken = new LoginToken();\n            loginToken.fromDbObject(object);\n            return loginToken;\n        } else\n            return null;\n    }"}
{"author": "seadroid", "file": "ShareToSeafileActivity.1.java", "original_string": "private String getSharedFilePath(Uri uri) {\n        if (uri == null) {\n            return null;\n        }\n        if (uri.getScheme().equals(\"file\")) {\n            return uri.getPath();\n        } else {\n            ContentResolver contentResolver = getContentResolver();\n            Cursor cursor = contentResolver.query(uri, null, null, null, null);\n            if (cursor == null || !cursor.moveToFirst()) {\n                return null;\n            }\n            String filePath = cursor.getString(cursor.getColumnIndex(Images.Media.DATA));\n            return filePath;\n        }\n    }"}
{"author": "golangpkg", "file": "FileProgressStatus.4.java", "original_string": "@Override\n    public String toString() {\n        String s = \"\";\n        s+= \"Uploaded \"+bytesUploaded;\n        s+= \"/\"+totalFileSize+\" Bytes\";\n        s+= \"(\"+progress+\"%)\";\n        if (uploadRate != null) {\n            s+=  \"at rate: \"+UnitConverter.getFormattedSize(uploadRate) +\"/s.\";\n        }\n        if (estimatedRemainingTimeInSeconds != null) {\n            s+= \" Finishing in \"+UnitConverter.getFormattedTime(estimatedRemainingTimeInSeconds)+\".\";\n        }\n        return s;\n    }"}
{"author": "waimai", "file": "CompressImage.10.java", "original_string": "public boolean compressPic(String input, String output, int width, int height, boolean gp) {\n        this.input = input;\n        this.output = output;\n        setWidthAndHeight(width, height);\n        this.proportion = gp;\n        return compressPic();\n    }"}
{"author": "0opslab", "file": "CaptchaUtil.5.java", "original_string": "private static float getAlpha(int i,int j,int len) {\n        int num = i+j;\n        float r = (float)1/len,s = (len+1) * r;\n        return num > len ? (num *r - s) : num * r;\n    }"}
{"author": "quyi", "file": "EngineOperate.502.java", "original_string": "@Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder(\"searchAllEng_result(\");\n      boolean first = true;\n      sb.append(\"success:\");\n      if (this.success == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.success);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"ire:\");\n      if (this.ire == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.ire);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"ue:\");\n      if (this.ue == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.ue);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }"}
{"author": "quyi", "file": "TSOperate.395.java", "original_string": "@Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder(\"queryMission_args(\");\n      boolean first = true;\n      sb.append(\"missionId:\");\n      if (this.missionId == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.missionId);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }"}
{"author": "chweixin", "file": "WeChatAccountAction.1.java", "original_string": "public void all() throws IOException{\n        List<TreeNode> nodes = new ArrayList<>();\n        if(this.service instanceof IWeChatAccountService){\n            List<WeChatAccountInfo> list = ((IWeChatAccountService)this.service).loadAllAccounts();\n            if(list != null && list.size() > 0){\n                for(WeChatAccountInfo info: list){\n                    if(info == null) continue;\n                    TreeNode tn = new TreeNode();\n                    tn.setId(info.getId());\n                    tn.setText(info.getName());\n                    nodes.add(tn);\n                }\n            }\n        }\n        this.writeJson(nodes);\n    }"}
{"author": "0opslab", "file": "CharsetUtil.7.java", "original_string": "public final static String changeCharset(String str, String newCharset) throws UnsupportedEncodingException {\n        if (str != null) {\n            byte[] bs = str.getBytes();\n            return new String(bs, newCharset);\n        }\n        return null;\n    }"}
{"author": "quyi", "file": "EngineOperate.467.java", "original_string": "public static _Fields findByThriftId(int fieldId) {\n        switch(fieldId) {\n          case 0: return SUCCESS;\n          case 1: return IRE;\n          case 2: return UE;\n          default:\n            return null;\n        }\n      }"}
{"author": "applewjg", "file": "LargestNumber.1.java", "original_string": "public int compare(Integer a,  Integer b) { \n                    String aa = \"\"+a+b;\n                    String bb = \"\"+b+a;\n                    return bb.compareTo(aa);\n            }"}
{"author": "lemire", "file": "ThresholdFuncBitmap32Test.0.java", "original_string": "@Test\n    public void basictest() {\n        System.out.println(\"Testing ThresholdFuncBitmap\");\n        EWAHCompressedBitmap32 ewah1 = EWAHCompressedBitmap32.bitmapOf(1,\n                53, 110, 1000, 1201, 50000);\n        EWAHCompressedBitmap32 ewah2 = EWAHCompressedBitmap32.bitmapOf(1,\n                100, 1000, 1100, 1200, 31416, 50001);\n        EWAHCompressedBitmap32 ewah3 = EWAHCompressedBitmap32.bitmapOf(1,\n                110, 1000, 1101, 1200, 1201, 31416, 31417);\n        Assert.assertTrue(EWAHCompressedBitmap32.threshold(1, ewah1)\n                .equals(ewah1));\n        Assert.assertTrue(EWAHCompressedBitmap32.threshold(1, ewah2)\n                .equals(ewah2));\n        Assert.assertTrue(EWAHCompressedBitmap32.threshold(1, ewah3)\n                .equals(ewah3));\n        Assert.assertTrue(EWAHCompressedBitmap32.threshold(2, ewah1,\n                ewah1).equals(ewah1));\n        Assert.assertTrue(EWAHCompressedBitmap32.threshold(2, ewah2,\n                ewah2).equals(ewah2));\n        Assert.assertTrue(EWAHCompressedBitmap32.threshold(2, ewah3,\n                ewah3).equals(ewah3));\n        EWAHCompressedBitmap32 zero = new EWAHCompressedBitmap32();\n        Assert.assertTrue(EWAHCompressedBitmap32.threshold(2, ewah1)\n                .equals(zero));\n        Assert.assertTrue(EWAHCompressedBitmap32.threshold(2, ewah2)\n                .equals(zero));\n        Assert.assertTrue(EWAHCompressedBitmap32.threshold(2, ewah3)\n                .equals(zero));\n        Assert.assertTrue(EWAHCompressedBitmap32.threshold(4, ewah1,\n                ewah2, ewah3).equals(zero));\n        EWAHCompressedBitmap32 ewahorth = EWAHCompressedBitmap32.threshold(\n                1, ewah1, ewah2, ewah3);\n        EWAHCompressedBitmap32 ewahtrueor = EWAHCompressedBitmap32.or(\n                ewah1, ewah2, ewah3);\n        Assert.assertTrue(ewahorth.equals(ewahtrueor));\n        EWAHCompressedBitmap32 ewahandth = EWAHCompressedBitmap32\n                .threshold(3, ewah1, ewah2, ewah3);\n        ewahandth.setSizeInBitsWithinLastWord(maxSizeInBits(ewah1, ewah2, ewah3));\n        EWAHCompressedBitmap32 ewahtrueand = EWAHCompressedBitmap32.and(\n                ewah1, ewah2, ewah3);\n        Assert.assertTrue(ewahandth.equals(ewahtrueand));\n        EWAHCompressedBitmap32 ewahmajth = EWAHCompressedBitmap32\n                .threshold(2, ewah1, ewah2, ewah3);\n        ewahmajth.setSizeInBitsWithinLastWord(maxSizeInBits(ewah1, ewah2, ewah3));\n        EWAHCompressedBitmap32 ewahtruemaj = EWAHCompressedBitmap32.or(\n                ewah1.and(ewah2), ewah1.and(ewah3), ewah2.and(ewah3));\n        Assert.assertTrue(ewahmajth.equals(ewahtruemaj));\n    }"}
{"author": "dlna_framework", "file": "NotifyRequest.6.java", "original_string": "public boolean setRequest(Subscriber sub, String varName, String value)\n    {\n        String callback = sub.getDeliveryURL();\n        String sid = sub.getSID();\n        long notifyCnt = sub.getNotifyCount();\n        String host = sub.getDeliveryHost();\n        String path = sub.getDeliveryPath();\n        int port = sub.getDeliveryPort();\n        setMethod(HTTP.NOTIFY);\n        setURI(path);\n        setHost(host, port);\n        setNT(NT.EVENT);\n        setNTS(NTS.PROPCHANGE);\n        setSID(sid);\n        setSEQ(notifyCnt);\n        setContentType(XML.CONTENT_TYPE);\n        Node propSetNode = createPropertySetNode(varName, value);\n        setContent(propSetNode);        \n        return true;            \n    }"}
{"author": "lemire", "file": "IntIteratorOverIteratingRLW32.0.java", "original_string": "private boolean moveToNext() {\n        while (!runningHasNext() && !literalHasNext()) {\n            if (this.parent.next())\n                setupForCurrentRunningLengthWord();\n            else\n                return false;\n        }\n        return true;\n    }"}
{"author": "vlc_android_macbuild", "file": "StrictModeHelper.1.java", "original_string": "@TargetApi(9)\n    public static void setStrictMode_DetectAll_PenaltyDeatch() {\n        if (BuildHelper.isApi9_GingerBreadOrLater()) {\n            StrictMode.setThreadPolicy(new ThreadPolicy.Builder().detectAll()\n                    .penaltyDeath().build());\n            StrictMode.setVmPolicy(new VmPolicy.Builder().detectAll()\n                    .penaltyDeath().build());\n        }\n    }"}
{"author": "mthli", "file": "OptionDialogFrame.0.java", "original_string": "public Object getMessage()\n   {\n      String s = messagePanel.getSelection();\n      if (s.equals(\"String\")) return messageString;\n      else if (s.equals(\"Icon\")) return messageIcon;\n      else if (s.equals(\"Component\")) return messageComponent;\n      else if (s.equals(\"Object[]\")) return new Object[] { messageString, messageIcon,\n            messageComponent, messageObject };\n      else if (s.equals(\"Other\")) return messageObject;\n      else return null;\n   }"}
{"author": "dlna_framework", "file": "HTTP.2.java", "original_string": "public static final int getPort(String urlStr)\n    {\n        try {\n            URL url = new URL(urlStr);\n            int port = url.getPort();\n            if (port <= 0)\n                port = DEFAULT_PORT;\n            return port;\n        }\n        catch (Exception e) {\n            return DEFAULT_PORT;\n        }\n    }"}
{"author": "weather", "file": "NetWorkUtils.3.java", "original_string": "public static boolean isWiFiUsed(Context context) {\n        NetworkInfo netInfo = getNetworInfoInstance(context);\n        boolean cIsNetWorkAvailable = isNetworkAvailable(netInfo);\n        return cIsNetWorkAvailable ? ConnectivityManager.TYPE_WIFI == netInfo.getType() : false;\n    }"}
{"author": "0opslab", "file": "AbstractCodepageDetector.1.java", "original_string": "public final Reader open(final URL url) throws IOException {\n        Reader ret = null;\n        Charset cs = this.detectCodepage(url);\n        if (cs != null) {\n            ret = new InputStreamReader(new BufferedInputStream(url.openStream()), cs);\n        }\n        return ret;\n    }"}
{"author": "mthli", "file": "ChartBean.0.java", "original_string": "public void paintComponent(Graphics g)\n   {\n      Graphics2D g2 = (Graphics2D) g;\n      if (values == null || values.length == 0) return;\n      double minValue = 0;\n      double maxValue = 0;\n      for (int i = 0; i < values.length; i++)\n      {\n         if (minValue > getValues(i)) minValue = getValues(i);\n         if (maxValue < getValues(i)) maxValue = getValues(i);\n      }\n      if (maxValue == minValue) return;\n      Rectangle2D bounds = getBounds();\n      double clientWidth = bounds.getWidth();\n      double clientHeight = bounds.getHeight();\n      double barWidth = (clientWidth - 2 * INSETS) / values.length;\n      g2.setPaint(inverse ? color : Color.white);\n      g2.fill(new Rectangle2D.Double(0, 0, clientWidth, clientHeight));\n      g2.setPaint(Color.black);\n      Font titleFont = new Font(\"SansSerif\", Font.BOLD, 20);\n      FontRenderContext context = g2.getFontRenderContext();\n      Rectangle2D titleBounds = titleFont.getStringBounds(title, context);\n      double titleWidth = titleBounds.getWidth();\n      double y = -titleBounds.getY();\n      double x = 0;\n      if (titlePosition == Position.CENTER) x += (clientWidth - titleWidth) / 2;\n      else if (titlePosition == Position.RIGHT) x += clientWidth - titleWidth;\n      g2.setFont(titleFont);\n      g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,\n            RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\n      g2.drawString(title, (float) x, (float) y);\n      double top = titleBounds.getHeight();\n      double scale = (clientHeight - top - 2 * INSETS) / (maxValue - minValue);\n      y = clientHeight;\n      for (int i = 0; i < values.length; i++)\n      {\n         double x1 = INSETS + i * barWidth + 1;\n         double y1 = INSETS + top;\n         double value = getValues(i);\n         double height = value * scale;\n         if (value >= 0) y1 += (maxValue - value) * scale;\n         else\n         {\n            y1 += (int) (maxValue * scale);\n            height = -height;\n         }\n         g2.setPaint(inverse ? Color.white : color);\n         Rectangle2D bar = new Rectangle2D.Double(x1, y1, barWidth - 2, height);\n         g2.fill(bar);\n         g2.setPaint(Color.black);\n         g2.draw(bar);\n      }\n   }"}
{"author": "quyi", "file": "EngineOperate.349.java", "original_string": "@Override\n    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof searchApp_result)\n        return this.equals((searchApp_result)that);\n      return false;\n    }"}
{"author": "quyi", "file": "ConfigModifyService.492.java", "original_string": "public void read(org.apache.thrift.protocol.TProtocol iprot, modifyNodeManagerConfig_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TField schemeField;\n        iprot.readStructBegin();\n        while (true)\n        {\n          schemeField = iprot.readFieldBegin();\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n            break;\n          }\n          switch (schemeField.id) {\n            case 1: if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.nodeId = iprot.readString();\n                struct.setNodeIdIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 2: if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.propertyName = iprot.readString();\n                struct.setPropertyNameIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 3: if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.propertyValue = iprot.readString();\n                struct.setPropertyValueIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            default:\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n          }\n          iprot.readFieldEnd();\n        }\n        iprot.readStructEnd();\n        struct.validate();\n      }"}
{"author": "quyi", "file": "Sample.40.java", "original_string": "@Override\n  public int compareTo(Sample other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n    int lastComparison = 0;\n    lastComparison = Boolean.valueOf(isSetMissionId()).compareTo(other.isSetMissionId());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetMissionId()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.missionId, other.missionId);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetUserAppId()).compareTo(other.isSetUserAppId());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetUserAppId()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userAppId, other.userAppId);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetPlotsStatus()).compareTo(other.isSetPlotsStatus());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetPlotsStatus()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.plotsStatus, other.plotsStatus);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetCheckStartTime()).compareTo(other.isSetCheckStartTime());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetCheckStartTime()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.checkStartTime, other.checkStartTime);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetCheckStopTime()).compareTo(other.isSetCheckStopTime());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetCheckStopTime()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.checkStopTime, other.checkStopTime);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }"}
{"author": "johnno1962", "file": "MouseMotionAdapterProxy.4.java", "original_string": "public int hashCode() {\n        if ( !entered_hashCode_4 ) {\n            entered_hashCode_4 = true;\n            int __return = __hashCode( );\n            entered_hashCode_4 = false;\n            return __return;\n        }\n        else\n            return super.hashCode( );\n    }"}
{"author": "quyi", "file": "ConfigModifyService.369.java", "original_string": "private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }"}
{"author": "jfpl", "file": "Chat2Activity.9.java", "original_string": "public void voiceBtnClick(View v) {\n        if (isInputType) {\n            voiceBtn.setImageDrawable(getResources().getDrawable(\n                    R.drawable.chatting_button));\n            pressRecordBtn.setVisibility(View.VISIBLE);\n            chatEt.setVisibility(View.GONE);\n            try {\n                ((InputMethodManager) getSystemService(INPUT_METHOD_SERVICE))\n                        .hideSoftInputFromWindow(chatEt.getWindowToken(),\n                                InputMethodManager.HIDE_NOT_ALWAYS);\n            } catch (Exception e) {\n                }\n        } else {\n            voiceBtn.setImageDrawable(getResources().getDrawable(\n                    R.drawable.voice_record_button));\n            pressRecordBtn.setVisibility(View.GONE);\n            chatEt.setVisibility(View.VISIBLE);\n        }\n        isInputType = !isInputType;\n        setAddPanelState(false);\n    }"}
{"author": "Asrar_Ahmed_Makrani", "file": "book_loan.1.java", "original_string": "public void actionPerformed(ActionEvent e) {\n                patron_no_text.setText(\"\");\n                patron_name_text.setText(\"\");\n                patron_group_type_text.setText(\"\");\n                patron_status_text.setText(\"\");\n                patron_loan_limit_text.setText(\"\");\n                patron_expiry_date_text.setText(\"\");\n                for (int z = 0; z<5; z++)\n                {\n                acc_no_text[z].setText(\"\");\n                book_title_text1[z].setText(\"\");\n                rent_date_text[z].setText(\"\");\n                due_date_text[z].setText(\"\");\n                }\n                patron_no_text.setEditable(true);\n                dump.setText(\"\");\n            }"}
{"author": "andengineexamples", "file": "EntityModifierExample.8.java", "original_string": "@Override\n                                public void run() {\n                                    Toast.makeText(EntityModifierExample.this, \"Loop: '\" + (pLoop + 1) + \"' of '\" + pLoopCount + \"' started.\", Toast.LENGTH_SHORT).show();\n                                }"}
{"author": "lemire", "file": "ChunkIteratorImpl.8.java", "original_string": "private boolean literalHasNext() {\n        while (this.word == 0 && this.wordMask == 0 && this.wordPosition < this.wordLength) {\n            this.word = this.buffer.getWord(this.wordPosition++);\n            this.wordMask = 1l;\n        }\n        return (this.word != 0 || this.wordMask != 0 || !hasNextRLW()) && this.position < this.sizeInBits;\n    }"}
{"author": "Viscent", "file": "AlarmSendingThread.1.java", "original_string": "public int sendAlarm(final AlarmInfo alarmInfo) {\n        AlarmType type = alarmInfo.type;\n        String id = alarmInfo.getId();\n        String extraInfo = alarmInfo.getExtraInfo();\n        if (terminationToken.isToShutdown()) {\n            System.err.println(\"rejected alarm:\" + id + \",\" + extraInfo);\n            return -1;\n        }\n        int duplicateSubmissionCount = 0;\n        try {\n            AtomicInteger prevSubmittedCounter;\n            prevSubmittedCounter = submittedAlarmRegistry.putIfAbsent(type.toString()\n                + ':' + id + '@' + extraInfo, new AtomicInteger(0));\n            if (null == prevSubmittedCounter) {\n                terminationToken.reservations.incrementAndGet();\n                alarmQueue.put(alarmInfo);\n            } else {\n                duplicateSubmissionCount = prevSubmittedCounter.incrementAndGet();\n            }\n        } catch (Throwable t) {\n            t.printStackTrace();\n        }\n        return duplicateSubmissionCount;\n    }"}
{"author": "chao420456", "file": "CopyTxtDemo.5.java", "original_string": "private static void method1(String srcString, String destString)\n            throws IOException {\n        FileReader fr = new FileReader(srcString);\n        FileWriter fw = new FileWriter(destString);\n        int ch = 0;\n        while ((ch = fr.read()) != -1) {\n            fw.write(ch);\n        }\n        fw.close();\n        fr.close();\n    }"}
{"author": "quyi", "file": "EngineOperate.31.java", "original_string": "public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {\n        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage(\"searchApp\", org.apache.thrift.protocol.TMessageType.CALL, 0));\n        searchApp_args args = new searchApp_args();\n        args.setMissionId(missionId);\n        args.setUserAppId(userAppId);\n        args.write(prot);\n        prot.writeMessageEnd();\n      }"}
{"author": "mthli", "file": "PrintServiceTest.0.java", "original_string": "public static void main(String[] args)\n   {\n      DocFlavor flavor = DocFlavor.URL.GIF;\n      PrintService[] services = PrintServiceLookup.lookupPrintServices(flavor, null);\n      if (args.length == 0)\n      {\n         if (services.length == 0) System.out.println(\"No printer for flavor \" + flavor);\n         else\n         {\n            System.out.println(\"Specify a file of flavor \" + flavor\n                  + \"\\nand optionally the number of the desired printer.\");\n            for (int i = 0; i < services.length; i++)\n               System.out.println((i + 1) + \": \" + services[i].getName());\n         }\n         System.exit(0);\n      }\n      String fileName = args[0];\n      int p = 1;\n      if (args.length > 1) p = Integer.parseInt(args[1]);\n      if (fileName == null) return;\n      try (InputStream in = Files.newInputStream(Paths.get(fileName)))\n      {\n         Doc doc = new SimpleDoc(in, flavor, null);\n         DocPrintJob job = services[p - 1].createPrintJob();\n         job.print(doc, null);\n      }\n      catch (Exception ex)\n      {\n         ex.printStackTrace();\n      }\n   }"}
{"author": "mthli", "file": "ImageTransferFrame.3.java", "original_string": "private void paste()\n   {\n      Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n      DataFlavor flavor = DataFlavor.imageFlavor;\n      if (clipboard.isDataFlavorAvailable(flavor))\n      {\n         try\n         {\n            image = (Image) clipboard.getData(flavor);\n            label.setIcon(new ImageIcon(image));\n         }\n         catch (UnsupportedFlavorException exception)\n         {\n            JOptionPane.showMessageDialog(this, exception);\n         }\n         catch (IOException exception)\n         {\n            JOptionPane.showMessageDialog(this, exception);\n         }\n      }\n   }"}
{"author": "jfpl", "file": "LogoActivity.1.java", "original_string": "@Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState, R.layout.logo, \"\");\n        if (!PushMessageReceiver.hasBind(this)) {\n            Log.d(SystemUtil.LOG_MSG, \"has no bind\");\n            PushManager.startWork(getApplicationContext(),\n                    PushConstants.LOGIN_TYPE_API_KEY,\n                    ConstVariables.BAIDU_API_KEY);\n            PushManager.enableLbs(getApplicationContext());\n        } else {\n            Log.d(SystemUtil.LOG_MSG, \"has bind\");\n        }\n        GlobalVariables.initVariables(this);\n        FrameContext.startBaseService(this);\n        handler.postDelayed(runThread, 2000);\n    }"}
{"author": "newweb", "file": "Test.0.java", "original_string": "@org.junit.Test\n    public void test() throws IOException {\nInputStream in = Runtime.getRuntime().exec(\"mysqldump\").getInputStream();\n        byte[] data = new byte[100000];\n        int i = 0;\n        int read = in.read();\n        while(read != -1){\n            data[i] = (byte) read;\n            i++;\n            read = in.read();\n        }\n        String s = new String(data, 0, i);\n        in.close();\n        System.out.println(s);\n}"}
{"author": "BrandConstantin", "file": "IncrementarDe7en7ConFor.0.java", "original_string": "public static void main(String[] args) {   \n    Scanner teclado = new Scanner(System.in); \n    System.out.println(\"Escribe un numero:\");\n    int num1 = teclado.nextInt();\n    System.out.println(\"Escribe otro numero:\");\n    int num2 = teclado.nextInt();\n    System.out.println(\"==================================================\");\n    if (num1 == num2){\n      System.err.println(\"Escribe 2 numeros distinctos por favor!\"); \n    } else if(num1 > num2){\n        System.err.println(\"El primer numero tiene que ser mas peque\u00f1os que el segundo\"); \n    }else{\n        for (int i = num1; i <= num2; i += 7){\n          System.out.println(i + \" \");\n        }\n      }\n  }"}
{"author": "chacha", "file": "LoginRequest.4.java", "original_string": "public static void main(String[] args){\n        LoginRequest login=new LoginRequest();\n        LoginBody body=new LoginBody(\"chacha1\",\"fdafdgwqtgsadfadf\",LoginBody.ACTION_TOKEN);\n        login.setBody(body);\n        try{\n            System.out.println(login.toJson());\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n    }"}
{"author": "newweb", "file": "CustomerMath.1.java", "original_string": "public static double sub(double v1, double v2) {\n        BigDecimal b1 = new BigDecimal(Double.toString(v1));\n        BigDecimal b2 = new BigDecimal(Double.toString(v2));\n        return b1.subtract(b2).doubleValue();\n    }"}
{"author": "weijuhui", "file": "EditNumberActivity_.10.java", "original_string": "private void injectExtras_() {\n        Intent intent_ = getIntent();\n        Bundle extras_ = intent_.getExtras();\n        if (extras_!= null) {\n            if (extras_.containsKey(\"value\")) {\n                try {\n                    value = cast_(extras_.get(\"value\"));\n                } catch (ClassCastException e) {\n                    Log.e(\"EditNumberActivity_\", \"Could not cast extra to expected type, the field is left to its default value\", e);\n                }\n            }\n            if (extras_.containsKey(\"flag\")) {\n                try {\n                    flag = ((Integer) extras_.get(\"flag\"));\n                } catch (ClassCastException e) {\n                    Log.e(\"EditNumberActivity_\", \"Could not cast extra to expected type, the field is left to its default value\", e);\n                }\n            }\n        }\n    }"}
{"author": "quyi", "file": "NetworkPacket.70.java", "original_string": "private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n    try {\n      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n    } catch (org.apache.thrift.TException te) {\n      throw new java.io.IOException(te);\n    }\n  }"}
{"author": "quyi", "file": "ConfigModifyService.397.java", "original_string": "public boolean equals(modifyTaskManagerConfig_args that) {\n      if (that == null)\n        return false;\n      boolean this_present_propertyName = true && this.isSetPropertyName();\n      boolean that_present_propertyName = true && that.isSetPropertyName();\n      if (this_present_propertyName || that_present_propertyName) {\n        if (!(this_present_propertyName && that_present_propertyName))\n          return false;\n        if (!this.propertyName.equals(that.propertyName))\n          return false;\n      }\n      boolean this_present_propertyValue = true && this.isSetPropertyValue();\n      boolean that_present_propertyValue = true && that.isSetPropertyValue();\n      if (this_present_propertyValue || that_present_propertyValue) {\n        if (!(this_present_propertyValue && that_present_propertyValue))\n          return false;\n        if (!this.propertyValue.equals(that.propertyValue))\n          return false;\n      }\n      return true;\n    }"}
{"author": "java_project_jar", "file": "ByteOrderMark.4.java", "original_string": "public boolean equals(Object obj)\n    {\n        if(!(obj instanceof ByteOrderMark))\n            return false;\n        ByteOrderMark bom = (ByteOrderMark)obj;\n        if(bytes.length != bom.length())\n            return false;\n        for(int i = 0; i < bytes.length; i++)\n            if(bytes[i] != bom.get(i))\n                return false;\n        return true;\n    }"}
{"author": "seadroid", "file": "Account.7.java", "original_string": "@Override\n    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;\n        if (obj == null || (obj.getClass() != this.getClass()))\n            return false;\n        Account a = (Account)obj;\n        if (a.server == null || a.email == null)\n            return false;\n        return a.server.equals(this.server) && a.email.equals(this.email);\n    }"}
{"author": "applewjg", "file": "SearchinRotatedSortedArrayII.1.java", "original_string": "public boolean search(int[] A, int target) {\n        int left = 0, right = A.length - 1;\n        while (left <= right) {\n            int mid = (left + right) /2;\n            if (A[mid] == target) return true;\n            if (A[left] < A[mid]) {\n                if (A[left] <= target && target < A[mid]) right = mid - 1;\n                else left = mid + 1;\n            } else if (A[left] > A[mid]) {\n                if (A[mid] < target && target <= A[right]) left = mid + 1;\n                else right = mid - 1;\n            } else {\n                if (A[left] == A[right]) {\n                    ++left; --right;\n                } else left = mid + 1;\n            }\n        }\n        return false;\n    }"}
{"author": "johnno1962", "file": "DefaultTableCellRendererProxy.0.java", "original_string": "public java.awt.Component getTableCellRendererComponent( javax.swing.JTable table, java.lang.Object value, boolean isSelected, boolean hasFocus, int row, int column ) {\n        if ( !entered_getTableCellRendererComponent_0 ) {\n            entered_getTableCellRendererComponent_0 = true;\n            java.awt.Component __return = __getTableCellRendererComponent( table, value, isSelected, hasFocus, row, column );\n            entered_getTableCellRendererComponent_0 = false;\n            return __return;\n        }\n        else\n            return super.getTableCellRendererComponent( table, value, isSelected, hasFocus, row, column );\n    }"}
{"author": "andengineexamples", "file": "LineExample.2.java", "original_string": "@Override\n    public Scene onCreateScene() {\n        this.mEngine.registerUpdateHandler(new FPSLogger());\n        final Scene scene = new Scene();\n        scene.setBackground(new Background(0.09804f, 0.6274f, 0.8784f));\n        final Random random = new Random(RANDOM_SEED);\n        final VertexBufferObjectManager vertexBufferObjectManager = this.getVertexBufferObjectManager();\n        for(int i = 0; i < LINE_COUNT; i++) {\n            final float x1 = random.nextFloat() * CAMERA_WIDTH;\n            final float x2 = random.nextFloat() * CAMERA_WIDTH;\n            final float y1 = random.nextFloat() * CAMERA_HEIGHT;\n            final float y2 = random.nextFloat() * CAMERA_HEIGHT;\n            final float lineWidth = random.nextFloat() * 5;\n            final Line line = new Line(x1, y1, x2, y2, lineWidth, vertexBufferObjectManager);\n            line.setColor(random.nextFloat(), random.nextFloat(), random.nextFloat());\n            scene.attachChild(line);\n        }\n        return scene;\n    }"}
{"author": "Tobias_Ogallo", "file": "Scheduling_report.2.java", "original_string": "private void printList() \n    {\n        try {\n            ResultSet rst=Connect.getConnection().createStatement(\n            ResultSet.TYPE_SCROLL_INSENSITIVE,\n            ResultSet.CONCUR_UPDATABLE).executeQuery(\"select Bus_No,Route_No,empNo,Trip_No,Date_Scheduled from Schedules\");\n                listPane.append(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n                listPane.append(\"Bus_No\"+\"\\t\\t\"+\"Route_No\"+\"\\t\\t\"+\"Employee_No\"+\"\\t\\t\"+\"Trip_No\\t\\t\"+\"Date_Scheduled\\n\");\n                while (rst.next())\n                {\n                    listPane.append(\"       \");\n                    listPane.append(rst.getString(1).trim());\n                    listPane.append(\"\\t\\t\");\n                    listPane.append(rst.getString(2).trim());\n                    listPane.append(\"\\t\\t\");\n                    listPane.append(rst.getString(3).trim());\n                    listPane.append(\"\\t\\t\");\n                    listPane.append(rst.getString(4).trim());\n                    listPane.append(\"\\t\\t\");\n                    listPane.append(rst.getString(5).trim());\n                    listPane.append(\"\\n\\n\");\n                 }\n                 if (rst != null)\n                  rst.close();\n               } catch (SQLException sqle) {\n                     JOptionPane.showMessageDialog(null, \" No Records found\"\n                                       + sqle.getMessage());\n                    return;\n               }\n       }"}
{"author": "pacman", "file": "TaskDAOImpl.4.java", "original_string": "@Override\n    public List<TaskModel> findByLessonId(int lessonId) {\n        TaskMappingQuery query = new TaskMappingQuery();\n        query.setDataSource(getDataSource());\n        query.setSql(\"SELECT * FROM task WHERE lid=? ORDER BY modified LIMIT 100\");\n        query.declareParameter(new SqlParameter(Types.INTEGER));\n        query.compile();\n        return query.execute(lessonId);\n    }"}
{"author": "seadroid", "file": "LruCache.1.java", "original_string": "@SuppressWarnings(\"unchecked\")\n    private void cleanUpWeakMap() {\n        Entry<K, V> entry = (Entry<K, V>) mQueue.poll();\n        while (entry != null) {\n            mWeakMap.remove(entry.mKey);\n            entry = (Entry<K, V>) mQueue.poll();\n        }\n    }"}
{"author": "quyi", "file": "EngineOperate.601.java", "original_string": "public void setFieldValue(_Fields field, Object value) {\n      switch (field) {\n      case RULES:\n        if (value == null) {\n          unsetRules();\n        } else {\n          setRules((List<com.nercis.isscp.idl.rules.Rules>)value);\n        }\n        break;\n      }\n    }"}
{"author": "quyi", "file": "EngineOperation.1.java", "original_string": "public static EngineOperation findByValue(int value) { \n    switch (value) {\n      case 1:\n        return shutdown;\n      case 2:\n        return restart;\n      case 3:\n        return startup;\n      case 4:\n        return sleep;\n      default:\n        return null;\n    }\n  }"}
{"author": "Viscent", "file": "AttachmentProcessor.5.java", "original_string": "private File saveAsFile(InputStream in, String documentId,\n        String originalFileName) throws IOException {\n        String dirName = ATTACHMENT_STORE_BASE_DIR + documentId;\n        File dir = new File(dirName);\n        dir.mkdirs();\n        File file = new File(dirName + '/'\n            + Normalizer.normalize(originalFileName, Normalizer.Form.NFC));\n        if (!dirName.equals(file.getCanonicalFile().getParent())) {\n            throw new SecurityException(\"Invalid originalFileName:\"\n                + originalFileName);\n        }\n        BufferedOutputStream bos = null;\n        BufferedInputStream bis = new BufferedInputStream(in);\n        byte[] buf = new byte[2048];\n        int len = -1;\n        try {\n            bos = new BufferedOutputStream(new FileOutputStream(file));\n            while ((len = bis.read(buf)) > 0) {\n                bos.write(buf, 0, len);\n            }\n            bos.flush();\n        } finally {\n            try {\n                bis.close();\n            } catch (IOException e) {\n                ;\n            }\n            try {\n                if (null != bos) {\n                    bos.close();\n                }\n            } catch (IOException e) {\n                ;\n            }\n        }\n        return file;\n    }"}
{"author": "newweb", "file": "MaterialBrandDaoImp.4.java", "original_string": "@SuppressWarnings(\"rawtypes\")\n    @Override\n    public List selectAllMaterialBrands(int start, int limit) {\n        List list = new ArrayList();\n        Query query = sessionFactory.getCurrentSession().createSQLQuery(\"select * from t_materialbrand\")\n                .addEntity(MaterialBrand.class);\n        int size = query.list().size();\n        query.setFirstResult(start);\n        query.setMaxResults(limit);\n        list.add(0, size);\n        list.add(1, query.list());\n        return list;\n    }"}
{"author": "chao420456", "file": "MyBufferedReader.0.java", "original_string": "public String readLine() throws IOException {\n        StringBuilder sb = new StringBuilder();\n        int ch = 0;\n        while ((ch = r.read()) != -1) {\n            if (ch == '\\r') {\n                continue;\n            }\n            if (ch == '\\n') {\n                return sb.toString();\n            } else {\n                sb.append((char) ch);\n            }\n        }\n        if (sb.length() > 0) {\n            return sb.toString();\n        }\n        return null;\n    }"}
{"author": "sample_server", "file": "CdKeyController.2.java", "original_string": "@ACL(limit = Limit.CDKEY, type = RequestType.JSON)\n    @RequestMapping(\"getall\")\n    @ResponseBody\n    public String getall(HttpSession session) throws IOException\n    {\n        ZoneEntity zoneEntity = AttributeManager.getAttribute(AttributeManager.SESSION_ATTR_CTX, session).getTargetZone();\n        if (null == zoneEntity)\n        {\n            return JsonHelper.toJson(new ArrayList<>());\n        }\n        else\n        {\n            return JsonHelper.toJson(listCdKey(zoneEntity.getZoneId()));\n        }\n    }"}
{"author": "dlna_framework", "file": "SSDPNotifySocketList.3.java", "original_string": "public boolean open(){\n        InetAddress[] binds=this.binds ;\n        String[] bindAddresses;\n        if(binds!=null){            \n            bindAddresses = new String[binds.length];\n            for (int i = 0; i < binds.length; i++) {\n                bindAddresses[i] = binds[i].getHostAddress();\n            }\n        }else{\n            int nHostAddrs = HostInterface.getNHostAddresses();\n            bindAddresses = new String[nHostAddrs]; \n            for (int n=0; n<nHostAddrs; n++) {\n                bindAddresses[n] = HostInterface.getHostAddress(n);\n            }\n        }       \n        for (int i = 0; i < bindAddresses.length; i++) {\n            if (!isValidAddress(bindAddresses[i])){\n                log.e(\"ready to create SSDPNotifySocket bindAddresses = \" + bindAddresses[i]+ \", it's invalid so drop it!!!\" );\n                continue;\n            }\n            if(bindAddresses[i]!=null){\n                SSDPNotifySocket ssdpNotifySocket = new SSDPNotifySocket(bindAddresses[i]);\n                if (ssdpNotifySocket.getSocket() == null){\n                    log.e(\"ssdpNotifySocket.getSocket() == null!!!\");\n                    return false;\n                }\n                log.i(\"ssdpNotifySocket create success!!!bindAddresses = \" + bindAddresses[i]);\n                add(ssdpNotifySocket);\n                return true;\n            }\n        }\n        return true;\n    }"}
{"author": "lemire", "file": "IteratorUtil32.7.java", "original_string": "public static IteratingRLW32[] toIterators(\n            final EWAHCompressedBitmap32... x) {\n        IteratingRLW32[] X = new IteratingRLW32[x.length];\n        for (int k = 0; k < X.length; ++k) {\n            X[k] = new IteratingBufferedRunningLengthWord32(x[k]);\n        }\n        return X;\n    }"}
{"author": "brianway", "file": "Run15_joinMore.2.java", "original_string": "@Override\n        synchronized public void run() {\n            try {\n                System.out.println(\"B begin timer=\" + System.currentTimeMillis() + \" threadName=\" + Thread.currentThread().getName());\n                Thread.sleep(3000);\n                System.out.println(\"B end   timer=\" + System.currentTimeMillis() + \" threadName=\" + Thread.currentThread().getName());\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }"}
{"author": "pacman", "file": "ProcessExecutor.0.java", "original_string": "public boolean execute(List<String> outList, \n                             String cmdFormat, \n                             Object... args) \n            throws Exception {\n        boolean result = false;\n        String cmdline = String.format(cmdFormat, args);\n        Process process = Runtime.getRuntime().exec(cmdline);\n        result = process.waitFor() == SUCCESS;\n        return result;\n    }"}
{"author": "quyi", "file": "TSOperate.757.java", "original_string": "@Override\n      public void write(org.apache.thrift.protocol.TProtocol prot, updateUserAppStatus_result struct) throws org.apache.thrift.TException {\n        TTupleProtocol oprot = (TTupleProtocol) prot;\n        BitSet optionals = new BitSet();\n        if (struct.isSetSuccess()) {\n          optionals.set(0);\n        }\n        if (struct.isSetIre()) {\n          optionals.set(1);\n        }\n        if (struct.isSetUe()) {\n          optionals.set(2);\n        }\n        oprot.writeBitSet(optionals, 3);\n        if (struct.isSetSuccess()) {\n          oprot.writeI32(struct.success.getValue());\n        }\n        if (struct.isSetIre()) {\n          struct.ire.write(oprot);\n        }\n        if (struct.isSetUe()) {\n          struct.ue.write(oprot);\n        }\n      }"}
{"author": "0opslab", "file": "Log.10.java", "original_string": "@Override\n    public String toString() {\n        return \"Log{\" +\n                \"logId=\" + logId +\n                \", logType='\" + logType + '\\'' +\n                \", operationName='\" + operationName + '\\'' +\n                \", operation_type='\" + operation_type + '\\'' +\n                '}';\n    }"}
{"author": "jfpl", "file": "JFWebViewClient.1.java", "original_string": "@Override\n    public void onPageFinished(WebView view, String url) {\n        webActivity.setRefreshState(true);\n        if (view.canGoBack()) {\n            webActivity.setGoBackState(true);\n        } else {\n            webActivity.setGoBackState(false);\n        }\n        refreshUrl = url;\n        webViewLoadComplete(view);\n        webActivity.setPageLoadFinish(true);\n    }"}
{"author": "quyi", "file": "TSOperate.313.java", "original_string": "public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n      switch (field) {\n      case MISSION_ID:\n        return isSetMissionId();\n      case USER_APP_ID:\n        return isSetUserAppId();\n      }\n      throw new IllegalStateException();\n    }"}
{"author": "quyi", "file": "EngineOperate.164.java", "original_string": "@Override\n      public void write(org.apache.thrift.protocol.TProtocol prot, issuedMessage_args struct) throws org.apache.thrift.TException {\n        TTupleProtocol oprot = (TTupleProtocol) prot;\n        oprot.writeString(struct.missionId);\n        {\n          oprot.writeI32(struct.userApps.size());\n          for (com.nercis.isscp.idl.UserApp _iter44 : struct.userApps)\n          {\n            _iter44.write(oprot);\n          }\n        }\n        BitSet optionals = new BitSet();\n        if (struct.isSetRules()) {\n          optionals.set(0);\n        }\n        if (struct.isSetPlots()) {\n          optionals.set(1);\n        }\n        oprot.writeBitSet(optionals, 2);\n        if (struct.isSetRules()) {\n          {\n            oprot.writeI32(struct.rules.size());\n            for (String _iter45 : struct.rules)\n            {\n              oprot.writeString(_iter45);\n            }\n          }\n        }\n        if (struct.isSetPlots()) {\n          {\n            oprot.writeI32(struct.plots.size());\n            for (com.nercis.isscp.idl.PlotsType _iter46 : struct.plots)\n            {\n              oprot.writeI32(_iter46.getValue());\n            }\n          }\n        }\n      }"}
{"author": "seadroid", "file": "SearchAdapter.5.java", "original_string": "private String filePath(SearchedFile searchedFile) {\n        String parentPath = Utils.getParentPath(searchedFile.getPath());\n        SeafRepo seafRepo = mActivity.getDataManager().getCachedRepoByID(searchedFile.getRepoID());\n        if (seafRepo != null)\n            return Utils.pathJoin(seafRepo.getName(), parentPath);\n        else\n            return parentPath;\n    }"}
{"author": "newweb", "file": "OrderSmallServiceImp.6.java", "original_string": "@Override\n    public OrderSmall[] queryAllOrderSmalls() {\n        List<OrderSmall> list = orderSmallDao.selectAllOrderSmalls();\n        OrderSmall[] oss = new OrderSmall[list.size()];\n        int count = 0;\n        for (OrderSmall os : list) {\n            oss[count++] = os;\n        }\n        return oss;\n    }"}
{"author": "quyi", "file": "Sample.36.java", "original_string": "public boolean isSet(_Fields field) {\n    if (field == null) {\n      throw new IllegalArgumentException();\n    }\n    switch (field) {\n    case MISSION_ID:\n      return isSetMissionId();\n    case USER_APP_ID:\n      return isSetUserAppId();\n    case PLOTS_STATUS:\n      return isSetPlotsStatus();\n    case CHECK_START_TIME:\n      return isSetCheckStartTime();\n    case CHECK_STOP_TIME:\n      return isSetCheckStopTime();\n    }\n    throw new IllegalStateException();\n  }"}
{"author": "quyi", "file": "EngineOperate.545.java", "original_string": "public static _Fields findByThriftIdOrThrow(int fieldId) {\n        _Fields fields = findByThriftId(fieldId);\n        if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n        return fields;\n      }"}
{"author": "applewjg", "file": "UniqueBinarySearchTreesII.1.java", "original_string": "public List<TreeNode> generateTreesRe(int l, int r) {\n        ArrayList<TreeNode> res = new ArrayList<TreeNode>();\n        if (l > r) {\n            res.add(null);\n            return res;\n        }\n        for (int k = l; k <= r; ++k) {\n            List<TreeNode> leftTrees = generateTreesRe(l, k-1);\n            List<TreeNode> rightTrees = generateTreesRe(k+1, r);\n            for (int i = 0; i < leftTrees.size(); i++) {\n                for (int j = 0; j < rightTrees.size(); j++) {\n                    TreeNode root = new TreeNode(k);\n                    root.left = leftTrees.get(i);\n                    root.right = rightTrees.get(j);\n                    res.add(root);\n                }\n            }\n        }\n        return res;\n    }"}
{"author": "quyi", "file": "EngineOperate.237.java", "original_string": "private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }"}
{"author": "quyi", "file": "ConfigModifyService.325.java", "original_string": "public void validate() throws org.apache.thrift.TException {\n      if (propertyName == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'propertyName' was not present! Struct: \" + toString());\n      }\n      if (propertyValue == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'propertyValue' was not present! Struct: \" + toString());\n      }\n      }"}
{"author": "dlna_framework", "file": "SSDPSearchSocketList.5.java", "original_string": "public void stop()\n    {\n        int nSockets = size();\n        for (int n=0; n<nSockets; n++) {\n            SSDPSearchSocket sock = getSSDPSearchSocket(n);\n            sock.stop();\n        }\n    }"}
{"author": "brianway", "file": "Run4_schedule3.0.java", "original_string": "@Override\n        public void run() {\n            try {\n                System.out.println(\"begin timer=\" + System.currentTimeMillis());\n                Thread.sleep(1000);\n                System.out.println(\"end   timer=\" + System.currentTimeMillis());\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }"}
{"author": "newweb", "file": "OrderDaoImp.5.java", "original_string": "@Override\n    public List selectOrderByAcceptStatus(String acceptStatus,int start, int limit) {\n        List list = new ArrayList();\n        Query query = sessionFactory.getCurrentSession().createSQLQuery(\"select * from t_order where acceptStatus=? and doneStatus='notDone' order by createDate DESC,createTime DESC\")\n                .addEntity(Order.class);\n        query.setString(0, acceptStatus);\n        int size = query.list().size();\n        query.setFirstResult(start);\n        query.setMaxResults(limit);\n        list.add(0,size);\n        list.add(1,query.list());\n        return list;\n    }"}
{"author": "quyi", "file": "APICheck.90.java", "original_string": "private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n    try {\n      __isset_bitfield = 0;\n      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n    } catch (org.apache.thrift.TException te) {\n      throw new java.io.IOException(te);\n    }\n  }"}
{"author": "quyi", "file": "ConfigModifyService.498.java", "original_string": "public static _Fields findByThriftIdOrThrow(int fieldId) {\n        _Fields fields = findByThriftId(fieldId);\n        if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n        return fields;\n      }"}
{"author": "mthli", "file": "SerialTransferFrame.4.java", "original_string": "public DataFlavor[] getTransferDataFlavors()\n   {\n      DataFlavor[] flavors = new DataFlavor[2];\n      Class<?> type = obj.getClass();\n      String mimeType = \"application/x-java-serialized-object;class=\" + type.getName();\n      try\n      {\n         flavors[0] = new DataFlavor(mimeType);\n         flavors[1] = DataFlavor.stringFlavor;\n         return flavors;\n      }\n      catch (ClassNotFoundException e)\n      {\n         return new DataFlavor[0];\n      }\n   }"}
{"author": "quyi", "file": "TSOperate.36.java", "original_string": "public void queryMission(String missionId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {\n      checkReady();\n      queryMission_call method_call = new queryMission_call(missionId, resultHandler, this, ___protocolFactory, ___transport);\n      this.___currentMethod = method_call;\n      ___manager.call(method_call);\n    }"}
{"author": "jfpl", "file": "GetBindVehService.0.java", "original_string": "@Override\n    public AbstractCommonData doSuccess(AbstractCommonData acd) {\n        ctx.update(\"delete_bind_veh_byuname\", GlobalVariables.loginUsername);\n        List<AbstractCommonData> vehs = acd.getArrayValue(\"vehs\");\n        for (AbstractCommonData item : vehs) {\n            String bindName = item.getStringValue(\"jtgzfw_user\");\n            String hpzl = item.getStringValue(\"hpzl\");\n            String hphm = item.getStringValue(\"hphm\");\n            try {\n                ctx.update(\"add_bind_veh\", bindName,\n                        GlobalVariables.loginUsername, hphm, hpzl, \"\");\n            } catch (Exception ex) {\n            }\n        }\n        SampleStorageUtil.saveKeyValue(ctx, ConstVariables.SYNC_VEH_TIME,\n                new Date().getTime() + \"\");\n        return null;\n    }"}
{"author": "applewjg", "file": "N-QueensII.5.java", "original_string": "public void totalNQueensRe2(int n, int row, int ld, int rd, int[] res) {\n        if (row == (1<<n) -1 ) {\n            res[0]++;\n            return;\n        }\n        int avail = ~(row | ld | rd);\n        for (int i = n - 1; i >= 0; --i) {\n            int pos = 1<<i;\n            if ((int)(avail&pos) != 0) {\n                totalNQueensRe2(n, row | pos, (ld|pos) << 1, (rd|pos) >>1, res);\n            }\n        }\n    }"}
{"author": "brianway", "file": "Run2_sleep.2.java", "original_string": "@Override\n            public void run() {\n                super.run();\n                long i = 0;\n                long max = (long) Integer.MAX_VALUE;\n                System.out.println(\"max = \" + max);\n                System.out.println(Thread.currentThread().getName() + \" begin while\");\n                while (i < max) {\n                    i++;\n                    if (i % 100000000 == 0) {\n                        System.out.println(Thread.currentThread().getName() + \" now is \" + i);\n                    }\n                }\n                System.out.println(Thread.currentThread().getName() + \" end while\");\n            }"}
{"author": "sample_server", "file": "NettyRpcConnection.5.java", "original_string": "@Override\n    public void connect()\n    {\n        if (!isConnected())\n        {\n            try\n            {\n                bootstrap = new ClientBootstrap(new NioClientSocketChannelFactory(Executors.newCachedThreadPool(), Executors.newCachedThreadPool()));\n                bootstrap.setPipelineFactory(new NettyRpcClientPipelineFactory());\n                bootstrap.setOption(\"keepAlive\", true);\n                bootstrap.setOption(\"tcpNoDelay\", true);\n                bootstrap.setOption(\"soTimeout\", timeout);\n                bootstrap.setPipelineFactory(new NettyRpcClientPipelineFactory());\n                ChannelFuture cf = bootstrap.connect(new InetSocketAddress(host, port));\n                cf.awaitUninterruptibly(timeout);\n                if (cf.isDone() && cf.isSuccess())\n                {\n                    channel = cf.getChannel();\n                }\n                else\n                {\n                    throw new RpcException(\"failed connection\");\n                }\n            } catch (Exception e)\n            {\n                disconnect();\n                throw new RpcIOException(e);\n            }\n        }\n    }"}
{"author": "mthli", "file": "PreferencesTest.6.java", "original_string": "public void actionPerformed(ActionEvent event)\n            {\n               node.putInt(\"left\", getX());\n               node.putInt(\"top\", getY());\n               node.putInt(\"width\", getWidth());\n               node.putInt(\"height\", getHeight());\n               node.put(\"title\", getTitle());\n               System.exit(0);\n            }"}
{"author": "quyi", "file": "NodeInfo.26.java", "original_string": "public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);\n  }"}
{"author": "0opslab", "file": "validTest.2.java", "original_string": "public void testIsValid2() throws Exception {\n        Map map = new HashMap();\n        assertEquals(false, valid.valid(map));\n        map.put(\"1\", \"1\");\n        assertEquals(true, valid.valid(map));\n        Map map1 = new HashMap();\n        assertEquals(false, valid.valid(map, map1));\n        map1.put(\"2\", \"2\");\n        assertEquals(true, valid.valid(map, map1));\n    }"}
{"author": "newweb", "file": "BillDaoImp.9.java", "original_string": "@SuppressWarnings(\"unchecked\")\n    @Override\n    public List<Bill> selectBillByStatusACreateDateACustomerLikeCondition(\n            String status, String startDate, String endDate, String customer) {\n        Query query = sessionFactory.getCurrentSession().createSQLQuery(\"select * from t_bill where status != '\u7b49\u5f85\u7ed3\u5e10' and status like ? and createDate between ? and ? and customerID like ? order by lastModifyDate DESC,lastModifyTime DESC\")\n                .addEntity(Bill.class);\n        query.setString(0, status);\n        query.setString(1, startDate);\n        query.setString(2, endDate);\n        query.setString(3, customer);\n        return query.list();\n    }"}
{"author": "mark_watson", "file": "TestGenetic.4.java", "original_string": "public void print() {\n        float sum = 0.0f;\n        for (int i=0; i<numChromosomes; i++) {\n            float x = geneToFloat(i);\n            sum += chromosomes.get(i).getFitness();\n            if (true) { System.out.print(\"Fitness for chromosome \");\n                System.out.print(i);\n                System.out.print(\" is \");\n                System.out.println(chromosomes.get(i).getFitness() + \", occurs at x=\" + x);\n            }\n        }\n        sum /= (float)numChromosomes;\n        System.out.println(\"Average fitness=\" + sum +\n                           \" and best fitness for this generation:\" +\n                           chromosomes.get(0).getFitness());\n    }"}
{"author": "mthli", "file": "PermissionTest.1.java", "original_string": "public void run()\n            {\n               JFrame frame = new PermissionTestFrame();\n               frame.setTitle(\"PermissionTest\");\n               frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n               frame.setVisible(true);\n            }"}
{"author": "chweixin", "file": "WeChatAccessTokenServiceImpl.9.java", "original_string": "@Override\n    public void delete(String[] ids) {\n        if(ids == null || ids.length == 0)return;\n        for(int i = 0; i < ids.length; i++){\n            if(ids[i] == null || ids[i].trim().isEmpty()) continue;\n            WeChatAccessToken data = this.weChatAccessTokenDao.load(WeChatAccessToken.class, ids[i]);\n            if(data != null)this.weChatAccessTokenDao.delete(data);\n        }\n    }"}
{"author": "quyi", "file": "MissionResults.36.java", "original_string": "@Override\n  public boolean equals(Object that) {\n    if (that == null)\n      return false;\n    if (that instanceof MissionResults)\n      return this.equals((MissionResults)that);\n    return false;\n  }"}
{"author": "chweixin", "file": "MenuAction.2.java", "original_string": "public void tree() throws IOException{\n        List<TreeNode> treeNodeList = null;\n        if(this.menuService != null && (this.systemId != null && !this.systemId.trim().isEmpty())){\n            treeNodeList = mapNodesCache.get(this.systemId);\n            if(treeNodeList == null || treeNodeList.size() == 0){\n                treeNodeList = new ArrayList<>();\n                ModuleSystem ms = this.menuService.loadModuleSystem(this.systemId);\n                if(ms != null && ms.getModules() != null && ms.getModules().size() > 0){\n                    for(int i = 0; i < ms.getModules().size(); i++){\n                        TreeNode node = this.createTreeNode(ms.getModules().item(i));\n                        if(node != null) treeNodeList.add(node);\n                    }\n                }\n                if(treeNodeList != null && treeNodeList.size() > 0){\n                    mapNodesCache.put(this.systemId, treeNodeList);\n                }\n            }\n        }\n        this.writeJson(treeNodeList);\n    }"}
{"author": "quyi", "file": "StaticCheckResultData.64.java", "original_string": "private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n    try {\n      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n    } catch (org.apache.thrift.TException te) {\n      throw new java.io.IOException(te);\n    }\n  }"}
{"author": "quyi", "file": "TSOperate.121.java", "original_string": "public void onComplete(com.nercis.isscp.idl.Result o) {\n            heart_result result = new heart_result();\n            result.success = o;\n            try {\n              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);\n              return;\n            } catch (Exception e) {\n              LOGGER.error(\"Exception writing to internal frame buffer\", e);\n            }\n            fb.close();\n          }"}
{"author": "mthli", "file": "SwingWorkerTest.4.java", "original_string": "@Override\n      public StringBuilder doInBackground() throws IOException, InterruptedException\n      {\n         int lineNumber = 0;\n         try (Scanner in = new Scanner(new FileInputStream(file)))\n         {\n            while (in.hasNextLine())         \n            {\n               String line = in.nextLine();\n               lineNumber++;\n               text.append(line);\n               text.append(\"\\n\");\n               ProgressData data = new ProgressData();\n               data.number = lineNumber;\n               data.line = line;\n               publish(data);\n               Thread.sleep(1); }\n         }\n         return text;\n      }"}
{"author": "Josh_Code", "file": "Model.1.java", "original_string": "public void addTriangle(Triangle t)\n    {\n        if (numTriangles == triangles.length)\n        {\n            Triangle []old = triangles;\n            triangles = new Triangle[numTriangles*2];\n            for (int i = 0; i < numTriangles; i++)\n            {\n                triangles[i] = old[i];\n            }\n        }\n        triangles[numTriangles] = t;\n        numTriangles++;\n        needVertexUpdating=true; }"}
{"author": "seadroid", "file": "AccountDbHelper.7.java", "original_string": "public void updateAccount(Account oldAccount, Account newAccount) {\n        ContentValues values = new ContentValues();\n        values.put(AccountDBHelper.ACCOUNT_COLUMN_SERVER, newAccount.server);\n        values.put(AccountDBHelper.ACCOUNT_COLUMN_EMAIL, newAccount.email);\n        values.put(AccountDBHelper.ACCOUNT_COLUMN_TOKEN, newAccount.token);\n        database.update(AccountDBHelper.ACCOUNT_TABLE_NAME, values, \"server=? and email=?\",\n                new String[]{oldAccount.server, oldAccount.email});\n        AccountNotifier.notifyProvider();\n    }"}
{"author": "vlc_android_macbuild", "file": "PackageManagerHelper.2.java", "original_string": "public static String getAppLabel(Context context, String packageName) {\n        PackageManager pkgManager = context.getPackageManager();\n        if (pkgManager == null)\n            return null;\n        PackageInfo pkgInfo;\n        try {\n            pkgInfo = pkgManager.getPackageInfo(packageName, 0);\n            if (pkgInfo == null)\n                return null;\n        } catch (NameNotFoundException e) {\n            e.printStackTrace();\n            return null;\n        }\n        ApplicationInfo appInfo = pkgInfo.applicationInfo;\n        if (appInfo == null)\n            return null;\n        CharSequence cs = appInfo.loadLabel(pkgManager);\n        if (cs == null)\n            return null;\n        return cs.toString();\n    }"}
{"author": "chweixin", "file": "PictureServiceImpl.7.java", "original_string": "private String createTargetStorePath(String folder){\n        if(folder == null || folder.trim().isEmpty()) return null;\n        String path = ServletActionContext.getServletContext().getRealPath(folder) + File.separator;\n        File destDir = new File(path);\n        if(!destDir.exists()){\n            destDir.mkdirs();\n            logger.info(\"\u521b\u5efa\u56fe\u7247\u5e93\u5b58\u50a8\u76ee\u5f55:\" + path);\n        }\n        return path;\n    }"}
{"author": "quyi", "file": "EngineOperate.307.java", "original_string": "@Override\n    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof searchApp_args)\n        return this.equals((searchApp_args)that);\n      return false;\n    }"}
{"author": "weijuhui", "file": "MainActivity.2.java", "original_string": "private void buildContent() {\n        Fragment details = (Fragment) getFragmentManager()\n                .findFragmentById(R.id.main_content);\n        details = new FragScence();\n        FragmentTransaction ft = getFragmentManager().beginTransaction();\n        ft.replace(R.id.main_content, details);\n        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);\n        ft.commit();\n    }"}
{"author": "quyi", "file": "EngineOperate.54.java", "original_string": "public searchApp_result getResult(I iface, searchApp_args args) throws org.apache.thrift.TException {\n        searchApp_result result = new searchApp_result();\n        try {\n          result.success = iface.searchApp(args.missionId, args.userAppId);\n        } catch (com.nercis.isscp.idl.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (com.nercis.isscp.idl.UnavailableException ue) {\n          result.ue = ue;\n        }\n        return result;\n      }"}
{"author": "quyi", "file": "EngineOperate.51.java", "original_string": "public operateEngine_result getResult(I iface, operateEngine_args args) throws org.apache.thrift.TException {\n        operateEngine_result result = new operateEngine_result();\n        try {\n          result.success = iface.operateEngine(args.engine, args.operate);\n        } catch (com.nercis.isscp.idl.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (com.nercis.isscp.idl.UnavailableException ue) {\n          result.ue = ue;\n        }\n        return result;\n      }"}
{"author": "quyi", "file": "EngineOperate.576.java", "original_string": "@Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder(\"searchEng_result(\");\n      boolean first = true;\n      sb.append(\"success:\");\n      if (this.success == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.success);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"ire:\");\n      if (this.ire == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.ire);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"ue:\");\n      if (this.ue == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.ue);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }"}
{"author": "vlc_android_macbuild", "file": "PackageManagerHelper.7.java", "original_string": "public static List<ResolveInfo> queryIntentActivities(Context context,\n            Intent intent, int flags) {\n        PackageManager manager = context.getPackageManager();\n        if (manager == null)\n            return null;\n        return manager.queryIntentActivities(intent, flags);\n    }"}
{"author": "chacha", "file": "LoginTokenDAO.9.java", "original_string": "public LinkedList<LoginToken> getPage(String lastId,int pageNum){\n        DBCollection coll=connection.getCollection(COLLECTION_NAME);\n        QueryBuilder queryBuilder = QueryBuilder.start();\n        DBObject query=queryBuilder.put(\"_id\").greaterThan(lastId).get();\n        DBObject orderBy=new BasicDBObject(\"_id\",1);DBCursor cursor=coll.find(query).sort(orderBy).limit(pageNum);\n        LinkedList<LoginToken> result=new LinkedList<LoginToken>();\n        while(cursor.hasNext()){\n            DBObject obj=cursor.next();\n            LoginToken token=new LoginToken();\n            token.fromDbObject(obj);\n            result.add(token);\n        }\n        return result;\n    }"}
{"author": "applewjg", "file": "RemoveDuplicatesfromSortedList.1.java", "original_string": "public ListNode deleteDuplicates(ListNode head) {\n        if(head == null || head.next == null) return head;\n        ListNode pre = head, cur = head.next;\n        while(cur != null) {\n            if (pre.val != cur.val) {\n                pre.next.val = cur.val;\n                pre = pre.next;\n            }\n            cur = cur.next;\n        }\n        pre.next = null;\n        return head;\n    }"}
{"author": "quyi", "file": "TSOperate.831.java", "original_string": "private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }"}
{"author": "weather", "file": "SwipeActivity.6.java", "original_string": "@Override\n            public void onPanelSlide(View view, float v) {\n                int alpha = (int) (255 * 0.8 * (1 - v));\n                if (mHasBackGround == false && mEnableBgBitMap) {\n                    mSliderBackGround.setBackgroundDrawable(new BitmapDrawable(ActivityUtil.getSliderBackBitmap()));\n                    mHasBackGround = true;\n                }\n            }"}
{"author": "andengineexamples", "file": "AsyncGameActivityExample.3.java", "original_string": "@Override\n    public void onPopulateSceneAsync(final Scene pScene, final IProgressListener pProgressListener) throws Exception {\n        final float centerX = (AsyncGameActivityExample.CAMERA_WIDTH - this.mFaceTextureRegion.getWidth()) / 2;\n        final float centerY = (AsyncGameActivityExample.CAMERA_HEIGHT - this.mFaceTextureRegion.getHeight()) / 2;\n        final Sprite face = new Sprite(centerX, centerY, this.mFaceTextureRegion, this.getVertexBufferObjectManager());\n        pScene.attachChild(face);\n    }"}
{"author": "Viscent", "file": "RecordGenerator.1.java", "original_string": "public static void main(String[] args) throws Exception {\n        Connection dbConn = getConnection();\n        if (args.length > 0 && \"init\".equals(args[0])) {\n            Statement st = dbConn.createStatement();\n            st.execute(\"CREATE TABLE SUBSCRIPTIONSA\" + \"( ID INTEGER PRIMARY KEY, \"\n                + \"PRODUCTID VARCHAR(20),\" + \"PACKAGEID VARCHAR(20), \"\n                + \"MSISDN VARCHAR(13), \" + \"OPERATIONTIME TIMESTAMP,\"\n                + \"EFFECTIVEDATE TIMESTAMP, \" + \"DUEDATE TIMESTAMP, \"\n                + \"OPERATIONTYPE INTEGER )\");\n            st.close();\n            }\n        try {\n            String[] msisdns = new String[] { \"13612345678\", \"13712345678\",\n                \"13812345678\", \"15912345678\" };\n            String[] operationTimes = new String[] { \"2014-08-08 20:08:08\",\n                \"2014-08-09 10:08:08\", \"2014-08-10 09:58:08\", \"2014-08-10 12:58:08\" };\n            PreparedStatement ps = dbConn\n                .prepareStatement(\"Insert into subscriptions(productId,packageId,msisdn,operationTime,operationType,effectiveDate,dueDate) \"\n                    + \"values(?,'pkg0000001',?,?,0,'2014-09-01 00:00:00','2014-12-01 23:59:59')\");\n            DecimalFormat df = new DecimalFormat(\"0000\");\n            Random rnd = new Random();\n            Random rnd1 = new Random();\n            Random rnd2 = new Random();\n            int count;\n            if (args.length > 0) {\n                count = Integer.valueOf(args[0]);\n            } else {\n                count = 10000;\n            }\n            for (int i = 0; i < count; i++) {\n                ps.setString(1, \"p0000\" + df.format(rnd1.nextInt(9999)));\n                ps.setString(2, msisdns[rnd.nextInt(msisdns.length)]);\n                ps.setString(3, operationTimes[rnd2.nextInt(operationTimes.length)]);\n                ps.addBatch();\n            }\n            ps.executeBatch();\n        } finally {\n            dbConn.close();\n        }\n    }"}
{"author": "quyi", "file": "Hardware.0.java", "original_string": "public static _Fields findByThriftId(int fieldId) {\n      switch(fieldId) {\n        case 1: return CPU_VENDOR;\n        case 2: return CPU_MODEL;\n        case 3: return CPU_CORES;\n        case 4: return CPU_MHZ;\n        case 5: return MEM_SIZE;\n        case 6: return FS_SIZE;\n        default:\n          return null;\n      }\n    }"}
{"author": "dlna_framework", "file": "SSDPNotifySocketList.6.java", "original_string": "public void stop()\n    {\n        int nSockets = size();\n        for (int n=0; n<nSockets; n++) {\n            SSDPNotifySocket sock = getSSDPNotifySocket(n);\n            sock.stop();\n        }\n    }"}
{"author": "chacha", "file": "AccountManageContextImpl.3.java", "original_string": "@Override\n    public QueryAccountResponse query(QueryAccountRequest queryReq) {\n        QueryAccountResponse r=new QueryAccountResponse();\n        try{\n            AccountNameBody body=queryReq.getBody();\n            String[] nameArray=body.getNameArray();\n            Account[] accts=acctDAO.getAccounts(nameArray);\n            LinkedList<AccountEntity> acctArray=new LinkedList<AccountEntity>();\n            for(Account a:accts){\n                AccountEntity entity=new AccountEntity();\n                entity.setUserName(a.getUserName());\n                entity.setPasswd(a.getPasswd());\n                entity.setAcctAttr(a.getAcctAttr());\n                acctArray.add(entity);\n            }\n            QueryAccountResponseBody responseBody=new QueryAccountResponseBody(acctArray);\n            r.setBody(responseBody);\n            r.setResult(ResponseCode.SUCCESS);\n        }catch(Exception e){\n            r.setResult(ResponseCode.ERROR_ACCOUNT_QUERY);\n            log.error(\"query:\",e);\n        }\n        return r;\n    }"}
{"author": "quyi", "file": "Rules.68.java", "original_string": "@Override\n    public void write(org.apache.thrift.protocol.TProtocol prot, Rules struct) throws org.apache.thrift.TException {\n      TTupleProtocol oprot = (TTupleProtocol) prot;\n      BitSet optionals = new BitSet();\n      if (struct.isSetRuleId()) {\n        optionals.set(0);\n      }\n      if (struct.isSetRuleName()) {\n        optionals.set(1);\n      }\n      if (struct.isSetRuleTypes()) {\n        optionals.set(2);\n      }\n      if (struct.isSetRiskLevel()) {\n        optionals.set(3);\n      }\n      if (struct.isSetPak()) {\n        optionals.set(4);\n      }\n      if (struct.isSetObj()) {\n        optionals.set(5);\n      }\n      if (struct.isSetFunc()) {\n        optionals.set(6);\n      }\n      if (struct.isSetRuleDescription()) {\n        optionals.set(7);\n      }\n      oprot.writeBitSet(optionals, 8);\n      if (struct.isSetRuleId()) {\n        oprot.writeString(struct.ruleId);\n      }\n      if (struct.isSetRuleName()) {\n        oprot.writeString(struct.ruleName);\n      }\n      if (struct.isSetRuleTypes()) {\n        {\n          oprot.writeI32(struct.ruleTypes.size());\n          for (Activity _iter4 : struct.ruleTypes)\n          {\n            oprot.writeI32(_iter4.getValue());\n          }\n        }\n      }\n      if (struct.isSetRiskLevel()) {\n        oprot.writeI32(struct.riskLevel.getValue());\n      }\n      if (struct.isSetPak()) {\n        oprot.writeString(struct.pak);\n      }\n      if (struct.isSetObj()) {\n        oprot.writeString(struct.obj);\n      }\n      if (struct.isSetFunc()) {\n        oprot.writeString(struct.func);\n      }\n      if (struct.isSetRuleDescription()) {\n        oprot.writeString(struct.ruleDescription);\n      }\n    }"}
{"author": "mthli", "file": "ZipTest.1.java", "original_string": "public static void showContents(String zipname) throws IOException\n   {\n      try (ZipInputStream zin = new ZipInputStream(new FileInputStream(zipname)))\n      {\n         ZipEntry entry;\n         while ((entry = zin.getNextEntry()) != null)\n         {\n            System.out.println(entry.getName());\n            Scanner in = new Scanner(zin);\n            while (in.hasNextLine())\n               System.out.println(\"   \" + in.nextLine());\n            zin.closeEntry();\n         }\n      }\n   }"}
{"author": "quyi", "file": "Sample.52.java", "original_string": "@Override\n    public void write(org.apache.thrift.protocol.TProtocol prot, Sample struct) throws org.apache.thrift.TException {\n      TTupleProtocol oprot = (TTupleProtocol) prot;\n      BitSet optionals = new BitSet();\n      if (struct.isSetMissionId()) {\n        optionals.set(0);\n      }\n      if (struct.isSetUserAppId()) {\n        optionals.set(1);\n      }\n      if (struct.isSetPlotsStatus()) {\n        optionals.set(2);\n      }\n      if (struct.isSetCheckStartTime()) {\n        optionals.set(3);\n      }\n      if (struct.isSetCheckStopTime()) {\n        optionals.set(4);\n      }\n      oprot.writeBitSet(optionals, 5);\n      if (struct.isSetMissionId()) {\n        oprot.writeString(struct.missionId);\n      }\n      if (struct.isSetUserAppId()) {\n        oprot.writeString(struct.userAppId);\n      }\n      if (struct.isSetPlotsStatus()) {\n        {\n          oprot.writeI32(struct.plotsStatus.size());\n          for (Map.Entry<PlotsType, CheckResultStatus> _iter85 : struct.plotsStatus.entrySet())\n          {\n            oprot.writeI32(_iter85.getKey().getValue());\n            oprot.writeI32(_iter85.getValue().getValue());\n          }\n        }\n      }\n      if (struct.isSetCheckStartTime()) {\n        oprot.writeString(struct.checkStartTime);\n      }\n      if (struct.isSetCheckStopTime()) {\n        oprot.writeString(struct.checkStopTime);\n      }\n    }"}
{"author": "vlc_android_macbuild", "file": "DefMediaListPlayer.27.java", "original_string": "@Override\n    public void onCompletion(MediaPlayer mp) {\n        DebugLog.v(TAG, \"onCompletion\");\n        try {\n            if (mPlayIndex != null && mSegmentPlayer != null) {\n                int count = mPlayIndex.mSegmentList.size();\n                int nextOrder = mSegmentPlayer.getOrder() + 1;\n                if (nextOrder < count) {\n                    mSegmentPlayer.release();\n                    mIsMediaSwitchEnd = false;\n                    if (mOnInfoListener != null) {\n                        mOnInfoListener.onInfo(this,\n                                MediaPlayer.MEDIA_INFO_BUFFERING_START, 0);\n                    }\n                    Segment nextSegment = mPlayIndex.mSegmentList\n                            .get(nextOrder);\n                    if (nextSegment != null) {\n                        mSegmentPlayer = createItemPlayer();\n                        int startTime = mPlayIndex.getStartTime(nextOrder);\n                        mSegmentPlayer.setSegment(nextOrder, startTime,\n                                nextSegment);\n                        mSegmentPlayer.prepareAsync();\n                    }\n                    return;\n                }\n            }\n            if (mOnCompletionListener != null) {\n                mOnCompletionListener.onCompletion(this);\n            }\n            return;\n        } catch (IllegalArgumentException e) {\n            e.printStackTrace();\n        } catch (IllegalStateException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        if (mOnErrorListener != null) {\n            mOnErrorListener.onError(this, 1, 1);\n        }\n    }"}
{"author": "andengineexamples", "file": "SoundExample.3.java", "original_string": "@Override\n            public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final ITouchArea pTouchArea, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {\n                if(pSceneTouchEvent.isActionDown()) {\n                    SoundExample.this.mExplosionSound.play();\n                }\n                return true;\n            }"}
{"author": "jfpl", "file": "ChatMessageUtil.2.java", "original_string": "public static void sendChatImage(AutoActivity ctx, String username,\n            String toUser, String toGroup, String imageId, String imageThumbId,\n            IServiceLogic iservice) {\n        AbstractCommonData acd = getChatCommonPacket(username, \"1\", toUser,\n                toGroup, iservice);\n        acd.putStringValue(\"image_id\", imageId);\n        acd.putStringValue(\"image_thumb_d\", imageThumbId);\n        ServiceController.addService(acd, ctx);\n    }"}
{"author": "seadroid", "file": "DownloadTaskInfo.0.java", "original_string": "@Override\n    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;\n        if (obj == null || (obj.getClass() != this.getClass()))\n            return false;\n        DownloadTaskInfo a = (DownloadTaskInfo) obj;\n        if (!super.equals(a))\n            return false;\n        if (a.pathInRepo == null)\n            return false;\n        return a.pathInRepo.equals(this.pathInRepo) && a.fileSize == this.fileSize && a.finished == this.finished;\n    }"}
{"author": "mthli", "file": "ClassTreeFrame.4.java", "original_string": "public DefaultMutableTreeNode addClass(Class<?> c)\n   {\n      if (c.isInterface() || c.isPrimitive()) return null;\n      DefaultMutableTreeNode node = findUserObject(c);\n      if (node != null) return node;\n      Class<?> s = c.getSuperclass();\n      DefaultMutableTreeNode parent;\n      if (s == null) parent = root;\n      else parent = addClass(s);\n      DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(c);\n      model.insertNodeInto(newNode, parent, parent.getChildCount());\n      TreePath path = new TreePath(model.getPathToRoot(newNode));\n      tree.makeVisible(path);\n      return newNode;\n   }"}
{"author": "dlna_framework", "file": "CommonLog.9.java", "original_string": "public void error(Exception ex) {\n        if (logLevel <= Log.ERROR) {\n            StringBuffer sb = new StringBuffer();\n            String name = getFunctionName();\n            StackTraceElement[] sts = ex.getStackTrace();\n            if (name != null) {\n                sb.append(name+\" - \"+ex+\"\\r\\n\");\n            } else {\n                sb.append(ex+\"\\r\\n\");\n            }\n            if (sts != null && sts.length > 0) {\n                for (StackTraceElement st:sts) {\n                    if (st != null) {\n                        sb.append(\"[ \"+st.getFileName()+\":\"+st.getLineNumber()+\" ]\\r\\n\");\n                    }\n                }\n            }\n            Log.e(tag, sb.toString());\n        }\n    }"}
{"author": "applewjg", "file": "LongestPalindromicSubstring.3.java", "original_string": "public String longestPalindrome_4(String s) {\n        int n = s.length();\n        int idx = 0, maxLen = 0;\n        StringBuffer sb = new StringBuffer();\n        sb.append('^');\n        for (int i = 0; i < n; ++i) {\n            sb.append('#');\n            sb.append(s.charAt(i));\n        }\n        sb.append(\"#$\");\n        n = 2 * n + 3;\n        int mx = 0, id = 0;\n        int[] p = new int[n];\n        Arrays.fill(p,0);\n        for (int i = 1; i < n - 1; ++i) {\n            p[i] = (mx > i) ? Math.min(p[2 * id - i], mx - i) : 0;\n            while (sb.charAt(i + 1 + p[i]) == sb.charAt(i - 1 - p[i])) ++p[i];\n            if (i + p[i] > mx) {\n                id = i; mx = i + p[i];\n            }\n            if (p[i] > maxLen) {\n                idx = i; maxLen = p[i];\n            }\n        }\n        idx = (idx - maxLen - 1) / 2;\n        return s.substring(idx, idx + maxLen);\n    }"}
{"author": "quyi", "file": "TSOperate.662.java", "original_string": "public void write(org.apache.thrift.protocol.TProtocol oprot, updateUserAppInfo_result struct) throws org.apache.thrift.TException {\n        struct.validate();\n        oprot.writeStructBegin(STRUCT_DESC);\n        if (struct.success != null) {\n          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);\n          oprot.writeI32(struct.success.getValue());\n          oprot.writeFieldEnd();\n        }\n        if (struct.ire != null) {\n          oprot.writeFieldBegin(IRE_FIELD_DESC);\n          struct.ire.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        if (struct.ue != null) {\n          oprot.writeFieldBegin(UE_FIELD_DESC);\n          struct.ue.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldStop();\n        oprot.writeStructEnd();\n      }"}
{"author": "quyi", "file": "SystemResources.50.java", "original_string": "private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n    try {\n      __isset_bitfield = 0;\n      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n    } catch (org.apache.thrift.TException te) {\n      throw new java.io.IOException(te);\n    }\n  }"}
{"author": "wak_edil", "file": "KekCoklatInfo.1.java", "original_string": "public static void main(String[] args)\n    {\n        KekCoklatInfo frame = new KekCoklatInfo();\n        frame.setTitle(\"Kek Coklat Info\");\n        frame.setSize(450,400);\n        frame.setVisible(true);\n        frame.setLocationRelativeTo(null);\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    }"}
{"author": "chweixin", "file": "DataServiceImpl.1.java", "original_string": "protected List<T> changeModel(List<K> list){\n        List<T> results = new ArrayList<>();\n        if(list != null && list.size() > 0){\n            for(K data : list){\n                T info = this.changeModel(data);\n                if(info != null){\n                    results.add(info);\n                }\n            }\n        }\n        return results;\n    }"}
{"author": "Josh_Code", "file": "PLYModelFileSaver.6.java", "original_string": "private static void printAsciiVertices(Model m, PrintStream out) throws IOException\n    { \n     int numTriangles = m.getNumberOfTriangles();\n     Triangle[] triangles = m.getTriangles();\n       for (int ti = 0; ti < numTriangles; ti++)\n       {\n           for (int tv = 0; tv < 3; tv++)\n           {\n               Vector3D v = Triangle.getVertex(triangles[ti], tv);\n               out.print(Vector3D.getSpacedVectorCoordinates(v));\n               out.print(\" 255 255 255\\n\"); }\n       }\n    }"}
{"author": "johnno1962", "file": "MouseInputAdapterProxy.10.java", "original_string": "public int hashCode() {\n        if ( !entered_hashCode_10 ) {\n            entered_hashCode_10 = true;\n            int __return = __hashCode( );\n            entered_hashCode_10 = false;\n            return __return;\n        }\n        else\n            return super.hashCode( );\n    }"}
{"author": "quyi", "file": "Sample.18.java", "original_string": "public void putToPlotsStatus(PlotsType key, CheckResultStatus val) {\n    if (this.plotsStatus == null) {\n      this.plotsStatus = new HashMap<PlotsType,CheckResultStatus>();\n    }\n    this.plotsStatus.put(key, val);\n  }"}
{"author": "weather", "file": "ExecutorDelivery.3.java", "original_string": "@Override\n    public void postError(Request<?> request, VolleyError error) {\n        request.addMarker(\"post-error\");\n        Response<?> response = Response.error(error);\n        new ResponseDeliveryRunnable(request, response, null).run();\n        }"}
{"author": "quyi", "file": "RunMonitor.42.java", "original_string": "public void read(org.apache.thrift.protocol.TProtocol iprot, RunMonitor struct) throws org.apache.thrift.TException {\n      org.apache.thrift.protocol.TField schemeField;\n      iprot.readStructBegin();\n      while (true)\n      {\n        schemeField = iprot.readFieldBegin();\n        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n          break;\n        }\n        switch (schemeField.id) {\n          case 1: if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n              struct.monitorTime = iprot.readString();\n              struct.setMonitorTimeIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          case 2: if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n              struct.screenShotPath = iprot.readString();\n              struct.setScreenShotPathIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          case 3: if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n              struct.imageContent = iprot.readString();\n              struct.setImageContentIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          case 4: if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n              struct.checkResult = iprot.readString();\n              struct.setCheckResultIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          default:\n            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n        }\n        iprot.readFieldEnd();\n      }\n      iprot.readStructEnd();\n      struct.validate();\n    }"}
{"author": "quyi", "file": "TSOperate.387.java", "original_string": "public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n      switch (field) {\n      case MISSION_ID:\n        return isSetMissionId();\n      }\n      throw new IllegalStateException();\n    }"}
{"author": "Max_Lynch", "file": "GraphicsToolbar.0.java", "original_string": "public void actionPerformed(ActionEvent e)\n        {\n            if(e.getSource() == rectButton)\n                frame.addShape(new ShapeLayerModel('r'));\n             else if(e.getSource() == circleButton)         \n                frame.addShape(new ShapeLayerModel('o'));\n             else if(e.getSource() == lineButton)           \n                frame.addShape(new ShapeLayerModel('l'));\n             else if(e.getSource() == freeButton)\n                frame.addShape(new ShapeLayerModel('f'));\n             else if(e.getSource() == swirlButton)\n                frame.addShape(new ShapeLayerModel('s'));\n        }"}
{"author": "pacman", "file": "FileHelper.9.java", "original_string": "public static long sizeOf(String fileOrPath, boolean isFile) {\n        if (isFile)\n            return FileUtils.sizeOf(new File(fileOrPath));\n        else\n            return FileUtils.sizeOfDirectory(new File(fileOrPath));\n    }"}
{"author": "quyi", "file": "ConfigModifyService.216.java", "original_string": "private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }"}
{"author": "quyi", "file": "Hardware.49.java", "original_string": "private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n    try {\n      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n    } catch (org.apache.thrift.TException te) {\n      throw new java.io.IOException(te);\n    }\n  }"}
{"author": "johnno1962", "file": "GestureAdapterProxy.1.java", "original_string": "public void gestureBegan( com.apple.eawt.event.GesturePhaseEvent arg0 ) {\n        if ( !entered_gestureBegan_1 ) {\n            entered_gestureBegan_1 = true;\n            __gestureBegan( arg0 );\n            entered_gestureBegan_1 = false;\n        }\n        else\n            super.gestureBegan( arg0 );\n    }"}
{"author": "mthli", "file": "WelcomeApplet.1.java", "original_string": "public void run()\n            {\n               setLayout(new BorderLayout());\n               JLabel label = new JLabel(getParameter(\"greeting\"), SwingConstants.CENTER);\n               label.setFont(new Font(\"Serif\", Font.BOLD, 18));\n               add(label, BorderLayout.CENTER);\n               JPanel panel = new JPanel();\n               JButton cayButton = new JButton(\"Cay Horstmann\");\n               cayButton.addActionListener(makeAction(\"http://www.horstmann.com\"));\n               panel.add(cayButton);\n               JButton garyButton = new JButton(\"Gary Cornell\");\n               garyButton.addActionListener(makeAction(\"mailto:gary_cornell@apress.com\"));\n               panel.add(garyButton);\n               add(panel, BorderLayout.SOUTH);\n            }"}
{"author": "jfpl", "file": "PushMessageReceiver.0.java", "original_string": "@Override\n    public void onBind(Context context, int errorCode, String appid,\n            String userId, String channelId, String requestId) {\n        if (errorCode == 0) {\n            Log.i(SystemUtil.LOG_MSG, \"userId: \" + userId + \", channelId:\"\n                    + channelId + \", appid:\" + appid);\n            setBind(context, true, new String[] { appid, channelId, userId });\n        }\n    }"}
{"author": "golangpkg", "file": "JavaLargeFileUploaderService.4.java", "original_string": "private void write(T modelFromContext, File modelFile) {\n        XStream xStream = new XStream();\n        FileOutputStream fs = null;\n        try {\n            fs = new FileOutputStream(modelFile);\n            xStream.toXML(modelFromContext, fs);\n        }\n        catch (FileNotFoundException e) {\n            log.error(\"cannot write to model file for \" + modelFromContext.getClass().getSimpleName() + \": \" + e.getMessage(), e);\n        }\n        finally {\n            IOUtils.closeQuietly(fs);\n        }\n    }"}
{"author": "quyi", "file": "SystemResources.1.java", "original_string": "public static _Fields findByThriftIdOrThrow(int fieldId) {\n      _Fields fields = findByThriftId(fieldId);\n      if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n      return fields;\n    }"}
{"author": "mthli", "file": "ExceptTest.1.java", "original_string": "public void run()\n            {\n               JFrame frame = new ExceptTestFrame();\n               frame.setTitle(\"ExceptTest\");   \n               frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n               frame.setVisible(true);\n            }"}
{"author": "bethrobson", "file": "Jukebox8.2.java", "original_string": "void getSongs() {\n        try {\n            File file = new File(\"SongListMore.txt\");\n            BufferedReader reader = new BufferedReader(new FileReader(file));\n            String line = null;\n            while ((line = reader.readLine()) != null) {\n                addSong(line);\n            }\n        } catch (Exception ex) { ex.printStackTrace(); }\n    }"}
{"author": "andengineexamples", "file": "AutoParallaxBackgroundExample.2.java", "original_string": "@Override\n    public Scene onCreateScene() {\n        this.mEngine.registerUpdateHandler(new FPSLogger());\n        final Scene scene = new Scene();\n        final AutoParallaxBackground autoParallaxBackground = new AutoParallaxBackground(0, 0, 0, 5);\n        final VertexBufferObjectManager vertexBufferObjectManager = this.getVertexBufferObjectManager();\n        autoParallaxBackground.attachParallaxEntity(new ParallaxEntity(0.0f, new Sprite(0, CAMERA_HEIGHT - this.mParallaxLayerBack.getHeight(), this.mParallaxLayerBack, vertexBufferObjectManager)));\n        autoParallaxBackground.attachParallaxEntity(new ParallaxEntity(-5.0f, new Sprite(0, 80, this.mParallaxLayerMid, vertexBufferObjectManager)));\n        autoParallaxBackground.attachParallaxEntity(new ParallaxEntity(-10.0f, new Sprite(0, CAMERA_HEIGHT - this.mParallaxLayerFront.getHeight(), this.mParallaxLayerFront, vertexBufferObjectManager)));\n        scene.setBackground(autoParallaxBackground);\n        final float playerX = (CAMERA_WIDTH - this.mPlayerTextureRegion.getWidth()) / 2;\n        final float playerY = CAMERA_HEIGHT - this.mPlayerTextureRegion.getHeight() - 5;\n        final AnimatedSprite player = new AnimatedSprite(playerX, playerY, this.mPlayerTextureRegion, vertexBufferObjectManager);\n        player.setScaleCenterY(this.mPlayerTextureRegion.getHeight());\n        player.setScale(2);\n        player.animate(new long[]{200, 200, 200}, 3, 5, true);\n        final AnimatedSprite enemy = new AnimatedSprite(playerX - 80, playerY, this.mEnemyTextureRegion, vertexBufferObjectManager);\n        enemy.setScaleCenterY(this.mEnemyTextureRegion.getHeight());\n        enemy.setScale(2);\n        enemy.animate(new long[]{200, 200, 200}, 3, 5, true);\n        scene.attachChild(player);\n        scene.attachChild(enemy);\n        return scene;\n    }"}
{"author": "newweb", "file": "Small.24.java", "original_string": "public Object clone(){\n        try {\n            Small small = (Small) super.clone();\n            small.supplier = (Supplier) supplier.clone();\n            return small;\n        } catch (Exception e) {\n            return null;\n        }\n    }"}
{"author": "mthli", "file": "RasterImageFrame.1.java", "original_string": "private boolean escapesToInfinity(double a, double b)\n   {\n      double x = 0.0;\n      double y = 0.0;\n      int iterations = 0;\n      while (x <= 2 && y <= 2 && iterations < MAX_ITERATIONS)\n      {\n         double xnew = x * x - y * y + a;\n         double ynew = 2 * x * y + b;\n         x = xnew;\n         y = ynew;\n         iterations++;\n      }      \n      return x > 2 || y > 2;\n   }"}
{"author": "golangpkg", "file": "ProgressCalculatorTest.0.java", "original_string": "@Test\n    public void progressCalculationTest() {\n        Assert.assertThat(Double.valueOf(30), is(progressCalculator.calculateProgress(30l, 100l)));\n        Long bigValue = 1000000000000000000l;\n        Assert.assertThat(Double.valueOf(100), is(not(progressCalculator.calculateProgress(bigValue - 1, bigValue))));\n        Assert.assertThat(Double.valueOf(100), is(progressCalculator.calculateProgress(bigValue, bigValue)));\n        Assert.assertThat(Double.valueOf(0), is(progressCalculator.calculateProgress(0l, 240l)));\n    }"}
{"author": "0opslab", "file": "RegUtil.3.java", "original_string": "public final static boolean isMatche(String str, String reg) {\n        Pattern pattern = Pattern.compile(reg);\n        Matcher isNum   = pattern.matcher(str);\n        return isNum.matches();\n    }"}
{"author": "java_project_jar", "file": "NullInputStream.10.java", "original_string": "public long skip(long numberOfBytes)\n        throws IOException\n    {\n        if(eof)\n            throw new IOException(\"Skip after end of file\");\n        if(position == size)\n            return (long)doEndOfFile();\n        position += numberOfBytes;\n        long returnLength = numberOfBytes;\n        if(position > size)\n        {\n            returnLength = numberOfBytes - (position - size);\n            position = size;\n        }\n        return returnLength;\n    }"}
{"author": "dlna_framework", "file": "HTTPServer.0.java", "original_string": "public static String getName()\n    {\n        String osName = System.getProperty(\"os.name\");\n        String osVer = System.getProperty(\"os.version\");\n        return osName + \"/\"  + osVer + \" \" + NAME + \"/\" + VERSION;\n    }"}
{"author": "lemire", "file": "RunningLengthWord.7.java", "original_string": "static void setNumberOfLiteralWords(final Buffer buffer, final int position, final long number) {\n        buffer.orWord(position, NOT_RUNNING_LENGTH_PLUS_RUNNING_BIT);\n        buffer.andWord(position, (number << (RUNNING_LENGTH_BITS + 1)) | RUNNING_LENGTH_PLUS_RUNNING_BIT);\n    }"}
{"author": "jfpl", "file": "Chat2Activity.4.java", "original_string": "private void initHistoryMsg() {\n        List<AbstractCommonData> list = query(\"get_chat_message_by_one\",\n        this.id, GlobalVariables.loginUsername, GlobalVariables.loginUsername);\n        for (AbstractCommonData acd : list) {\n            acd.putStringValue(\"load_data_type\", \"1\");\n            String content = acd.getStringValue(\"content\");\n            if (\"1\".equals(acd.getStringValue(\"msg_type\"))) {\n                acd.putStringValue(\"chat_msg\", content);\n            } else if (\"2\".equals(acd.getStringValue(\"msg_type\"))) {\n                acd.putStringValue(\"image_path\", content);\n            } else if (\"3\".equals(acd.getStringValue(\"msg_type\"))) {\n                acd.putStringValue(\"audio_url\", content);\n            } else if (\"4\".equals(acd.getStringValue(\"msg_type\"))) {\n                acd.putStringValue(\"chat_location\", content);\n                String[] arr = content.split(\"\\n\");\n                if (arr.length != 2) {\n                    String _str = arr[0];\n                    arr = new String[] { _str, \"\" };\n                }\n                acd.putObjectValue(\n                        \"tag\",\n                        new String[] { arr[0], arr[1],\n                                acd.getStringValue(\"arg1\"),\n                                acd.getStringValue(\"arg2\") });\n            }\n        }\n        this.chatListAdapter = new ChatListAdapter(this, list, this.id,\n                chatList);\n        chatList.setAdapter(this.chatListAdapter);\n        chatList.setSelection(chatList.getCount() - 1);\n    }"}
{"author": "quyi", "file": "ConfigModifyService.317.java", "original_string": "@Override\n    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof modifyEngineConfig_args)\n        return this.equals((modifyEngineConfig_args)that);\n      return false;\n    }"}
{"author": "quyi", "file": "EngineOperate.314.java", "original_string": "@Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder(\"searchApp_args(\");\n      boolean first = true;\n      sb.append(\"missionId:\");\n      if (this.missionId == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.missionId);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"userAppId:\");\n      if (this.userAppId == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.userAppId);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }"}
{"author": "waimai", "file": "MerchantCollectionServiceImpl.0.java", "original_string": "@Override\n    public void add(MerchantCollection merchantCollection) throws ServiceException {\n        if (merchantCollectionMapper.countByUserIdAndMerchantId(merchantCollection) > 0) {\n            throw new ServiceException(\"\u6536\u85cf\u4e00\u6b21\u5c31\u597d\");\n        } else {\n            merchantCollectionMapper.insert(merchantCollection);\n            merchantMapper.addCollectionCount(merchantCollection.getMerchantId());\n        }\n    }"}
{"author": "java_project_jar", "file": "OrFileFilter.4.java", "original_string": "public boolean accept(File file)\n    {\n        for(Iterator i$ = fileFilters.iterator(); i$.hasNext();)\n        {\n            IOFileFilter fileFilter = (IOFileFilter)i$.next();\n            if(fileFilter.accept(file))\n                return true;\n        }\n        return false;\n    }"}
{"author": "waimai", "file": "SaleRecordServiceImpl.2.java", "original_string": "@Override\n    public List<Goods> getGoodsRecommend(Integer size) {\n        RowBounds rowBounds = new RowBounds(0, size);\n        return saleRecordMapper.getGoodsRecommend(DateUtil.getSaleCountDate(\"3\"), rowBounds);\n    }"}
{"author": "Viscent", "file": "AttachmentProcessor.1.java", "original_string": "private void indexFile(File file) throws Exception {\n            Random rnd = new Random();\n            try {\n                Thread.sleep(rnd.nextInt(100));\n            } catch (InterruptedException e) {\n                ;\n            }\n        }"}
{"author": "seadroid", "file": "ShibbolethActivity.11.java", "original_string": "private void openAuthorizePage(String serverUrl) {\n        Intent intent = new Intent(ShibbolethActivity.this, ShibbolethAuthorizeActivity.class);\n        intent.putExtra(SHIBBOLETH_SERVER_URL, serverUrl);\n        startActivity(intent);\n        finish();\n    }"}
{"author": "andengineexamples", "file": "UnloadResourcesExample.3.java", "original_string": "@Override\n            public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {\n                if(pSceneTouchEvent.isActionDown()) {\n                    this.dispose();\n                    UnloadResourcesExample.this.mBitmapTextureAtlas.unload();\n                    this.detachSelf();\n                    return true;\n                } else {\n                    return false;\n                }\n            }"}
{"author": "applewjg", "file": "EditDistance.0.java", "original_string": "public int minDistance_1(String word1, String word2) {\n        if(word1==word2) return 0;\n        int len1 = word1.length();\n        int len2 = word2.length();\n        int[][] dp = new int[len1+1][len2+1];\n        for(int i=0;i<=len1;i++)\n            dp[i][0] = i;\n        for(int i=0;i<=len2;i++)\n            dp[0][i] = i;\n        for(int i=1;i<=len1;i++){\n            for(int j=1;j<=len2;j++){\n                if(word1.charAt(i-1)==word2.charAt(j-1)) dp[i][j] = dp[i-1][j-1];\n                else{\n                    dp[i][j] = Math.min(dp[i-1][j],Math.min(dp[i][j-1],dp[i-1][j-1]))+1;\n                }\n            }\n        }\n        return dp[len1][len2];\n    }"}
{"author": "quyi", "file": "EngineOperate.420.java", "original_string": "public void setFieldValue(_Fields field, Object value) {\n      switch (field) {\n      case SUCCESS:\n        if (value == null) {\n          unsetSuccess();\n        } else {\n          setSuccess((MissionResults)value);\n        }\n        break;\n      case IRE:\n        if (value == null) {\n          unsetIre();\n        } else {\n          setIre((com.nercis.isscp.idl.InvalidRequestException)value);\n        }\n        break;\n      case UE:\n        if (value == null) {\n          unsetUe();\n        } else {\n          setUe((com.nercis.isscp.idl.UnavailableException)value);\n        }\n        break;\n      }\n    }"}
{"author": "quyi", "file": "UnavailableException.18.java", "original_string": "@Override\n  public int compareTo(UnavailableException other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n    int lastComparison = 0;\n    lastComparison = Boolean.valueOf(isSetWhy()).compareTo(other.isSetWhy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetWhy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.why, other.why);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }"}
{"author": "andengineexamples", "file": "MenuExample.2.java", "original_string": "@Override\n    public Scene onCreateScene() {\n        this.mEngine.registerUpdateHandler(new FPSLogger());\n        this.createMenuScene();\n        this.mMainScene = new Scene();\n        this.mMainScene.setBackground(new Background(0.09804f, 0.6274f, 0.8784f));\n        final Sprite face = new Sprite(0, 0, this.mFaceTextureRegion, this.getVertexBufferObjectManager());\n        face.registerEntityModifier(new MoveModifier(30, 0, CAMERA_WIDTH - face.getWidth(), 0, CAMERA_HEIGHT - face.getHeight()));\n        this.mMainScene.attachChild(face);\n        return this.mMainScene;\n    }"}
{"author": "chweixin", "file": "DefaultWeChatMessageHandlers.3.java", "original_string": "protected synchronized BaseRespMessage createDefaultReply(String accountId){\n        logger.info(\"\u5f00\u59cb\u521b\u5efa\u9ed8\u8ba4\u56de\u590d\u6d88\u606f...\");\n        if(accountId == null || accountId.trim().isEmpty()){\n            logger.error(\"\u516c\u4f17\u53f7ID\u4e3a\u7a7a\uff0c\u65e0\u6cd5\u67e5\u8be2\u516c\u4f17\u53f7\u4e0b\u7684\u9ed8\u8ba4\u56de\u590d\uff01\");\n            return null;\n        }\n        WeChatDefaultReply defaultReply = this.weChatDefaultReplyDao.loadDefaultReply(accountId);\n        if(defaultReply == null){\n            logger.info(\"\u516c\u4f17\u53f7ID\uff1a\"+ accountId+\",\u6ca1\u6709\u8bbe\u7f6e\u9ed8\u8ba4\u56de\u590d\u6d88\u606f\uff01\");\n            return null;\n        }\n        if(defaultReply.getContent() == null || defaultReply.getContent().trim().isEmpty()){\n            logger.info(\"\u516c\u4f17\u53f7[\"+ accountId+\",\" +defaultReply.getAccount().getName()+ \"]\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u56de\u590d\u4fe1\u606f\u4e3a\u7a7a\uff01\");\n            return null;\n        }\n        String content = defaultReply.getContent();\n        logger.info(\"\u516c\u4f17\u53f7[\"+ accountId+\",\" +defaultReply.getAccount().getName()+ \"]\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u56de\u590d\u4fe1\u606f\uff1a\\r\\n\" + content);\n        BaseRespMessage  resp = RespMesssageHelper.respXmlToObject(content);\n        if(resp == null){\n                logger.info(\"\u89e3\u6790\u6210\u56de\u590d\u5bf9\u8c61\u5931\u8d25\uff0c\u5c06\u4ee5\u6587\u672c\u5f62\u5f0f\u53d1\u9001\uff01\");\n                resp = new TextRespMessage();\n                ((TextRespMessage)resp).setContent(content);\n        }\n        return resp;\n    }"}
{"author": "weijuhui", "file": "WelcomeActivity.3.java", "original_string": "@Override\n                public void onSuccess(String content) {\n                    super.onSuccess(content);\n                    try {\n                          SourceData.setUpdateResult(new UpdateResultBuild().build(content));\n                    } catch (JSONException e) {\n                        e.printStackTrace();\n                    }\n                }"}
{"author": "quyi", "file": "TSOperate.116.java", "original_string": "public void onError(Exception e) {\n            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;\n            org.apache.thrift.TBase msg;\n            updateUserAppStatus_result result = new updateUserAppStatus_result();\n            if (e instanceof com.nercis.isscp.idl.InvalidRequestException) {\n                        result.ire = (com.nercis.isscp.idl.InvalidRequestException) e;\n                        result.setIreIsSet(true);\n                        msg = result;\n            }\n            else             if (e instanceof com.nercis.isscp.idl.UnavailableException) {\n                        result.ue = (com.nercis.isscp.idl.UnavailableException) e;\n                        result.setUeIsSet(true);\n                        msg = result;\n            }\n             else \n            {\n              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;\n              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());\n            }\n            try {\n              fcall.sendResponse(fb,msg,msgType,seqid);\n              return;\n            } catch (Exception ex) {\n              LOGGER.error(\"Exception writing to internal frame buffer\", ex);\n            }\n            fb.close();\n          }"}
{"author": "mthli", "file": "SplashScreenTest.5.java", "original_string": "protected void process(List<Integer> chunks)\n         {\n            for (Integer chunk : chunks)\n            {\n               progressBar.setString(\"Loading module \" + chunk);\n               progressBar.setValue(chunk);\n               splashPanel.repaint(); }\n         }"}
{"author": "chacha", "file": "DigestUtil.3.java", "original_string": "public static boolean isPasswordEnable(String beforePwd, String afterPwd) {  \n        if (beforePwd != null && !\"\".equals(beforePwd)) {  \n            String password = digestPassword(beforePwd);  \n            return afterPwd.equals(password);  \n        } else  \n            return false;  \n    }"}
{"author": "vlc_android_macbuild", "file": "DefMediaListPlayer.29.java", "original_string": "@Override\n    public boolean onInfo(MediaPlayer mp, int what, int extra) {\n        if (mOnInfoListener != null) {\n            return mOnInfoListener.onInfo(this, what, extra);\n        }\n        return true;\n    }"}
{"author": "quyi", "file": "RunMonitor.1.java", "original_string": "public static _Fields findByThriftIdOrThrow(int fieldId) {\n      _Fields fields = findByThriftId(fieldId);\n      if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n      return fields;\n    }"}
{"author": "quyi", "file": "EngineOperate.308.java", "original_string": "public boolean equals(searchApp_args that) {\n      if (that == null)\n        return false;\n      boolean this_present_missionId = true && this.isSetMissionId();\n      boolean that_present_missionId = true && that.isSetMissionId();\n      if (this_present_missionId || that_present_missionId) {\n        if (!(this_present_missionId && that_present_missionId))\n          return false;\n        if (!this.missionId.equals(that.missionId))\n          return false;\n      }\n      boolean this_present_userAppId = true && this.isSetUserAppId();\n      boolean that_present_userAppId = true && that.isSetUserAppId();\n      if (this_present_userAppId || that_present_userAppId) {\n        if (!(this_present_userAppId && that_present_userAppId))\n          return false;\n        if (!this.userAppId.equals(that.userAppId))\n          return false;\n      }\n      return true;\n    }"}
{"author": "quyi", "file": "NodeInfo.28.java", "original_string": "public void validate() throws org.apache.thrift.TException {\n    if (hardware != null) {\n      hardware.validate();\n    }\n    if (software != null) {\n      software.validate();\n    }\n  }"}
{"author": "BrandConstantin", "file": "EnterosPositivosDivisibles.0.java", "original_string": "public static void main(String[] args) {\nScanner teclado = new Scanner(System.in);\n    System.out.println(\"Introduce un numro que sea grande\");\n    int numIntrod = teclado.nextInt();  \n    System.out.println(\"Introduce un divisor que sea mas peque\u00f1o que el \" + \n                 \" anterior\");\n    int divisor = teclado.nextInt(); \n    do {\n        for (int i = 1; i < numIntrod; i++){\n            if((i % divisor) != 0){\n                System.out.print(i + \"   \");\n            }\n        }\n    } while (numIntrod < 0);\n  }"}
{"author": "quyi", "file": "TSOperate.69.java", "original_string": "public updateUserAppInfo_result getResult(I iface, updateUserAppInfo_args args) throws org.apache.thrift.TException {\n        updateUserAppInfo_result result = new updateUserAppInfo_result();\n        try {\n          result.success = iface.updateUserAppInfo(args.missionId, args.userAppId, args.plotsStatus, args.usedPermissions, args.stcRD, args.dycRD, args.virRD);\n        } catch (com.nercis.isscp.idl.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (com.nercis.isscp.idl.UnavailableException ue) {\n          result.ue = ue;\n        }\n        return result;\n      }"}
{"author": "dlna_framework", "file": "CommonLog.4.java", "original_string": "public void verbose(Object str) {\n        if (logLevel <= Log.VERBOSE) {\n            String name = getFunctionName();\n            String ls=(name==null?str.toString():(name+\" - \"+str));\n            Log.v(tag, ls);    \n        }\n    }"}
{"author": "chao420456", "file": "IntegerDemo.0.java", "original_string": "public static void main(String[] args) {\n        System.out.println(Integer.toString(100, 2));\n        System.out.println(Integer.toString(100, 8));\n        System.out.println(Integer.toString(100, 16));\n        System.out.println(Integer.toString(100, 1));\n        System.out.println(Integer.toString(100, 100));\n        System.out.println(Integer.toString(100, 50));\n        System.out.println(Integer.toString(100, 25));\n        System.out.println(Integer.toString(100, 37));\n        System.out.println(Integer.toString(100, 32));\n        System.out.println(Integer.toString(100, 35));\n        System.out.println(Integer.toString(100, 36));\n        System.out.println(Integer.toString(100, 7));\n        System.out.println(\"----------------------\");\n        System.out.println(Integer.parseInt(\"100\", 2));\n        System.out.println(Integer.parseInt(\"100\", 8));\n        System.out.println(Integer.parseInt(\"100\", 16));\n        System.out.println(Integer.parseInt(\"300\", 12));\n    }"}
{"author": "Viscent", "file": "ExceptionHandlingExample.0.java", "original_string": "public void handle(ExecutionException e, Set<BigInteger> result) {\n        Throwable cause = e.getCause();\n        if (SubTaskFailureException.class.isInstance(cause)) {\n            @SuppressWarnings(\"rawtypes\")\n            RetryInfo retryInfo = ((SubTaskFailureException) cause).retryInfo;\n            Object subTask = retryInfo.subTask;\n            Debug.info(\"retrying subtask:\" + subTask);\n            @SuppressWarnings(\"unchecked\")\n            Callable<Set<BigInteger>> redoCmd = retryInfo.redoCommand;\n            try {\n                result.addAll(redoCmd.call());\n            } catch (Exception exception) {\n                exception.printStackTrace();\n            }\n        }\n    }"}
{"author": "jfpl", "file": "MainActivity.5.java", "original_string": "@Override\n    protected void onGridItemClick(String prxName, android.widget.GridView g,\n            View v, int position, long id) {\n        AbstractCommonData acd = (AbstractCommonData) v.getTag();\n        if (g.getId() == R.id.app_grid) {\n            String url = acd.getStringValue(\"url\");\n            Log.d(SystemUtil.LOG_MSG, url);\n            Intent intent = null;\n            if (url.startsWith(\"http://\") || url.startsWith(\"file://\")) {\n                intent = new Intent(this, WebContentActivity.class);\n                intent.putExtra(\"title\", acd.getStringValue(\"title\"));\n                intent.putExtra(\"app_id\", acd.getStringValue(\"app_id\"));\n                intent.putExtra(\"url\", url);\n            } else if (url.startsWith(\"intent://\")) {\n                intent = new Intent();\n                intent.putExtra(\"title\", acd.getStringValue(\"title\"));\n                intent.putExtra(\"busi_type\", acd.getStringValue(\"app_id\"));\n                url = url.replace(\"intent://\", \"\");\n                int index = url.lastIndexOf(\".\");\n                intent.setClassName(url.substring(0, index), url);\n            } else {\n                GlobalVariables.showToast(this, \"\u975e\u6cd5\u8def\u5f84\");\n                return;\n            }\n            startActivity(intent);\n        }\n    }"}
{"author": "andengineexamples", "file": "SpriteBatchExample.0.java", "original_string": "@Override\n    public EngineOptions onCreateEngineOptions() {\n        final Camera camera = new Camera(0, 0, CAMERA_WIDTH, CAMERA_HEIGHT);\n        return new EngineOptions(true, ScreenOrientation.LANDSCAPE_FIXED, new RatioResolutionPolicy(CAMERA_WIDTH, CAMERA_HEIGHT), camera);\n    }"}
{"author": "0opslab", "file": "ImageIOTest.0.java", "original_string": "public static BufferedImage zoomInImage(BufferedImage  originalImage, Integer times){\n        int width = originalImage.getWidth()*times;\n        int height = originalImage.getHeight()*times;\n        BufferedImage newImage = new BufferedImage(width,height,originalImage.getType());\n        Graphics g = newImage.getGraphics();\n        g.drawImage(originalImage, 0,0,width,height,null);\n        g.dispose();\n        return newImage;\n    }"}
{"author": "BrandConstantin", "file": "PositivosYnegativosConDoWhile.0.java", "original_string": "public static void main(String[] args) {   \n    Scanner teclado = new Scanner(System.in);\n    int positivos = 0;\n    int negativos = 0;\n    int contador = 0;\n    System.out.println(\"Escribe 10 numeros y te digo cuantos hay positivos y cuantos negativos\");\n    System.out.println(\"==========================================\");\n    do {\n      System.out.println(\"Escribe un numero\");\n      int num;\n      num = teclado.nextInt();\n      if (num < 0){\n        negativos++;\n      } else {\n        positivos++;\n      }\n      contador++;\n    } while (contador < 10);\n    System.out.println(\"Hay \" + positivos + \" numeros poisitivos y \" +\n      negativos + \" numeros negativos\");\n  }"}
{"author": "jfpl", "file": "VioActivity.6.java", "original_string": "@Override\n            public AbstractCommonData doSuccess(AbstractCommonData acd) {\n                update(\"update_bind_veh\", new Date().getTime(),\n                        DataConvertFactory.praseNormJson(acd).getBytes(),\n                        acd.getStringValue(\"pp_pic\"), bindUsername);\n                fillVioData(acd);\n                return acd;\n            }"}
{"author": "seadroid", "file": "ImageList.2.java", "original_string": "protected String[] whereClauseArgs() {\n        int count = ACCEPTABLE_IMAGE_TYPES.length;\n        List<String> ids = ImageManager.getAllBucketIds();\n        int idsCount = ids.size();\n        String[] result = new String[count + idsCount];\n        System.arraycopy(ACCEPTABLE_IMAGE_TYPES, 0, result, 0, count);\n        for (int i = 0; i < idsCount; i++) {\n            result[count + i] = ids.get(i);\n        }\n        return result;\n    }"}
{"author": "chacha", "file": "SocketServiceImpl.2.java", "original_string": "public LoginResponse logout(TokenLogout request) throws ChachaException {\n        LoginResponse r=new LoginResponse();\n        try {\n            String res=request.toJson();\n            String response=sender.syncRequest(res);\n            r.fromJson(response);\n        } catch (JsonMappingException e) {\n            e.printStackTrace();\n        } catch (JsonGenerationException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return r;\n    }"}
{"author": "quyi", "file": "UnavailableException.23.java", "original_string": "public void validate() throws org.apache.thrift.TException {\n    if (why == null) {\n      throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'why' was not present! Struct: \" + toString());\n    }\n    }"}
{"author": "seadroid", "file": "FileListFragment.3.java", "original_string": "@Override\n    public void onListItemClick(ListView l, View v, int position, long id) {\n        FileListAdapter adapter = (FileListAdapter) l.getAdapter();\n        if (adapter != null) {\n            SelectableFile file = adapter.getItem(position);\n            mPath = file.getAbsolutePath();\n            file.toggleSelected();\n            if (file.isFile()) {\n                FileListAdapter.Viewholder viewHolder = (FileListAdapter.Viewholder)v.getTag();\n                viewHolder.checkBox.setChecked(file.isSelected());\n            }\n            ((MultiFileChooserActivity) getActivity()).onFileChecked(file);\n        }\n    }"}
{"author": "johnno1962", "file": "MouseInputAdapterProxy.4.java", "original_string": "public void mouseEntered( java.awt.event.MouseEvent e ) {\n        if ( !entered_mouseEntered_4 ) {\n            entered_mouseEntered_4 = true;\n            __mouseEntered( e );\n            entered_mouseEntered_4 = false;\n        }\n        else\n            super.mouseEntered( e );\n    }"}
{"author": "seadroid", "file": "OpenAsDialog.1.java", "original_string": "@Override\n                    public void onClick(DialogInterface dialog, int which) {\n                        Intent intent = new Intent(Intent.ACTION_VIEW);\n                        switch (which) {\n                        case OPEN_AS_TEXT:\n                            intent.setDataAndType((Uri.fromFile(file)), \"text/*\");\n                            startActivity(intent);\n                            break;\n                        case OPEN_AS_AUDIO:\n                            intent.setDataAndType((Uri.fromFile(file)), \"audio/*\");\n                            startActivity(intent);\n                            break;\n                        case OPEN_AS_VIDEO:\n                            intent.setDataAndType((Uri.fromFile(file)), \"video/*\");\n                            startActivity(intent);\n                            break;\n                        case OPEN_AS_IMAGE:\n                            intent.setDataAndType((Uri.fromFile(file)), \"image/*\");\n                            startActivity(intent);\n                            break;\n                        case OPEN_AS_OTHER:\n                            intent.setDataAndType((Uri.fromFile(file)), \"*/*\");\n                            startActivity(intent);\n                        default:\n                            break;\n                        }\n                    }"}
{"author": "quyi", "file": "ConfigModifyService.495.java", "original_string": "@Override\n      public void write(org.apache.thrift.protocol.TProtocol prot, modifyNodeManagerConfig_args struct) throws org.apache.thrift.TException {\n        TTupleProtocol oprot = (TTupleProtocol) prot;\n        oprot.writeString(struct.nodeId);\n        oprot.writeString(struct.propertyName);\n        oprot.writeString(struct.propertyValue);\n      }"}
{"author": "mark_watson", "file": "NameFinder.3.java", "original_string": "public static void main(String[] args) throws Exception {\n        int res = ToolRunner.run(new Configuration(), new NameFinder(), args);\n        System.exit(res);\n    }"}
{"author": "seadroid", "file": "PasswordDialog.15.java", "original_string": "@Override\n    protected String getErrorFromException(SeafException e) {\n        if (e.getCode() == 400) {\n            return getString(R.string.wrong_password);\n        }\n        return e.getMessage();\n    }"}
{"author": "mark_watson", "file": "ScoredList.4.java", "original_string": "public void sort() {\n        for (int i=0, size=strings.size(); i<(size-1); i++) {\n            for (int j=i+1; j<size; j++) {\n                int score_i = ((Integer)scores.get(i)).intValue();  int score_j = ((Integer)scores.get(j)).intValue();\n                if (score_j > score_i) {\n                    scores.set(i, new Integer(score_j));\n                    scores.set(j, new Integer(score_i));\n                    String o = strings.get(i);\n                    strings.set(i, strings.get(j));\n                    strings.set(j, o);\n                }\n            }\n        }\n    }"}
{"author": "quyi", "file": "RunMonitor.45.java", "original_string": "@Override\n    public void write(org.apache.thrift.protocol.TProtocol prot, RunMonitor struct) throws org.apache.thrift.TException {\n      TTupleProtocol oprot = (TTupleProtocol) prot;\n      BitSet optionals = new BitSet();\n      if (struct.isSetMonitorTime()) {\n        optionals.set(0);\n      }\n      if (struct.isSetScreenShotPath()) {\n        optionals.set(1);\n      }\n      if (struct.isSetImageContent()) {\n        optionals.set(2);\n      }\n      if (struct.isSetCheckResult()) {\n        optionals.set(3);\n      }\n      oprot.writeBitSet(optionals, 4);\n      if (struct.isSetMonitorTime()) {\n        oprot.writeString(struct.monitorTime);\n      }\n      if (struct.isSetScreenShotPath()) {\n        oprot.writeString(struct.screenShotPath);\n      }\n      if (struct.isSetImageContent()) {\n        oprot.writeString(struct.imageContent);\n      }\n      if (struct.isSetCheckResult()) {\n        oprot.writeString(struct.checkResult);\n      }\n    }"}
{"author": "golangpkg", "file": "FileUploaderHelper.3.java", "original_string": "public void writeExceptionToResponse(final JavaFileUploaderException e, ServletResponse servletResponse)\n            throws IOException {\n        writeToResponse(new SimpleJsonObject(Integer.valueOf(e.getExceptionCodeMapping().getExceptionIdentifier()).toString()), servletResponse);\n    }"}
{"author": "sample_server", "file": "NoticeController.1.java", "original_string": "@ACL(limit = Limit.NOTICE, type = RequestType.JSON)\n    @RequestMapping(value = \"/delete\")\n    @ResponseBody\n    public String delete(String noticeId) throws IOException\n    {\n        JsonResponse result = new JsonResponse();\n        if (null == noticeId)\n        {\n            result.setMsg(\"failed\");\n        }\n        else\n        {\n            int id = Integer.valueOf(noticeId);\n            NoticeEntity notice = DaoManager.getLocalDao().select(NoticeEntity.class, id);\n            if (null == notice)\n            {\n                result.setMsg(\"failed\");\n            }\n            if (NoticeService.delete(notice))\n            {\n                result.setMsg(\"success\");\n            }\n            else\n            {\n                result.setMsg(\"failed\");\n            }\n        }\n        return result.toJson();\n    }"}
{"author": "bethrobson", "file": "QuizCardBuilder.6.java", "original_string": "private void saveFile(File file) {\n       try {\n          BufferedWriter writer = new BufferedWriter(new FileWriter(file));\n          Iterator cardIterator = cardList.iterator();\n          while (cardIterator.hasNext()) {\n             QuizCard card = (QuizCard) cardIterator.next();\n             writer.write(card.getQuestion() + \"/\");\n             writer.write(card.getAnswer() + \"\\n\");\n          }\n         writer.close();\n       } catch(IOException ex) {\n           System.out.println(\"couldn't write the cardList out\");\n           ex.printStackTrace();\n       }\n    }"}
{"author": "andengineexamples", "file": "RepeatingSpriteBackgroundExample.0.java", "original_string": "@Override\n    public EngineOptions onCreateEngineOptions() {\n        final Camera camera = new Camera(0, 0, CAMERA_WIDTH, CAMERA_HEIGHT);\n        return new EngineOptions(true, ScreenOrientation.LANDSCAPE_FIXED, new RatioResolutionPolicy(CAMERA_WIDTH, CAMERA_HEIGHT), camera);\n    }"}
{"author": "andengineexamples", "file": "DigitalOnScreenControlExample.0.java", "original_string": "@Override\n    public EngineOptions onCreateEngineOptions() {\n        this.mCamera = new Camera(0, 0, CAMERA_WIDTH, CAMERA_HEIGHT);\n        return new EngineOptions(true, ScreenOrientation.LANDSCAPE_FIXED, new RatioResolutionPolicy(CAMERA_WIDTH, CAMERA_HEIGHT), this.mCamera);\n    }"}
{"author": "0opslab", "file": "ImageUtil.2.java", "original_string": "public static BufferedImage imageShrinkRatio(BufferedImage originalImage, Integer withdRatio,Integer heightRatio){\n        if(withdRatio <= 0){\n            withdRatio =1;\n        }\n        if(heightRatio <= 0){\n            heightRatio =1;\n        }\n        int width = originalImage.getWidth()/withdRatio;\n        int height = originalImage.getHeight()/heightRatio;\n        BufferedImage newImage = new BufferedImage(width,height,originalImage.getType());\n        Graphics g = newImage.getGraphics();\n        g.drawImage(originalImage,0,0,width,height,null);\n        g.dispose();\n        return newImage;\n    }"}
{"author": "seadroid", "file": "UploadTask.3.java", "original_string": "@Override\n    protected void onProgressUpdate(Long... values) {\n        long uploaded = values[0];\n        Log.d(DEBUG_TAG, \"Uploaded \" + uploaded);\n        this.finished = uploaded;\n        uploadStateListener.onFileUploadProgress(taskID);\n    }"}
{"author": "quyi", "file": "TSOperateImpl.5.java", "original_string": "@Override\n    public Result updateUserAppInfo(String missionId, String userAppId, Map<PlotsType, CheckResultStatus> plotsStatus,\n            List<Map<String, APICheck>> usedPermissions, StaticCheckResultData stcRD, DynamicCheckResultData dycRD, VirusDetectionResultData virRD)\n            throws InvalidRequestException, UnavailableException, TException {\n        System.out.println(userAppId + plotsStatus.toString());\n        return Result.success;\n    }"}
{"author": "quyi", "file": "TSOperate.118.java", "original_string": "public void start(I iface, updateUserAppStatus_args args, org.apache.thrift.async.AsyncMethodCallback<com.nercis.isscp.idl.Result> resultHandler) throws TException {\n        iface.updateUserAppStatus(args.missionId, args.userAppId, args.plotsStatus, args.functionStatus,resultHandler);\n      }"}
{"author": "quyi", "file": "TSOperate.11.java", "original_string": "public List<com.nercis.isscp.idl.AppCheckResult> queryMission(String missionId) throws com.nercis.isscp.idl.InvalidRequestException, com.nercis.isscp.idl.UnavailableException, org.apache.thrift.TException\n    {\n      send_queryMission(missionId);\n      return recv_queryMission();\n    }"}
{"author": "dlna_framework", "file": "HTTPHeader.6.java", "original_string": "public final static String getValue(String data, String name)\n    {\n        StringReader strReader = new StringReader(data);\n        LineNumberReader lineReader = new LineNumberReader(strReader, Math.min(data.length(), MAX_LENGTH));\n        return getValue(lineReader, name);\n    }"}
{"author": "quyi", "file": "ConfigModifyService.478.java", "original_string": "public Object getFieldValue(_Fields field) {\n      switch (field) {\n      case NODE_ID:\n        return getNodeId();\n      case PROPERTY_NAME:\n        return getPropertyName();\n      case PROPERTY_VALUE:\n        return getPropertyValue();\n      }\n      throw new IllegalStateException();\n    }"}
{"author": "chweixin", "file": "WeChatAccessTokenServiceImpl.4.java", "original_string": "@Override\n    public synchronized String refreshAccessToken(String accountId) throws Exception {\n        if(accountId == null || accountId.trim().isEmpty()) return null;\n        String error = null;\n        WeChatAccount account = this.weChatAccountDao.load(WeChatAccount.class, accountId);\n        if(account == null || account.getAppId() == null || account.getAppId().trim().isEmpty()){\n            logger.error(error = \"\u672a\u627e\u5230\u516c\u4f17\u53f7\u4fe1\u606f\u6216\u672a\u914d\u7f6e\u7b2c\u4e09\u65b9\u7528\u6237\u51ed\u8bc1\u4fe1\u606f\uff01\");\n            throw new Exception(error);\n        }\n        if(this.tokenUrl == null || this.tokenUrl.trim().isEmpty()){\n            logger.error(error = \"\u672a\u6ce8\u5165tokenUrl!\");\n            throw new Exception(error);\n        }\n        String url = String.format(this.tokenUrl, account.getAppId(), account.getAppSecret());\n        logger.info(\"token\u8bf7\u6c42url:\" + url);\n        JSONObject resultObject = HttpUtil.httpsRequest(url, \"GET\", null);\n        if(resultObject == null){\n            logger.error(error = \"\u672a\u5f97\u5230\u5fae\u4fe1\u670d\u52a1\u5668\u7684\u53cd\u9988\uff01\");\n            throw new Exception(error);\n        }\n        String access_token = resultObject.getString(\"access_token\");\n        int expires_in = resultObject.getIntValue(\"expires_in\");\n        if(access_token == null || access_token.trim().isEmpty()){\n            logger.error(error = \"\u83b7\u53d6\u5fae\u4fe1\u670d\u52a1\u53cd\u9988\u4ee4\u724c\u5f02\u5e38\uff1a\"  + resultObject.toJSONString());\n            throw new Exception(error);\n        }\n        logger.info(\"\u83b7\u53d6[\" + account.getName() + \"]\u516c\u4f17\u53f7\u4ee4\u724c:\" + access_token);\n        WeChatAccessToken token = new WeChatAccessToken();\n        token.setId(UUID.randomUUID().toString());\n        token.setAccount(account);\n        token.setAccessToken(access_token);\n        token.setCreateTime(new Date());\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(token.getCreateTime());\n        calendar.add(Calendar.SECOND, expires_in);\n        token.setFailureTime(calendar.getTime());\n        this.weChatAccessTokenDao.save(token);\n        return token.getAccessToken();\n    }"}
{"author": "bethrobson", "file": "GameHelper.1.java", "original_string": "public ArrayList<String> placeDotCom(int comSize) {                 ArrayList<String> alphaCells = new ArrayList<String>();\n    String [] alphacoords = new String [comSize];      String temp = null;                                int [] coords = new int[comSize];                  int attempts = 0;                                  boolean success = false;                           int location = 0;                                  comCount++;                                        int incr = 1;                                      if ((comCount % 2) == 1) {                         incr = gridLength;                               }\n    while ( !success & attempts++ < 200 ) {             location = (int) (Math.random() * gridSize);      int x = 0;                                        success = true;                                 while (success && x < comSize) {                if (grid[location] == 0) {                    coords[x++] = location;                    location += incr;                          if (location >= gridSize){                 success = false;                         }\n             if (x>0 & (location % gridLength == 0)) {  success = false;                         }\n          } else {                                      success = false;                          }\n        }\n    }                                                   int x = 0;                                          int row = 0;\n    int column = 0;\n    while (x < comSize) {\n      grid[coords[x]] = 1;                              row = (int) (coords[x] / gridLength);             column = coords[x] % gridLength;                  temp = String.valueOf(alphabet.charAt(column));   alphaCells.add(temp.concat(Integer.toString(row)));\n      x++;\n      }\n    return alphaCells;\n   }"}
{"author": "quyi", "file": "APICheck.80.java", "original_string": "@Override\n  public boolean equals(Object that) {\n    if (that == null)\n      return false;\n    if (that instanceof APICheck)\n      return this.equals((APICheck)that);\n    return false;\n  }"}
{"author": "johnno1962", "file": "JWindowProxy.0.java", "original_string": "public void paint( java.awt.Graphics arg0 ) {\n        if ( !entered_paint_0 ) {\n            entered_paint_0 = true;\n            __paint( arg0 );\n            entered_paint_0 = false;\n        }\n        else\n            super.paint( arg0 );\n    }"}
{"author": "golangpkg", "file": "JavaLargeFileUploaderService.8.java", "original_string": "public void clearClient(UUID clientId) {\n        log.debug(\"Clearing everything including cache, session, files.\");\n        final File uuidFileParent = staticStateDirectoryManager.getUUIDFileParent(clientId);\n        fileDeleter.deleteFile(uuidFileParent);\n        staticStateManager.cache.invalidate(clientId);\n    }"}
{"author": "chacha", "file": "ChannelHelper.2.java", "original_string": "private void resizeRequestBB(int remain) {\n        if(requestBB.remaining()<remain){\n            ByteBuffer bb=ByteBuffer.allocate(requestBB.capacity()*2);\n            requestBB.flip();\n            bb.put(requestBB);\n            requestBB=bb;\n        }\n    }"}
{"author": "Asrar_Ahmed_Makrani", "file": "patronSQL.2.java", "original_string": "public void delete()\n    {\n        try\n        {\n        Statement statement = con.createStatement();\n        int rs = JOptionPane.showConfirmDialog(null, \"WARNING!! Record once deleted cannot be retrieved!! Continue with delete?\", \"CONFIRM\", JOptionPane.YES_NO_OPTION);\n        if (rs == JOptionPane.YES_OPTION)\n        {\n            String query3 = \"delete * from patronmaster \"+\n            \" WHERE id = '\" + a + \"'\";\n            int result = statement.executeUpdate(query3);\n            if (result == 1)\n            {\n                JOptionPane.showMessageDialog(null, \"del Succesful\");\n                patron_text.setText(\"\");\n                            name_text.setText(\"\");\n                            passport_text.setText(\"\");\n                            expiry_date_text.setText(\"\");\n                            reg_by_text.setText(\"\");\n                            reg_date_text.setText(\"\");\n                            textArea.setText(\"\");\n                            tel_text.setText(\"\");\n                            fax_text.setText(\"\");\n                            email_text.setText(\"\");\n                            patron_text.setEditable(true);\n                            name_text.setEditable(true);\n                            passport_text.setEditable(true);\n                            expiry_date_text.setEditable(true);\n                            reg_by_text.setEditable(true);\n                            reg_date_text.setEditable(true);\n                            textArea.setEditable(true);\n                            tel_text.setEditable(true);\n                            fax_text.setEditable(true);\n                            email_text.setEditable(true);   \n                }\n            statement.close();\n        }\n        }\n        catch (SQLException sqlex) \n        {\n        }\n    }"}
{"author": "mthli", "file": "DrawTest.2.java", "original_string": "public void paintComponent(Graphics g)\n   {\n      Graphics2D g2 = (Graphics2D) g;\n      double leftX = 100;\n      double topY = 100;\n      double width = 200;\n      double height = 150;\n      Rectangle2D rect = new Rectangle2D.Double(leftX, topY, width, height);\n      g2.draw(rect);\n      Ellipse2D ellipse = new Ellipse2D.Double();\n      ellipse.setFrame(rect);\n      g2.draw(ellipse);\n      g2.draw(new Line2D.Double(leftX, topY, leftX + width, topY + height));\n      double centerX = rect.getCenterX();\n      double centerY = rect.getCenterY();\n      double radius = 150;\n      Ellipse2D circle = new Ellipse2D.Double();\n      circle.setFrameFromCenter(centerX, centerY, centerX + radius, centerY + radius);\n      g2.draw(circle);\n   }"}
{"author": "lemire", "file": "LongArray.22.java", "original_string": "private int newSizeInWords(int number) {\n        int size = this.actualSizeInWords + number;\n        if (size >= this.buffer.length) {\n            if (size < 32768)\n                size = size * 2;\n            else if (size * 3 / 2 < size) size = Integer.MAX_VALUE;\n            else\n                size = size * 3 / 2;\n        }\n        return size;\n    }"}
{"author": "andengineexamples", "file": "MenuExample.5.java", "original_string": "protected void createMenuScene() {\n        this.mMenuScene = new MenuScene(this.mCamera);\n        final SpriteMenuItem resetMenuItem = new SpriteMenuItem(MENU_RESET, this.mMenuResetTextureRegion, this.getVertexBufferObjectManager());\n        resetMenuItem.setBlendFunction(GLES20.GL_SRC_ALPHA, GLES20.GL_ONE_MINUS_SRC_ALPHA);\n        this.mMenuScene.addMenuItem(resetMenuItem);\n        final SpriteMenuItem quitMenuItem = new SpriteMenuItem(MENU_QUIT, this.mMenuQuitTextureRegion, this.getVertexBufferObjectManager());\n        quitMenuItem.setBlendFunction(GLES20.GL_SRC_ALPHA, GLES20.GL_ONE_MINUS_SRC_ALPHA);\n        this.mMenuScene.addMenuItem(quitMenuItem);\n        this.mMenuScene.buildAnimations();\n        this.mMenuScene.setBackgroundEnabled(false);\n        this.mMenuScene.setOnMenuItemClickListener(this);\n    }"}
{"author": "pacman", "file": "MediainfoDAOImpl.3.java", "original_string": "@Override\n    public MediainfoModel findByPk(int taskid) {\n        MediainfoMappingQuery query = new MediainfoMappingQuery();\n        query.setDataSource(getDataSource());\n        query.setSql(\"SELECT * FROM mediainfo WHERE tid=?\");\n        query.declareParameter(new SqlParameter(Types.INTEGER));\n        query.compile();\n        return query.findObject(taskid);\n    }"}
{"author": "seadroid", "file": "FileMonitorService.5.java", "original_string": "@Override\n    public void onDestroy() {\n        Log.d(DEBUG_TAG, \"onDestroy\");\n        updateMgr.stop();\n        if (monitor != null) {\n            try {\n                monitor.stop();\n            } catch (Exception e) {\n                Log.d(DEBUG_TAG, \"failed to stop file monitor\");\n            }\n        }\n        if (mTransferService != null) {\n            unbindService(mTransferConnection);\n            mTransferService = null;\n        }\n        LocalBroadcastManager.getInstance(this).unregisterReceiver(transferReceiver);\n    }"}
{"author": "chweixin", "file": "WeChatContextServiceImpl.2.java", "original_string": "@Override\n    public synchronized void update(WeChatContext context) {\n        if(context == null) return;\n        String key = context.getAccountId() + \"_\" + context.getOpenId();\n        @SuppressWarnings(\"unchecked\")\n        CacheEntity<WeChatContext>  entity = (CacheEntity<WeChatContext>) CacheListHandler.getCache(key);\n        if(entity == null){\n            entity = new CacheEntity<WeChatContext>(key, context, CONST_CACHE_ValidityTime);\n        }\n        CacheListHandler.addCache(entity);\n    }"}
{"author": "quyi", "file": "StaticCheckResultData.51.java", "original_string": "public void setFieldValue(_Fields field, Object value) {\n    switch (field) {\n    case APK_MD5:\n      if (value == null) {\n        unsetApkMD5();\n      } else {\n        setApkMD5((String)value);\n      }\n      break;\n    case CHECK_DATE:\n      if (value == null) {\n        unsetCheckDate();\n      } else {\n        setCheckDate((String)value);\n      }\n      break;\n    case SENSITIVES:\n      if (value == null) {\n        unsetSensitives();\n      } else {\n        setSensitives((List<String>)value);\n      }\n      break;\n    case FEATURES_CHARACTERS:\n      if (value == null) {\n        unsetFeaturesCharacters();\n      } else {\n        setFeaturesCharacters((List<String>)value);\n      }\n      break;\n    case API_CHECK:\n      if (value == null) {\n        unsetApiCheck();\n      } else {\n        setApiCheck((List<APICheck>)value);\n      }\n      break;\n    case REPORT_PATH:\n      if (value == null) {\n        unsetReportPath();\n      } else {\n        setReportPath((String)value);\n      }\n      break;\n    case CENTER_RESULT_PATH:\n      if (value == null) {\n        unsetCenterResultPath();\n      } else {\n        setCenterResultPath((String)value);\n      }\n      break;\n    }\n  }"}
{"author": "waimai", "file": "ImageRecommendServiceImpl.1.java", "original_string": "@Override\n    public void add(MultipartFile image, ImageRecommend imageRecommend) throws ServiceException {\n        if (!image.isEmpty()) {\n            String filename = UUID.randomUUID().toString() + PathUtils.fileSuffix(image.getOriginalFilename());\n            try {\n                FileUtils.upload(image.getInputStream(), \"imageRecommend/\" + filename);\n            } catch (AuthException e) {\n                throw new ServiceException(\"\u4e0a\u4f20\u56fe\u7247\u5931\u8d25\");\n            } catch (JSONException e) {\n                throw new ServiceException(\"\u4e0a\u4f20\u56fe\u7247\u5931\u8d25\");\n            } catch (IOException e) {\n                throw new ServiceException(\"\u4e0a\u4f20\u56fe\u7247\u5931\u8d25\");\n            }\n            imageRecommend.setImage(filename);\n        }\n        Date now = new Date();\n        imageRecommend.setUpdateDate(now);\n        imageRecommend.setInsertDate(now);\n        imageRecommendMapper.insertSelective(imageRecommend);\n    }"}
{"author": "0opslab", "file": "BCConvert.0.java", "original_string": "public static String bj2qj(String src) {\n        if(StringUtil.isEmpty(src)){\n            return \"\";\n        }\n        StringBuilder buf = new StringBuilder(src.length());\n        char[] ca = src.toCharArray();\n        for (char t:ca) {\n            if (t == DBC_SPACE) {\n                buf.append(SBC_SPACE);\n            } else if ((t >= DBC_CHAR_START) && (t <= DBC_CHAR_END)) {\n                buf.append((char) (t + CONVERT_STEP));\n            } else {\n                buf.append(t);\n            }\n        }\n        return buf.toString();\n    }"}
{"author": "weijuhui", "file": "SimpleMultipartEntity.5.java", "original_string": "public void addPart(final String key, final File value, final boolean isLast) {\n        try {\n            addPart(key, value.getName(), new FileInputStream(value), isLast);\n        } catch (final FileNotFoundException e) {\n            e.printStackTrace();\n        }\n    }"}
{"author": "seadroid", "file": "CameraUploadUtil.0.java", "original_string": "@Override\n        public boolean accept(File file) {\n            final String fileName = file.getName();\n            for (String ext : IMAGE_EXTENTION) {\n                if (file.getName().endsWith(\".\" + ext)\n                        && !fileName.startsWith(HIDDEN_PREFIX))\n                    return true;\n            }\n            return false;\n        }"}
{"author": "quyi", "file": "SearchRecordInfoConsumer.0.java", "original_string": "@Override\n    public void run() {\n        while (true) {\n            if (!queue.isEmpty()) {\n                SearchRecordInfo searchRecordInfo = queue.poll();\n                new ExportExcel().exportToSearchExcel(filename,\n                        searchRecordInfo);\n                System.out.println(\"\u5199\u4e86\u6587\u4ef6\");\n            }\n        }\n    }"}
{"author": "mthli", "file": "ColorFrame.3.java", "original_string": "public void setColor()\n   {\n      try\n      {\n         int red = Integer.parseInt(redField.getText().trim());\n         int green = Integer.parseInt(greenField.getText().trim());\n         int blue = Integer.parseInt(blueField.getText().trim());\n         panel.setBackground(new Color(red, green, blue));\n      }\n      catch (NumberFormatException e)\n      {\n         }\n   }"}
{"author": "chacha", "file": "LoginToken.8.java", "original_string": "public DBObject toDbObject(){\n        BasicDBObject entity=new BasicDBObject();\n        entity.put(\"_id\", _id);\n        entity.put(\"userName\", userName);\n        entity.put(\"token\", token);\n        entity.put(\"tokenLifeTime\", tokenLifeTime);\n        return entity;\n    }"}
{"author": "chao420456", "file": "Server.4.java", "original_string": "public static void main(String[] args) {\n        Server server = new Server();\n        ServerFrame serverFrame = new ServerFrame(server);\n        server.setServerFrame(serverFrame);\n        serverFrame.setVisible(true);\n    }"}
{"author": "pengrad", "file": "BaseRequest.1.java", "original_string": "public String getMethod() {\n        String className = this.getClass().getSimpleName();\n        return Character.toLowerCase(className.charAt(0)) + className.substring(1);\n    }"}
{"author": "newweb", "file": "BxgDaoImp.7.java", "original_string": "@Override\n    public Bxg selectBxgByCondition(String name, double thickness,String norms,int brandID) {\n        Query query = sessionFactory.getCurrentSession().createSQLQuery(\"select * from t_bxg where name=? and thickness=? and norms=? and materialbrandID=?\")\n                .addEntity(Bxg.class);\n        query.setString(0, name);\n        query.setDouble(1, thickness);\n        query.setString(2, norms);\n        query.setInteger(3, brandID);\n        return (Bxg) query.uniqueResult();\n    }"}
{"author": "quyi", "file": "ConfigModifyService.11.java", "original_string": "public com.nercis.isscp.idl.Result modifyEngineConfig(String propertyName, String propertyValue) throws com.nercis.isscp.idl.InvalidRequestException, com.nercis.isscp.idl.UnavailableException, org.apache.thrift.TException\n    {\n      send_modifyEngineConfig(propertyName, propertyValue);\n      return recv_modifyEngineConfig();\n    }"}
{"author": "seadroid", "file": "DocumentIdParser.1.java", "original_string": "public static String getRepoIdFromId(String documentId) {\n        String[] list = documentId.split(DOC_SEPERATOR, 3);\n        if (list.length>1) {\n            String repoId = list[1];\n            return repoId;\n        }\n        return \"\";\n    }"}
{"author": "brianway", "file": "Run4_waitHasParam2.1.java", "original_string": "public void run() {\n            synchronized (lock) {\n                System.out.println(\"notify begin timer=\" + System.currentTimeMillis());\n                lock.notify();\n                System.out.println(\"notify end timer=\" + System.currentTimeMillis());\n            }\n        }"}
{"author": "johnno1962", "file": "WindowAdapterProxy.1.java", "original_string": "public void windowClosing( java.awt.event.WindowEvent e ) {\n        if ( !entered_windowClosing_1 ) {\n            entered_windowClosing_1 = true;\n            __windowClosing( e );\n            entered_windowClosing_1 = false;\n        }\n        else\n            super.windowClosing( e );\n    }"}
{"author": "chweixin", "file": "WeChatAccessTokenServiceImpl.6.java", "original_string": "@Override\n    protected WeChatAccessTokenInfo changeModel(WeChatAccessToken data) {\n        if(data == null) return null;\n        WeChatAccessTokenInfo info = new WeChatAccessTokenInfo();\n        BeanUtils.copyProperties(data, info);\n        if(data.getAccount() != null){\n            info.setAccountId(data.getAccount().getId());\n            info.setAccountName(data.getAccount().getName());\n        }\n        return info;\n    }"}
{"author": "quyi", "file": "StaticCheckResultData.53.java", "original_string": "public boolean isSet(_Fields field) {\n    if (field == null) {\n      throw new IllegalArgumentException();\n    }\n    switch (field) {\n    case APK_MD5:\n      return isSetApkMD5();\n    case CHECK_DATE:\n      return isSetCheckDate();\n    case SENSITIVES:\n      return isSetSensitives();\n    case FEATURES_CHARACTERS:\n      return isSetFeaturesCharacters();\n    case API_CHECK:\n      return isSetApiCheck();\n    case REPORT_PATH:\n      return isSetReportPath();\n    case CENTER_RESULT_PATH:\n      return isSetCenterResultPath();\n    }\n    throw new IllegalStateException();\n  }"}
{"author": "chao420456", "file": "FileDemo.0.java", "original_string": "public static void main(String[] args) throws IOException {\n        File file = new File(\"d:\\\\a.txt\");\n        System.out.println(\"createNewFile:\" + file.createNewFile());\n        File file2 = new File(\"d:\\\\demo\");\n        System.out.println(\"mkdir:\" + file2.mkdir());\n        File file4 = new File(\"d:\\\\aaa\");\n        File file5 = new File(\"d:\\\\aaa\\\\bbb\");\n        System.out.println(\"mkdir:\" + file4.mkdir());\n        System.out.println(\"mkdir:\" + file5.mkdir());\n        File file6 = new File(\"d:\\\\ccc\\\\dddd\\\\eee\\\\fff\");\n        System.out.println(\"mkdirs:\" + file6.mkdirs());\n        File file7 = new File(\"d:\\\\aaa\\\\bbb\\\\ccc.txt\");\n        System.out.println(\"mkdir:\" + file7.mkdir());\n    }"}
{"author": "quyi", "file": "EngineOperate.456.java", "original_string": "public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);\n    }"}
{"author": "jfpl", "file": "SampleStorageUtil.0.java", "original_string": "public static void saveKeyValue(Context ctx, String key, String value) {\n        SharedPreferences sp = PreferenceManager\n                .getDefaultSharedPreferences(ctx);\n        Editor editor = sp.edit();\n        editor.putString(key, value);\n        editor.commit();\n    }"}
{"author": "seadroid", "file": "Avatar.8.java", "original_string": "@Override\n    public String toString() {\n        return Objects.toStringHelper(this)\n                .add(\"signature\", signature)\n                .add(\"url\", url)\n                .add(\"mtime\", mtime)\n                .toString();\n    }"}
{"author": "quyi", "file": "EngineOperate.620.java", "original_string": "@Override\n      public void read(org.apache.thrift.protocol.TProtocol prot, ruleSync_args struct) throws org.apache.thrift.TException {\n        TTupleProtocol iprot = (TTupleProtocol) prot;\n        {\n          org.apache.thrift.protocol.TList _list69 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());\n          struct.rules = new ArrayList<com.nercis.isscp.idl.rules.Rules>(_list69.size);\n          for (int _i70 = 0; _i70 < _list69.size; ++_i70)\n          {\n            com.nercis.isscp.idl.rules.Rules _elem71;\n            _elem71 = new com.nercis.isscp.idl.rules.Rules();\n            _elem71.read(iprot);\n            struct.rules.add(_elem71);\n          }\n        }\n        struct.setRulesIsSet(true);\n      }"}
{"author": "Tran_Dinh_Hop", "file": "Dictionary.3.java", "original_string": "public boolean hasEntry(byte[] ba) \n    { \n        int hashCode = getHashCode(ba); \n        if(data[hashCode] == null) \n        { \n            return false; \n        } \n        else \n        { \n            HashNode current = data[hashCode]; \n            boolean found = current.hasEntry(ba); \n            while(current.getNext() != null && found == false) \n            { \n                current = current.getNext(); \n                found = current.hasEntry(ba); \n            } \n            return found; \n        } \n    }"}
{"author": "quyi", "file": "TSOperate.741.java", "original_string": "public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n      switch (field) {\n      case SUCCESS:\n        return isSetSuccess();\n      case IRE:\n        return isSetIre();\n      case UE:\n        return isSetUe();\n      }\n      throw new IllegalStateException();\n    }"}
{"author": "quyi", "file": "TSOperate.698.java", "original_string": "public Object getFieldValue(_Fields field) {\n      switch (field) {\n      case MISSION_ID:\n        return getMissionId();\n      case USER_APP_ID:\n        return getUserAppId();\n      case PLOTS_STATUS:\n        return getPlotsStatus();\n      case FUNCTION_STATUS:\n        return getFunctionStatus();\n      }\n      throw new IllegalStateException();\n    }"}
{"author": "java_project_jar", "file": "AndFileFilter.6.java", "original_string": "public String toString()\n    {\n        StringBuilder buffer = new StringBuilder();\n        buffer.append(super.toString());\n        buffer.append(\"(\");\n        if(fileFilters != null)\n        {\n            for(int i = 0; i < fileFilters.size(); i++)\n            {\n                if(i > 0)\n                    buffer.append(\",\");\n                Object filter = fileFilters.get(i);\n                buffer.append(filter != null ? filter.toString() : \"null\");\n            }\n        }\n        buffer.append(\")\");\n        return buffer.toString();\n    }"}
{"author": "quyi", "file": "TSOperate.405.java", "original_string": "public static _Fields findByThriftId(int fieldId) {\n        switch(fieldId) {\n          case 0: return SUCCESS;\n          case 1: return IRE;\n          case 2: return UE;\n          default:\n            return null;\n        }\n      }"}
{"author": "sample_server", "file": "NoticeController.0.java", "original_string": "@ACL(limit = Limit.NOTICE)\n    @RequestMapping(value = \"/\")\n    public void notice(Map<String, Object> map)\n    {\n        List<NoticeEntity> list = DaoManager.getLocalDao().selectList(NoticeEntity.class);\n        map.put(\"data\", list);\n        Collection<ZoneEntity> zoneEntityList = ZoneEntityManager.getInstance().getAllZoneEntiry();\n        map.put(\"zones\", zoneEntityList);\n    }"}
{"author": "quyi", "file": "ConfigModifyService.241.java", "original_string": "@Override\n    public int compareTo(reportNodeManagerConfig_args other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      lastComparison = Boolean.valueOf(isSetNodeId()).compareTo(other.isSetNodeId());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetNodeId()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nodeId, other.nodeId);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }"}
{"author": "jfpl", "file": "PushMessageReceiver.10.java", "original_string": "private void sendNotify(Context context, AbstractCommonData backAcd,\n            String title, String content) {\n        NotificationManager notifyManager = (NotificationManager) context\n                .getSystemService(Context.NOTIFICATION_SERVICE);\n        int icon = R.drawable.ic_launcher;\n        CharSequence tickerText = context.getString(R.string.app_name);\n        long when = System.currentTimeMillis();\n        Notification notification = new Notification(icon, tickerText, when);\n        Intent intent = new Intent(context, MainActivity.class);\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK\n                | Intent.FLAG_ACTIVITY_SINGLE_TOP);\n        intent.putExtra(\"new_msg\", DataConvertFactory.praseNormJson(backAcd));\n        PendingIntent contentIntent = PendingIntent.getActivity(context,\n                (int) System.currentTimeMillis(), intent, 0);\n        notification.setLatestEventInfo(context, title, content, contentIntent);\n        notifyManager.notify(0, notification);\n    }"}
{"author": "newweb", "file": "SmallDaoImp.7.java", "original_string": "@Override\n    public Small selectSmallByName(String name) {\n        Query query = sessionFactory.getCurrentSession().createSQLQuery(\"select * from t_small where name=?\")\n                .addEntity(Small.class);\n        query.setString(0, name);\n        return (Small) query.uniqueResult();\n    }"}
{"author": "weijuhui", "file": "EditActivity_.18.java", "original_string": "public void startForResult(int requestCode) {\n            if (context_ instanceof Activity) {\n                ((Activity) context_).startActivityForResult(intent_, requestCode);\n            } else {\n                context_.startActivity(intent_);\n            }\n        }"}
{"author": "mark_watson", "file": "BreadthFirstSearch.0.java", "original_string": "public int [] findPath(int start_node, int goal_node) { System.out.println(\"Entered BreadthFirstSearch.findPath(\" +\n               start_node + \", \" + goal_node + \")\");\n    boolean [] alreadyVisitedFlag = new boolean[numNodes];\n    int [] predecessor = new int[numNodes];\n    IntQueue queue = new IntQueue(numNodes + 2);\n    for (int i=0; i<numNodes; i++) {\n        alreadyVisitedFlag[i] = false;\n        predecessor[i] = -1;\n    }\n    alreadyVisitedFlag[start_node] = true;\n    queue.addToBackOfQueue(start_node);\nouter:  while (queue.isEmpty() == false) {\n        int head = queue.peekAtFrontOfQueue();\n        int [] connected = connected_nodes(head);\n        if (connected != null) {\n        for (int i=0; i<connected.length; i++) {\n            if (alreadyVisitedFlag[connected[i]] == false) {\n            predecessor[connected[i]] = head;\n            queue.addToBackOfQueue(connected[i]);\n            if (connected[i] == goal_node) break outer; }\n        }\n        alreadyVisitedFlag[head] = true;\n        queue.removeFromQueue(); }\n    }\n    int [] ret = new int[numNodes + 1];\n    int count = 0;\n    ret[count++] = goal_node;\n    for (int i=0; i<numNodes; i++) {\n        ret[count] = predecessor[ret[count - 1]];\n        count++;\n        if (ret[count - 1] == start_node)  break;  }\n    int [] ret2 = new int[count];\n    for (int i=0; i<count; i++) {\n        ret2[i] = ret[count - 1 - i];\n    }\n    return ret2;\n    }"}
{"author": "lemire", "file": "UniformDataGenerator.2.java", "original_string": "public int[] generateUniform(int N, int Max) {\n        if (N * 2 > Max) {\n            return negate(generateUniform(Max - N, Max), Max);\n        }\n        if (2048 * N > Max)\n            return generateUniformBitmap(N, Max);\n        return generateUniformHash(N, Max);\n    }"}
{"author": "golangpkg", "file": "JLFUListenerPropagatorTest.4.java", "original_string": "@Override\n            public void onClientBack(UUID clientId) {\n                try {\n                    Thread.sleep(10000);\n                }\n                catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                Assert.fail();\n            }"}
{"author": "waimai", "file": "UGoodsCollectionController.3.java", "original_string": "@RequestMapping(\"/isExist\")\n    public @ResponseBody Map<String, Object> isExist(GoodsCollection goodsCollection) {\n        Map<String, Object> map = new HashMap<String, Object>();\n        if (goodsCollectionService.isExist(goodsCollection)) {\n            map.put(Constants.RESULT_CODE, \"1\");\n        } else {\n            map.put(Constants.RESULT_CODE, \"0\");\n        }\n        return map;\n    }"}
{"author": "quyi", "file": "ConfigModifyService.22.java", "original_string": "public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {\n        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage(\"reportEngineConfig\", org.apache.thrift.protocol.TMessageType.CALL, 0));\n        reportEngineConfig_args args = new reportEngineConfig_args();\n        args.write(prot);\n        prot.writeMessageEnd();\n      }"}
{"author": "applewjg", "file": "BinaryTreeMaximumPathSum.0.java", "original_string": "public int maxPathSum(TreeNode root) {\n        int[] res = new int[1];\n        res[0] = Integer.MIN_VALUE;\n        maxPathSumRe(root, res);\n        return res[0];\n    }"}
{"author": "Josh_Code", "file": "Vector3D.0.java", "original_string": "public static Vector3D getFromCoordinates(double x, double y, double z)\n    {\n        Vector3D result = new Vector3D();\n        result.x = x;\n        result.y = y;\n        result.z = z;\n        return result;\n    }"}
{"author": "Viscent", "file": "AsyncTask.1.java", "original_string": "@Override\n                public void rejectedExecution(Runnable r, ThreadPoolExecutor executor) {\n                    if (!executor.isShutdown()) {\n                        try {\n                            executor.getQueue().put(r);\n                        } catch (InterruptedException e) {\n                            ;\n                        }\n                    }\n                }"}
